// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: bilibili/app/viewunite/pgcanymodel.proto

package viewunite

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
type Earphone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	ProductModel string `protobuf:"bytes,1,opt,name=product_model,json=productModel,proto3" json:"product_model,omitempty"`
	//
	LikeToastText string `protobuf:"bytes,2,opt,name=like_toast_text,json=likeToastText,proto3" json:"like_toast_text,omitempty"`
	//
	SwitchToastText string `protobuf:"bytes,3,opt,name=switch_toast_text,json=switchToastText,proto3" json:"switch_toast_text,omitempty"`
	//
	LikeToastVoice string `protobuf:"bytes,4,opt,name=like_toast_voice,json=likeToastVoice,proto3" json:"like_toast_voice,omitempty"`
}

func (x *Earphone) Reset() {
	*x = Earphone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Earphone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Earphone) ProtoMessage() {}

func (x *Earphone) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Earphone.ProtoReflect.Descriptor instead.
func (*Earphone) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{0}
}

func (x *Earphone) GetProductModel() string {
	if x != nil {
		return x.ProductModel
	}
	return ""
}

func (x *Earphone) GetLikeToastText() string {
	if x != nil {
		return x.LikeToastText
	}
	return ""
}

func (x *Earphone) GetSwitchToastText() string {
	if x != nil {
		return x.SwitchToastText
	}
	return ""
}

func (x *Earphone) GetLikeToastVoice() string {
	if x != nil {
		return x.LikeToastVoice
	}
	return ""
}

//
type EarphoneConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	SpPhones []*Earphone `protobuf:"bytes,1,rep,name=sp_phones,json=spPhones,proto3" json:"sp_phones,omitempty"`
}

func (x *EarphoneConf) Reset() {
	*x = EarphoneConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarphoneConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarphoneConf) ProtoMessage() {}

func (x *EarphoneConf) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarphoneConf.ProtoReflect.Descriptor instead.
func (*EarphoneConf) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{1}
}

func (x *EarphoneConf) GetSpPhones() []*Earphone {
	if x != nil {
		return x.SpPhones
	}
	return nil
}

//
type MultiViewInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	IsMultiViewSeason bool `protobuf:"varint,1,opt,name=is_multi_view_season,json=isMultiViewSeason,proto3" json:"is_multi_view_season,omitempty"`
	//
	ChangingDance string `protobuf:"bytes,2,opt,name=changing_dance,json=changingDance,proto3" json:"changing_dance,omitempty"`
}

func (x *MultiViewInfo) Reset() {
	*x = MultiViewInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiViewInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiViewInfo) ProtoMessage() {}

func (x *MultiViewInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiViewInfo.ProtoReflect.Descriptor instead.
func (*MultiViewInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{2}
}

func (x *MultiViewInfo) GetIsMultiViewSeason() bool {
	if x != nil {
		return x.IsMultiViewSeason
	}
	return false
}

func (x *MultiViewInfo) GetChangingDance() string {
	if x != nil {
		return x.ChangingDance
	}
	return ""
}

//
type OgvData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	MediaId int32 `protobuf:"varint,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	//
	SeasonId int64 `protobuf:"varint,2,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	//
	SeasonType int32 `protobuf:"varint,3,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
	//
	ShowSeasonType int32 `protobuf:"varint,4,opt,name=show_season_type,json=showSeasonType,proto3" json:"show_season_type,omitempty"`
	//
	Rights *Rights `protobuf:"bytes,5,opt,name=rights,proto3" json:"rights,omitempty"`
	//
	UserStatus *UserStatus `protobuf:"bytes,6,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`
	//
	Aid int64 `protobuf:"varint,7,opt,name=aid,proto3" json:"aid,omitempty"`
	//
	Stat *Stat `protobuf:"bytes,8,opt,name=stat,proto3" json:"stat,omitempty"`
	//
	Mode int32 `protobuf:"varint,9,opt,name=mode,proto3" json:"mode,omitempty"`
	//
	Publish *Publish `protobuf:"bytes,10,opt,name=publish,proto3" json:"publish,omitempty"`
	//
	PlayStrategy *PlayStrategy `protobuf:"bytes,11,opt,name=play_strategy,json=playStrategy,proto3" json:"play_strategy,omitempty"`
	//
	MultiViewInfo *MultiViewInfo `protobuf:"bytes,12,opt,name=multi_view_info,json=multiViewInfo,proto3" json:"multi_view_info,omitempty"`
	//
	OgvSwitch *OgvSwitch `protobuf:"bytes,13,opt,name=ogv_switch,json=ogvSwitch,proto3" json:"ogv_switch,omitempty"`
	//
	TotalEp int32 `protobuf:"varint,14,opt,name=total_ep,json=totalEp,proto3" json:"total_ep,omitempty"`
	//
	NewEp *NewEp `protobuf:"bytes,15,opt,name=new_ep,json=newEp,proto3" json:"new_ep,omitempty"`
	//
	Reserve *Reserve `protobuf:"bytes,16,opt,name=reserve,proto3" json:"reserve,omitempty"`
	//
	Status int32 `protobuf:"varint,17,opt,name=status,proto3" json:"status,omitempty"`
	//
	ActivityFloatLayer []*PlayFloatLayerActivity `protobuf:"bytes,18,rep,name=activity_float_layer,json=activityFloatLayer,proto3" json:"activity_float_layer,omitempty"`
	//
	EarphoneConf *EarphoneConf `protobuf:"bytes,19,opt,name=earphone_conf,json=earphoneConf,proto3" json:"earphone_conf,omitempty"`
	//
	Cover string `protobuf:"bytes,20,opt,name=cover,proto3" json:"cover,omitempty"`
	//
	SquareCover string `protobuf:"bytes,21,opt,name=square_cover,json=squareCover,proto3" json:"square_cover,omitempty"`
	//
	ShareUrl string `protobuf:"bytes,22,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	//
	ShortLink string `protobuf:"bytes,23,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"`
	//
	Title string `protobuf:"bytes,24,opt,name=title,proto3" json:"title,omitempty"`
	//
	HorizontalCover169 string `protobuf:"bytes,25,opt,name=horizontal_cover169,json=horizontalCover169,proto3" json:"horizontal_cover169,omitempty"`
	//
	HorizontalCover1610 string `protobuf:"bytes,26,opt,name=horizontal_cover1610,json=horizontalCover1610,proto3" json:"horizontal_cover1610,omitempty"`
	//
	HasCanPlayEp int32 `protobuf:"varint,27,opt,name=has_can_play_ep,json=hasCanPlayEp,proto3" json:"has_can_play_ep,omitempty"`
}

func (x *OgvData) Reset() {
	*x = OgvData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvData) ProtoMessage() {}

func (x *OgvData) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvData.ProtoReflect.Descriptor instead.
func (*OgvData) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{3}
}

func (x *OgvData) GetMediaId() int32 {
	if x != nil {
		return x.MediaId
	}
	return 0
}

func (x *OgvData) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *OgvData) GetSeasonType() int32 {
	if x != nil {
		return x.SeasonType
	}
	return 0
}

func (x *OgvData) GetShowSeasonType() int32 {
	if x != nil {
		return x.ShowSeasonType
	}
	return 0
}

func (x *OgvData) GetRights() *Rights {
	if x != nil {
		return x.Rights
	}
	return nil
}

func (x *OgvData) GetUserStatus() *UserStatus {
	if x != nil {
		return x.UserStatus
	}
	return nil
}

func (x *OgvData) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *OgvData) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *OgvData) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *OgvData) GetPublish() *Publish {
	if x != nil {
		return x.Publish
	}
	return nil
}

func (x *OgvData) GetPlayStrategy() *PlayStrategy {
	if x != nil {
		return x.PlayStrategy
	}
	return nil
}

func (x *OgvData) GetMultiViewInfo() *MultiViewInfo {
	if x != nil {
		return x.MultiViewInfo
	}
	return nil
}

func (x *OgvData) GetOgvSwitch() *OgvSwitch {
	if x != nil {
		return x.OgvSwitch
	}
	return nil
}

func (x *OgvData) GetTotalEp() int32 {
	if x != nil {
		return x.TotalEp
	}
	return 0
}

func (x *OgvData) GetNewEp() *NewEp {
	if x != nil {
		return x.NewEp
	}
	return nil
}

func (x *OgvData) GetReserve() *Reserve {
	if x != nil {
		return x.Reserve
	}
	return nil
}

func (x *OgvData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *OgvData) GetActivityFloatLayer() []*PlayFloatLayerActivity {
	if x != nil {
		return x.ActivityFloatLayer
	}
	return nil
}

func (x *OgvData) GetEarphoneConf() *EarphoneConf {
	if x != nil {
		return x.EarphoneConf
	}
	return nil
}

func (x *OgvData) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *OgvData) GetSquareCover() string {
	if x != nil {
		return x.SquareCover
	}
	return ""
}

func (x *OgvData) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

func (x *OgvData) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

func (x *OgvData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OgvData) GetHorizontalCover169() string {
	if x != nil {
		return x.HorizontalCover169
	}
	return ""
}

func (x *OgvData) GetHorizontalCover1610() string {
	if x != nil {
		return x.HorizontalCover1610
	}
	return ""
}

func (x *OgvData) GetHasCanPlayEp() int32 {
	if x != nil {
		return x.HasCanPlayEp
	}
	return 0
}

//
type OgvSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	ReduceShortTitleSpacing int32 `protobuf:"varint,1,opt,name=reduce_short_title_spacing,json=reduceShortTitleSpacing,proto3" json:"reduce_short_title_spacing,omitempty"`
	//
	MergePositionSectionForCinema int32 `protobuf:"varint,2,opt,name=merge_position_section_for_cinema,json=mergePositionSectionForCinema,proto3" json:"merge_position_section_for_cinema,omitempty"`
	//
	MergePreviewSection int32 `protobuf:"varint,3,opt,name=merge_preview_section,json=mergePreviewSection,proto3" json:"merge_preview_section,omitempty"`
	//
	EnableShowVtInfo int32 `protobuf:"varint,4,opt,name=enable_show_vt_info,json=enableShowVtInfo,proto3" json:"enable_show_vt_info,omitempty"`
}

func (x *OgvSwitch) Reset() {
	*x = OgvSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvSwitch) ProtoMessage() {}

func (x *OgvSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvSwitch.ProtoReflect.Descriptor instead.
func (*OgvSwitch) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{4}
}

func (x *OgvSwitch) GetReduceShortTitleSpacing() int32 {
	if x != nil {
		return x.ReduceShortTitleSpacing
	}
	return 0
}

func (x *OgvSwitch) GetMergePositionSectionForCinema() int32 {
	if x != nil {
		return x.MergePositionSectionForCinema
	}
	return 0
}

func (x *OgvSwitch) GetMergePreviewSection() int32 {
	if x != nil {
		return x.MergePreviewSection
	}
	return 0
}

func (x *OgvSwitch) GetEnableShowVtInfo() int32 {
	if x != nil {
		return x.EnableShowVtInfo
	}
	return 0
}

// 播放器浮层广告(?)
type PlayFloatLayerActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	//
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	//
	AdBadgeType int32 `protobuf:"varint,4,opt,name=ad_badge_type,json=adBadgeType,proto3" json:"ad_badge_type,omitempty"`
	//
	Link string `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	//
	PicUrl string `protobuf:"bytes,6,opt,name=pic_url,json=picUrl,proto3" json:"pic_url,omitempty"`
	//
	PicAnimaUrl string `protobuf:"bytes,7,opt,name=pic_anima_url,json=picAnimaUrl,proto3" json:"pic_anima_url,omitempty"`
	//
	Badge *BadgeInfo `protobuf:"bytes,8,opt,name=badge,proto3" json:"badge,omitempty"`
	//
	ShowRateTime int64 `protobuf:"varint,9,opt,name=show_rate_time,json=showRateTime,proto3" json:"show_rate_time,omitempty"`
}

func (x *PlayFloatLayerActivity) Reset() {
	*x = PlayFloatLayerActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayFloatLayerActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayFloatLayerActivity) ProtoMessage() {}

func (x *PlayFloatLayerActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayFloatLayerActivity.ProtoReflect.Descriptor instead.
func (*PlayFloatLayerActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{5}
}

func (x *PlayFloatLayerActivity) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayFloatLayerActivity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PlayFloatLayerActivity) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PlayFloatLayerActivity) GetAdBadgeType() int32 {
	if x != nil {
		return x.AdBadgeType
	}
	return 0
}

func (x *PlayFloatLayerActivity) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *PlayFloatLayerActivity) GetPicUrl() string {
	if x != nil {
		return x.PicUrl
	}
	return ""
}

func (x *PlayFloatLayerActivity) GetPicAnimaUrl() string {
	if x != nil {
		return x.PicAnimaUrl
	}
	return ""
}

func (x *PlayFloatLayerActivity) GetBadge() *BadgeInfo {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *PlayFloatLayerActivity) GetShowRateTime() int64 {
	if x != nil {
		return x.ShowRateTime
	}
	return 0
}

//
type PlayStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Strategies []string `protobuf:"bytes,1,rep,name=strategies,proto3" json:"strategies,omitempty"`
	//
	RecommendShowStrategy int32 `protobuf:"varint,2,opt,name=recommend_show_strategy,json=recommendShowStrategy,proto3" json:"recommend_show_strategy,omitempty"`
	//
	AutoPlayToast string `protobuf:"bytes,3,opt,name=auto_play_toast,json=autoPlayToast,proto3" json:"auto_play_toast,omitempty"`
}

func (x *PlayStrategy) Reset() {
	*x = PlayStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayStrategy) ProtoMessage() {}

func (x *PlayStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayStrategy.ProtoReflect.Descriptor instead.
func (*PlayStrategy) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{6}
}

func (x *PlayStrategy) GetStrategies() []string {
	if x != nil {
		return x.Strategies
	}
	return nil
}

func (x *PlayStrategy) GetRecommendShowStrategy() int32 {
	if x != nil {
		return x.RecommendShowStrategy
	}
	return 0
}

func (x *PlayStrategy) GetAutoPlayToast() string {
	if x != nil {
		return x.AutoPlayToast
	}
	return ""
}

//
type Publish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	PubTime string `protobuf:"bytes,1,opt,name=pub_time,json=pubTime,proto3" json:"pub_time,omitempty"`
	//
	PubTimeShow string `protobuf:"bytes,2,opt,name=pub_time_show,json=pubTimeShow,proto3" json:"pub_time_show,omitempty"`
	//
	IsStarted int32 `protobuf:"varint,3,opt,name=is_started,json=isStarted,proto3" json:"is_started,omitempty"`
	//
	IsFinish int32 `protobuf:"varint,4,opt,name=is_finish,json=isFinish,proto3" json:"is_finish,omitempty"`
	//
	Weekday int32 `protobuf:"varint,5,opt,name=weekday,proto3" json:"weekday,omitempty"`
	//
	ReleaseDateShow string `protobuf:"bytes,6,opt,name=release_date_show,json=releaseDateShow,proto3" json:"release_date_show,omitempty"`
	//
	TimeLengthShow string `protobuf:"bytes,7,opt,name=time_length_show,json=timeLengthShow,proto3" json:"time_length_show,omitempty"`
	//
	UnknowPubDate int32 `protobuf:"varint,8,opt,name=unknow_pub_date,json=unknowPubDate,proto3" json:"unknow_pub_date,omitempty"`
	//
	UpdateInfoDesc string `protobuf:"bytes,9,opt,name=update_info_desc,json=updateInfoDesc,proto3" json:"update_info_desc,omitempty"`
}

func (x *Publish) Reset() {
	*x = Publish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publish) ProtoMessage() {}

func (x *Publish) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publish.ProtoReflect.Descriptor instead.
func (*Publish) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{7}
}

func (x *Publish) GetPubTime() string {
	if x != nil {
		return x.PubTime
	}
	return ""
}

func (x *Publish) GetPubTimeShow() string {
	if x != nil {
		return x.PubTimeShow
	}
	return ""
}

func (x *Publish) GetIsStarted() int32 {
	if x != nil {
		return x.IsStarted
	}
	return 0
}

func (x *Publish) GetIsFinish() int32 {
	if x != nil {
		return x.IsFinish
	}
	return 0
}

func (x *Publish) GetWeekday() int32 {
	if x != nil {
		return x.Weekday
	}
	return 0
}

func (x *Publish) GetReleaseDateShow() string {
	if x != nil {
		return x.ReleaseDateShow
	}
	return ""
}

func (x *Publish) GetTimeLengthShow() string {
	if x != nil {
		return x.TimeLengthShow
	}
	return ""
}

func (x *Publish) GetUnknowPubDate() int32 {
	if x != nil {
		return x.UnknowPubDate
	}
	return 0
}

func (x *Publish) GetUpdateInfoDesc() string {
	if x != nil {
		return x.UpdateInfoDesc
	}
	return ""
}

//
type Reserve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Episodes []*ViewEpisode `protobuf:"bytes,1,rep,name=episodes,proto3" json:"episodes,omitempty"`
	//
	Tip string `protobuf:"bytes,2,opt,name=tip,proto3" json:"tip,omitempty"`
}

func (x *Reserve) Reset() {
	*x = Reserve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reserve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reserve) ProtoMessage() {}

func (x *Reserve) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reserve.ProtoReflect.Descriptor instead.
func (*Reserve) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{8}
}

func (x *Reserve) GetEpisodes() []*ViewEpisode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

func (x *Reserve) GetTip() string {
	if x != nil {
		return x.Tip
	}
	return ""
}

// 权限相关信息
type Rights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	AllowDownload int32 `protobuf:"varint,1,opt,name=allow_download,json=allowDownload,proto3" json:"allow_download,omitempty"`
	//
	AllowReview int32 `protobuf:"varint,2,opt,name=allow_review,json=allowReview,proto3" json:"allow_review,omitempty"`
	//
	CanWatch int32 `protobuf:"varint,3,opt,name=can_watch,json=canWatch,proto3" json:"can_watch,omitempty"`
	//
	IsCoverShow int32 `protobuf:"varint,4,opt,name=is_cover_show,json=isCoverShow,proto3" json:"is_cover_show,omitempty"`
	//
	Copyright string `protobuf:"bytes,5,opt,name=copyright,proto3" json:"copyright,omitempty"`
	//
	CopyrightName string `protobuf:"bytes,6,opt,name=copyright_name,json=copyrightName,proto3" json:"copyright_name,omitempty"`
	//
	AllowBp int32 `protobuf:"varint,7,opt,name=allow_bp,json=allowBp,proto3" json:"allow_bp,omitempty"`
	//
	AreaLimit int32 `protobuf:"varint,8,opt,name=area_limit,json=areaLimit,proto3" json:"area_limit,omitempty"`
	//
	IsPreview int32 `protobuf:"varint,9,opt,name=is_preview,json=isPreview,proto3" json:"is_preview,omitempty"`
	//
	BanAreaShow int32 `protobuf:"varint,10,opt,name=ban_area_show,json=banAreaShow,proto3" json:"ban_area_show,omitempty"`
	//
	WatchPlatform int32 `protobuf:"varint,11,opt,name=watch_platform,json=watchPlatform,proto3" json:"watch_platform,omitempty"`
	//
	AllowBpRank int32 `protobuf:"varint,12,opt,name=allow_bp_rank,json=allowBpRank,proto3" json:"allow_bp_rank,omitempty"`
	//
	Resource string `protobuf:"bytes,13,opt,name=resource,proto3" json:"resource,omitempty"`
	//
	ForbidPre int32 `protobuf:"varint,14,opt,name=forbid_pre,json=forbidPre,proto3" json:"forbid_pre,omitempty"`
	//
	OnlyVipDownload int32 `protobuf:"varint,15,opt,name=only_vip_download,json=onlyVipDownload,proto3" json:"only_vip_download,omitempty"`
	//
	NewAllowDownload int32 `protobuf:"varint,16,opt,name=new_allow_download,json=newAllowDownload,proto3" json:"new_allow_download,omitempty"`
}

func (x *Rights) Reset() {
	*x = Rights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rights) ProtoMessage() {}

func (x *Rights) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rights.ProtoReflect.Descriptor instead.
func (*Rights) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{9}
}

func (x *Rights) GetAllowDownload() int32 {
	if x != nil {
		return x.AllowDownload
	}
	return 0
}

func (x *Rights) GetAllowReview() int32 {
	if x != nil {
		return x.AllowReview
	}
	return 0
}

func (x *Rights) GetCanWatch() int32 {
	if x != nil {
		return x.CanWatch
	}
	return 0
}

func (x *Rights) GetIsCoverShow() int32 {
	if x != nil {
		return x.IsCoverShow
	}
	return 0
}

func (x *Rights) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

func (x *Rights) GetCopyrightName() string {
	if x != nil {
		return x.CopyrightName
	}
	return ""
}

func (x *Rights) GetAllowBp() int32 {
	if x != nil {
		return x.AllowBp
	}
	return 0
}

func (x *Rights) GetAreaLimit() int32 {
	if x != nil {
		return x.AreaLimit
	}
	return 0
}

func (x *Rights) GetIsPreview() int32 {
	if x != nil {
		return x.IsPreview
	}
	return 0
}

func (x *Rights) GetBanAreaShow() int32 {
	if x != nil {
		return x.BanAreaShow
	}
	return 0
}

func (x *Rights) GetWatchPlatform() int32 {
	if x != nil {
		return x.WatchPlatform
	}
	return 0
}

func (x *Rights) GetAllowBpRank() int32 {
	if x != nil {
		return x.AllowBpRank
	}
	return 0
}

func (x *Rights) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Rights) GetForbidPre() int32 {
	if x != nil {
		return x.ForbidPre
	}
	return 0
}

func (x *Rights) GetOnlyVipDownload() int32 {
	if x != nil {
		return x.OnlyVipDownload
	}
	return 0
}

func (x *Rights) GetNewAllowDownload() int32 {
	if x != nil {
		return x.NewAllowDownload
	}
	return 0
}

//
type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Followers string `protobuf:"bytes,1,opt,name=followers,proto3" json:"followers,omitempty"`
	//
	PlayData *StatInfo `protobuf:"bytes,2,opt,name=play_data,json=playData,proto3" json:"play_data,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{10}
}

func (x *Stat) GetFollowers() string {
	if x != nil {
		return x.Followers
	}
	return ""
}

func (x *Stat) GetPlayData() *StatInfo {
	if x != nil {
		return x.PlayData
	}
	return nil
}

//
type UserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Show int32 `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
	//
	Follow int32 `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"`
	//
	FollowStatus int32 `protobuf:"varint,3,opt,name=follow_status,json=followStatus,proto3" json:"follow_status,omitempty"`
	//
	Pay int32 `protobuf:"varint,4,opt,name=pay,proto3" json:"pay,omitempty"`
	//
	Sponsor int32 `protobuf:"varint,5,opt,name=sponsor,proto3" json:"sponsor,omitempty"`
	//
	Vip int32 `protobuf:"varint,6,opt,name=vip,proto3" json:"vip,omitempty"`
	// vip 是否被冻结
	VipFrozen int32 `protobuf:"varint,7,opt,name=vip_frozen,json=vipFrozen,proto3" json:"vip_frozen,omitempty"`
	//
	WatchProgress *WatchProgress `protobuf:"bytes,8,opt,name=watch_progress,json=watchProgress,proto3" json:"watch_progress,omitempty"`
}

func (x *UserStatus) Reset() {
	*x = UserStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatus) ProtoMessage() {}

func (x *UserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatus.ProtoReflect.Descriptor instead.
func (*UserStatus) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{11}
}

func (x *UserStatus) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *UserStatus) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

func (x *UserStatus) GetFollowStatus() int32 {
	if x != nil {
		return x.FollowStatus
	}
	return 0
}

func (x *UserStatus) GetPay() int32 {
	if x != nil {
		return x.Pay
	}
	return 0
}

func (x *UserStatus) GetSponsor() int32 {
	if x != nil {
		return x.Sponsor
	}
	return 0
}

func (x *UserStatus) GetVip() int32 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *UserStatus) GetVipFrozen() int32 {
	if x != nil {
		return x.VipFrozen
	}
	return 0
}

func (x *UserStatus) GetWatchProgress() *WatchProgress {
	if x != nil {
		return x.WatchProgress
	}
	return nil
}

//
type ViewPgcAny struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	OgvData *OgvData `protobuf:"bytes,1,opt,name=ogv_data,json=ogvData,proto3" json:"ogv_data,omitempty"`
	//
	AllUpInfo map[int64]*Staff `protobuf:"bytes,2,rep,name=all_up_info,json=allUpInfo,proto3" json:"all_up_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ViewPgcAny) Reset() {
	*x = ViewPgcAny{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewPgcAny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewPgcAny) ProtoMessage() {}

func (x *ViewPgcAny) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewPgcAny.ProtoReflect.Descriptor instead.
func (*ViewPgcAny) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{12}
}

func (x *ViewPgcAny) GetOgvData() *OgvData {
	if x != nil {
		return x.OgvData
	}
	return nil
}

func (x *ViewPgcAny) GetAllUpInfo() map[int64]*Staff {
	if x != nil {
		return x.AllUpInfo
	}
	return nil
}

//
type WatchProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	LastEpId int64 `protobuf:"varint,1,opt,name=last_ep_id,json=lastEpId,proto3" json:"last_ep_id,omitempty"`
	//
	LastEpIndex string `protobuf:"bytes,2,opt,name=last_ep_index,json=lastEpIndex,proto3" json:"last_ep_index,omitempty"`
	//
	LastTime int64 `protobuf:"varint,3,opt,name=last_time,json=lastTime,proto3" json:"last_time,omitempty"`
}

func (x *WatchProgress) Reset() {
	*x = WatchProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchProgress) ProtoMessage() {}

func (x *WatchProgress) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchProgress.ProtoReflect.Descriptor instead.
func (*WatchProgress) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP(), []int{13}
}

func (x *WatchProgress) GetLastEpId() int64 {
	if x != nil {
		return x.LastEpId
	}
	return 0
}

func (x *WatchProgress) GetLastEpIndex() string {
	if x != nil {
		return x.LastEpIndex
	}
	return ""
}

func (x *WatchProgress) GetLastTime() int64 {
	if x != nil {
		return x.LastTime
	}
	return 0
}

var File_bilibili_app_viewunite_pgcanymodel_proto protoreflect.FileDescriptor

var file_bilibili_app_viewunite_pgcanymodel_proto_rawDesc = []byte{
	0x0a, 0x28, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2f, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x22, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x23,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xad, 0x01, 0x0a, 0x08, 0x45, 0x61, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x74, 0x6f,
	0x61, 0x73, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x54, 0x6f, 0x61, 0x73, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x69, 0x6b,
	0x65, 0x5f, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x22, 0x59, 0x0a, 0x0c, 0x45, 0x61, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x70, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x61, 0x72, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x08, 0x73, 0x70, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x22, 0x67,
	0x0a, 0x0d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2f, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x76, 0x69, 0x65, 0x77,
	0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69,
	0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x56, 0x69, 0x65, 0x77, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xde, 0x0a, 0x0a, 0x07, 0x4f, 0x67, 0x76, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x45, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x07, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x55, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x59, 0x0a,
	0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x56, 0x69, 0x65, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4c, 0x0a, 0x0a, 0x6f, 0x67, 0x76, 0x5f,
	0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x4f, 0x67, 0x76, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x09, 0x6f, 0x67, 0x76,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x65, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45,
	0x70, 0x12, 0x3b, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x5f, 0x65, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x45, 0x70, 0x12, 0x45,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x6c, 0x0a,
	0x14, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0d, 0x65,
	0x61, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61,
	0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x45, 0x61, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x52, 0x0c, 0x65, 0x61, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2f, 0x0a,
	0x13, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x31, 0x36, 0x39, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x31, 0x36, 0x39, 0x12, 0x31,
	0x0a, 0x14, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x31, 0x36, 0x31, 0x30, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x31, 0x36, 0x31,
	0x30, 0x12, 0x25, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x65, 0x70, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x68, 0x61, 0x73, 0x43,
	0x61, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x45, 0x70, 0x22, 0xf5, 0x01, 0x0a, 0x09, 0x4f, 0x67, 0x76,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x3b, 0x0a, 0x1a, 0x72, 0x65, 0x64, 0x75, 0x63, 0x65,
	0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x70, 0x61,
	0x63, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x72, 0x65, 0x64, 0x75,
	0x63, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x21, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f,
	0x72, 0x5f, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1d,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x43, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x12, 0x32, 0x0a,
	0x15, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x76, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x56, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xad, 0x02, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x4c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x5f, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x64,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x69, 0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x69, 0x63, 0x5f, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x69, 0x63, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x3e, 0x0a, 0x05, 0x62, 0x61,
	0x64, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x52, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x8e, 0x01, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x53, 0x68, 0x6f,
	0x77, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x6f, 0x61, 0x73,
	0x74, 0x22, 0xc6, 0x02, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x75, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x75, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x69, 0x73, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x65, 0x6b,
	0x64, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x65, 0x65, 0x6b, 0x64,
	0x61, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x28,
	0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x5f, 0x70, 0x75, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x50, 0x75, 0x62, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x22, 0x63, 0x0a, 0x07, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x45, 0x70, 0x69, 0x73,
	0x6f, 0x64, 0x65, 0x52, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x70, 0x22,
	0xb5, 0x04, 0x0a, 0x06, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x77, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x70,
	0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x42, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x65, 0x61, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x41,
	0x72, 0x65, 0x61, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x77, 0x61, 0x74, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x22,
	0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x70, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x50, 0x72, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x76, 0x69, 0x70, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x6e, 0x6c, 0x79, 0x56, 0x69,
	0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x65, 0x77,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x6a, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x94, 0x02, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x23,
	0x0a, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x76, 0x69,
	0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x5f, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x70, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x12, 0x58, 0x0a, 0x0e, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x77, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x0a, 0x56,
	0x69, 0x65, 0x77, 0x50, 0x67, 0x63, 0x41, 0x6e, 0x79, 0x12, 0x46, 0x0a, 0x08, 0x6f, 0x67, 0x76,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4f, 0x67, 0x76, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x6f, 0x67, 0x76, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x5d, 0x0a, 0x0b, 0x61, 0x6c, 0x6c, 0x5f, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x70, 0x67, 0x63, 0x61, 0x6e, 0x79, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x56, 0x69, 0x65, 0x77,
	0x50, 0x67, 0x63, 0x41, 0x6e, 0x79, 0x2e, 0x41, 0x6c, 0x6c, 0x55, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x55, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x62, 0x0a, 0x0e, 0x41, 0x6c, 0x6c, 0x55, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x6e, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x45,
	0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x70, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x45, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x42, 0x45, 0x5a, 0x43, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x6d, 0x74, 0x63,
	0x32, 0x33, 0x33, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70,
	0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70,
	0x70, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_viewunite_pgcanymodel_proto_rawDescOnce sync.Once
	file_bilibili_app_viewunite_pgcanymodel_proto_rawDescData = file_bilibili_app_viewunite_pgcanymodel_proto_rawDesc
)

func file_bilibili_app_viewunite_pgcanymodel_proto_rawDescGZIP() []byte {
	file_bilibili_app_viewunite_pgcanymodel_proto_rawDescOnce.Do(func() {
		file_bilibili_app_viewunite_pgcanymodel_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_viewunite_pgcanymodel_proto_rawDescData)
	})
	return file_bilibili_app_viewunite_pgcanymodel_proto_rawDescData
}

var file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_bilibili_app_viewunite_pgcanymodel_proto_goTypes = []interface{}{
	(*Earphone)(nil),               // 0: bilibili.app.viewunite.pgcanymodel.Earphone
	(*EarphoneConf)(nil),           // 1: bilibili.app.viewunite.pgcanymodel.EarphoneConf
	(*MultiViewInfo)(nil),          // 2: bilibili.app.viewunite.pgcanymodel.MultiViewInfo
	(*OgvData)(nil),                // 3: bilibili.app.viewunite.pgcanymodel.OgvData
	(*OgvSwitch)(nil),              // 4: bilibili.app.viewunite.pgcanymodel.OgvSwitch
	(*PlayFloatLayerActivity)(nil), // 5: bilibili.app.viewunite.pgcanymodel.PlayFloatLayerActivity
	(*PlayStrategy)(nil),           // 6: bilibili.app.viewunite.pgcanymodel.PlayStrategy
	(*Publish)(nil),                // 7: bilibili.app.viewunite.pgcanymodel.Publish
	(*Reserve)(nil),                // 8: bilibili.app.viewunite.pgcanymodel.Reserve
	(*Rights)(nil),                 // 9: bilibili.app.viewunite.pgcanymodel.Rights
	(*Stat)(nil),                   // 10: bilibili.app.viewunite.pgcanymodel.Stat
	(*UserStatus)(nil),             // 11: bilibili.app.viewunite.pgcanymodel.UserStatus
	(*ViewPgcAny)(nil),             // 12: bilibili.app.viewunite.pgcanymodel.ViewPgcAny
	(*WatchProgress)(nil),          // 13: bilibili.app.viewunite.pgcanymodel.WatchProgress
	nil,                            // 14: bilibili.app.viewunite.pgcanymodel.ViewPgcAny.AllUpInfoEntry
	(*NewEp)(nil),                  // 15: bilibili.app.viewunite.common.NewEp
	(*BadgeInfo)(nil),              // 16: bilibili.app.viewunite.common.BadgeInfo
	(*ViewEpisode)(nil),            // 17: bilibili.app.viewunite.common.ViewEpisode
	(*StatInfo)(nil),               // 18: bilibili.app.viewunite.common.StatInfo
	(*Staff)(nil),                  // 19: bilibili.app.viewunite.common.Staff
}
var file_bilibili_app_viewunite_pgcanymodel_proto_depIdxs = []int32{
	0,  // 0: bilibili.app.viewunite.pgcanymodel.EarphoneConf.sp_phones:type_name -> bilibili.app.viewunite.pgcanymodel.Earphone
	9,  // 1: bilibili.app.viewunite.pgcanymodel.OgvData.rights:type_name -> bilibili.app.viewunite.pgcanymodel.Rights
	11, // 2: bilibili.app.viewunite.pgcanymodel.OgvData.user_status:type_name -> bilibili.app.viewunite.pgcanymodel.UserStatus
	10, // 3: bilibili.app.viewunite.pgcanymodel.OgvData.stat:type_name -> bilibili.app.viewunite.pgcanymodel.Stat
	7,  // 4: bilibili.app.viewunite.pgcanymodel.OgvData.publish:type_name -> bilibili.app.viewunite.pgcanymodel.Publish
	6,  // 5: bilibili.app.viewunite.pgcanymodel.OgvData.play_strategy:type_name -> bilibili.app.viewunite.pgcanymodel.PlayStrategy
	2,  // 6: bilibili.app.viewunite.pgcanymodel.OgvData.multi_view_info:type_name -> bilibili.app.viewunite.pgcanymodel.MultiViewInfo
	4,  // 7: bilibili.app.viewunite.pgcanymodel.OgvData.ogv_switch:type_name -> bilibili.app.viewunite.pgcanymodel.OgvSwitch
	15, // 8: bilibili.app.viewunite.pgcanymodel.OgvData.new_ep:type_name -> bilibili.app.viewunite.common.NewEp
	8,  // 9: bilibili.app.viewunite.pgcanymodel.OgvData.reserve:type_name -> bilibili.app.viewunite.pgcanymodel.Reserve
	5,  // 10: bilibili.app.viewunite.pgcanymodel.OgvData.activity_float_layer:type_name -> bilibili.app.viewunite.pgcanymodel.PlayFloatLayerActivity
	1,  // 11: bilibili.app.viewunite.pgcanymodel.OgvData.earphone_conf:type_name -> bilibili.app.viewunite.pgcanymodel.EarphoneConf
	16, // 12: bilibili.app.viewunite.pgcanymodel.PlayFloatLayerActivity.badge:type_name -> bilibili.app.viewunite.common.BadgeInfo
	17, // 13: bilibili.app.viewunite.pgcanymodel.Reserve.episodes:type_name -> bilibili.app.viewunite.common.ViewEpisode
	18, // 14: bilibili.app.viewunite.pgcanymodel.Stat.play_data:type_name -> bilibili.app.viewunite.common.StatInfo
	13, // 15: bilibili.app.viewunite.pgcanymodel.UserStatus.watch_progress:type_name -> bilibili.app.viewunite.pgcanymodel.WatchProgress
	3,  // 16: bilibili.app.viewunite.pgcanymodel.ViewPgcAny.ogv_data:type_name -> bilibili.app.viewunite.pgcanymodel.OgvData
	14, // 17: bilibili.app.viewunite.pgcanymodel.ViewPgcAny.all_up_info:type_name -> bilibili.app.viewunite.pgcanymodel.ViewPgcAny.AllUpInfoEntry
	19, // 18: bilibili.app.viewunite.pgcanymodel.ViewPgcAny.AllUpInfoEntry.value:type_name -> bilibili.app.viewunite.common.Staff
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_bilibili_app_viewunite_pgcanymodel_proto_init() }
func file_bilibili_app_viewunite_pgcanymodel_proto_init() {
	if File_bilibili_app_viewunite_pgcanymodel_proto != nil {
		return
	}
	file_bilibili_app_viewunite_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Earphone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarphoneConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiViewInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayFloatLayerActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reserve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewPgcAny); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_viewunite_pgcanymodel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bilibili_app_viewunite_pgcanymodel_proto_goTypes,
		DependencyIndexes: file_bilibili_app_viewunite_pgcanymodel_proto_depIdxs,
		MessageInfos:      file_bilibili_app_viewunite_pgcanymodel_proto_msgTypes,
	}.Build()
	File_bilibili_app_viewunite_pgcanymodel_proto = out.File
	file_bilibili_app_viewunite_pgcanymodel_proto_rawDesc = nil
	file_bilibili_app_viewunite_pgcanymodel_proto_goTypes = nil
	file_bilibili_app_viewunite_pgcanymodel_proto_depIdxs = nil
}
