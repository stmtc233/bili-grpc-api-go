// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: bilibili/app/viewunite/common.proto

package viewunite

import (
	v1 "github.com/stmtc233/bili-grpc-api-go/bilibili/dagw/component/avatar/v1"
	pagination "github.com/stmtc233/bili-grpc-api-go/bilibili/pagination"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AttentionRelationStatus int32

const (
	AttentionRelationStatus_ARS_NONE AttentionRelationStatus = 0
	AttentionRelationStatus_ARS_N0RELATION AttentionRelationStatus = 1
	AttentionRelationStatus_ARS_FOLLOWHIM AttentionRelationStatus = 2
	AttentionRelationStatus_ARS_FOLLOWME AttentionRelationStatus = 3
	AttentionRelationStatus_ARS_BUDDY AttentionRelationStatus = 4
	AttentionRelationStatus_ARS_SPECIAL AttentionRelationStatus = 5
	AttentionRelationStatus_ARS_CANCELBLOCK AttentionRelationStatus = 6
)

// Enum value maps for AttentionRelationStatus.
var (
	AttentionRelationStatus_name = map[int32]string{
		0: "ARS_NONE",
		1: "ARS_N0RELATION",
		2: "ARS_FOLLOWHIM",
		3: "ARS_FOLLOWME",
		4: "ARS_BUDDY",
		5: "ARS_SPECIAL",
		6: "ARS_CANCELBLOCK",
	}
	AttentionRelationStatus_value = map[string]int32{
		"ARS_NONE":        0,
		"ARS_N0RELATION":  1,
		"ARS_FOLLOWHIM":   2,
		"ARS_FOLLOWME":    3,
		"ARS_BUDDY":       4,
		"ARS_SPECIAL":     5,
		"ARS_CANCELBLOCK": 6,
	}
)

func (x AttentionRelationStatus) Enum() *AttentionRelationStatus {
	p := new(AttentionRelationStatus)
	*p = x
	return p
}

func (x AttentionRelationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttentionRelationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[0].Descriptor()
}

func (AttentionRelationStatus) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[0]
}

func (x AttentionRelationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttentionRelationStatus.Descriptor instead.
func (AttentionRelationStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{0}
}

type DescType int32

const (
	DescType_DescTypeUnknown DescType = 0
	DescType_DescTypeText DescType = 1
	DescType_DescTypeAt DescType = 2
)

// Enum value maps for DescType.
var (
	DescType_name = map[int32]string{
		0: "DescTypeUnknown",
		1: "DescTypeText",
		2: "DescTypeAt",
	}
	DescType_value = map[string]int32{
		"DescTypeUnknown": 0,
		"DescTypeText":    1,
		"DescTypeAt":      2,
	}
)

func (x DescType) Enum() *DescType {
	p := new(DescType)
	*p = x
	return p
}

func (x DescType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DescType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[1].Descriptor()
}

func (DescType) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[1]
}

func (x DescType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DescType.Descriptor instead.
func (DescType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{1}
}

// 荣誉 Banner 跳转类型
type HonorJumpType int32

const (
	HonorJumpType_HONOR_JUMP_TYPE_UNKNOWN HonorJumpType = 0
	HonorJumpType_HONOR_OPEN_URL HonorJumpType = 1
	HonorJumpType_HONOR_HALF_SCREEN HonorJumpType = 2
)

// Enum value maps for HonorJumpType.
var (
	HonorJumpType_name = map[int32]string{
		0: "HONOR_JUMP_TYPE_UNKNOWN",
		1: "HONOR_OPEN_URL",
		2: "HONOR_HALF_SCREEN",
	}
	HonorJumpType_value = map[string]int32{
		"HONOR_JUMP_TYPE_UNKNOWN": 0,
		"HONOR_OPEN_URL":          1,
		"HONOR_HALF_SCREEN":       2,
	}
)

func (x HonorJumpType) Enum() *HonorJumpType {
	p := new(HonorJumpType)
	*p = x
	return p
}

func (x HonorJumpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HonorJumpType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[2].Descriptor()
}

func (HonorJumpType) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[2]
}

func (x HonorJumpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HonorJumpType.Descriptor instead.
func (HonorJumpType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{2}
}

// 荣誉类型
type HonorType int32

const (
	HonorType_HONOR_NONE HonorType = 0
	HonorType_PLAYLET HonorType = 1
	// 视频存在争议
	HonorType_ARGUE HonorType = 2
	HonorType_NOTICE HonorType = 3
	HonorType_GUIDANCE HonorType = 4
	// 哔哩哔哩榜
	HonorType_HONOR_BILI_RANK HonorType = 5
	// 周榜
	HonorType_HONOR_WEEKLY_RANK HonorType = 6
	// 日榜
	HonorType_HONOR_DAILY_RANK HonorType = 7
	HonorType_HONOR_CHANNEL HonorType = 8
	// 音乐榜?
	HonorType_HONOR_MUSIC HonorType = 9
	HonorType_HONOR_REPLY HonorType = 10
)

// Enum value maps for HonorType.
var (
	HonorType_name = map[int32]string{
		0:  "HONOR_NONE",
		1:  "PLAYLET",
		2:  "ARGUE",
		3:  "NOTICE",
		4:  "GUIDANCE",
		5:  "HONOR_BILI_RANK",
		6:  "HONOR_WEEKLY_RANK",
		7:  "HONOR_DAILY_RANK",
		8:  "HONOR_CHANNEL",
		9:  "HONOR_MUSIC",
		10: "HONOR_REPLY",
	}
	HonorType_value = map[string]int32{
		"HONOR_NONE":        0,
		"PLAYLET":           1,
		"ARGUE":             2,
		"NOTICE":            3,
		"GUIDANCE":          4,
		"HONOR_BILI_RANK":   5,
		"HONOR_WEEKLY_RANK": 6,
		"HONOR_DAILY_RANK":  7,
		"HONOR_CHANNEL":     8,
		"HONOR_MUSIC":       9,
		"HONOR_REPLY":       10,
	}
)

func (x HonorType) Enum() *HonorType {
	p := new(HonorType)
	*p = x
	return p
}

func (x HonorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HonorType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[3].Descriptor()
}

func (HonorType) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[3]
}

func (x HonorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HonorType.Descriptor instead.
func (HonorType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{3}
}

type KingPositionType int32

const (
	KingPositionType_KING_POS_UNSPECIFIED KingPositionType = 0
	KingPositionType_LIKE KingPositionType = 1
	KingPositionType_DISLIKE KingPositionType = 2
	KingPositionType_COIN KingPositionType = 3
	KingPositionType_FAV KingPositionType = 4
	KingPositionType_SHARE KingPositionType = 5
	KingPositionType_CACHE KingPositionType = 6
	KingPositionType_DANMAKU KingPositionType = 7
)

// Enum value maps for KingPositionType.
var (
	KingPositionType_name = map[int32]string{
		0: "KING_POS_UNSPECIFIED",
		1: "LIKE",
		2: "DISLIKE",
		3: "COIN",
		4: "FAV",
		5: "SHARE",
		6: "CACHE",
		7: "DANMAKU",
	}
	KingPositionType_value = map[string]int32{
		"KING_POS_UNSPECIFIED": 0,
		"LIKE":                 1,
		"DISLIKE":              2,
		"COIN":                 3,
		"FAV":                  4,
		"SHARE":                5,
		"CACHE":                6,
		"DANMAKU":              7,
	}
)

func (x KingPositionType) Enum() *KingPositionType {
	p := new(KingPositionType)
	*p = x
	return p
}

func (x KingPositionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KingPositionType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[4].Descriptor()
}

func (KingPositionType) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[4]
}

func (x KingPositionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KingPositionType.Descriptor instead.
func (KingPositionType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{4}
}

type ModuleType int32

const (
	ModuleType_UNKNOWN ModuleType = 0
	ModuleType_OGV_INTRODUCTION ModuleType = 1
	ModuleType_OGV_TITLE ModuleType = 2
	ModuleType_UGC_HEADLINE ModuleType = 3
	ModuleType_UGC_INTRODUCTION ModuleType = 4
	ModuleType_KING_POSITION ModuleType = 5
	ModuleType_MASTER_USER_LIST ModuleType = 6
	ModuleType_STAFFS ModuleType = 7
	ModuleType_HONOR ModuleType = 8
	ModuleType_OWNER ModuleType = 9
	ModuleType_PAGE ModuleType = 10
	ModuleType_ACTIVITY_RESERVE ModuleType = 11
	ModuleType_LIVE_ORDER ModuleType = 12
	ModuleType_POSITIVE ModuleType = 13
	ModuleType_SECTION ModuleType = 14
	ModuleType_RELATE ModuleType = 15
	ModuleType_PUGV ModuleType = 16
	ModuleType_COLLECTION_CARD ModuleType = 17
	ModuleType_ACTIVITY ModuleType = 18
	ModuleType_CHARACTER ModuleType = 19
	ModuleType_FOLLOW_LAYER ModuleType = 20
	ModuleType_OGV_SEASONS ModuleType = 21
	ModuleType_UGC_SEASON ModuleType = 22
	ModuleType_OGV_LIVE_RESERVE ModuleType = 23
	ModuleType_COMBINATION_EPISODE ModuleType = 24
	ModuleType_SPONSOR ModuleType = 25
	ModuleType_ACTIVITY_ENTRANCE ModuleType = 26
	ModuleType_THEATRE_HOT_TOPIC ModuleType = 27
	ModuleType_RELATED_RECOMMEND ModuleType = 28
	ModuleType_PAY_BAR ModuleType = 29
	ModuleType_BANNER ModuleType = 30
	ModuleType_AUDIO ModuleType = 31
	ModuleType_AGG_CARD ModuleType = 32
	ModuleType_SINGLE_EP ModuleType = 33
	ModuleType_LIKE_COMMENT ModuleType = 34
	ModuleType_ATTENTION_RECOMMEND ModuleType = 35
	ModuleType_COVENANTER ModuleType = 36
)

// Enum value maps for ModuleType.
var (
	ModuleType_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "OGV_INTRODUCTION",
		2:  "OGV_TITLE",
		3:  "UGC_HEADLINE",
		4:  "UGC_INTRODUCTION",
		5:  "KING_POSITION",
		6:  "MASTER_USER_LIST",
		7:  "STAFFS",
		8:  "HONOR",
		9:  "OWNER",
		10: "PAGE",
		11: "ACTIVITY_RESERVE",
		12: "LIVE_ORDER",
		13: "POSITIVE",
		14: "SECTION",
		15: "RELATE",
		16: "PUGV",
		17: "COLLECTION_CARD",
		18: "ACTIVITY",
		19: "CHARACTER",
		20: "FOLLOW_LAYER",
		21: "OGV_SEASONS",
		22: "UGC_SEASON",
		23: "OGV_LIVE_RESERVE",
		24: "COMBINATION_EPISODE",
		25: "SPONSOR",
		26: "ACTIVITY_ENTRANCE",
		27: "THEATRE_HOT_TOPIC",
		28: "RELATED_RECOMMEND",
		29: "PAY_BAR",
		30: "BANNER",
		31: "AUDIO",
		32: "AGG_CARD",
		33: "SINGLE_EP",
		34: "LIKE_COMMENT",
		35: "ATTENTION_RECOMMEND",
		36: "COVENANTER",
	}
	ModuleType_value = map[string]int32{
		"UNKNOWN":             0,
		"OGV_INTRODUCTION":    1,
		"OGV_TITLE":           2,
		"UGC_HEADLINE":        3,
		"UGC_INTRODUCTION":    4,
		"KING_POSITION":       5,
		"MASTER_USER_LIST":    6,
		"STAFFS":              7,
		"HONOR":               8,
		"OWNER":               9,
		"PAGE":                10,
		"ACTIVITY_RESERVE":    11,
		"LIVE_ORDER":          12,
		"POSITIVE":            13,
		"SECTION":             14,
		"RELATE":              15,
		"PUGV":                16,
		"COLLECTION_CARD":     17,
		"ACTIVITY":            18,
		"CHARACTER":           19,
		"FOLLOW_LAYER":        20,
		"OGV_SEASONS":         21,
		"UGC_SEASON":          22,
		"OGV_LIVE_RESERVE":    23,
		"COMBINATION_EPISODE": 24,
		"SPONSOR":             25,
		"ACTIVITY_ENTRANCE":   26,
		"THEATRE_HOT_TOPIC":   27,
		"RELATED_RECOMMEND":   28,
		"PAY_BAR":             29,
		"BANNER":              30,
		"AUDIO":               31,
		"AGG_CARD":            32,
		"SINGLE_EP":           33,
		"LIKE_COMMENT":        34,
		"ATTENTION_RECOMMEND": 35,
		"COVENANTER":          36,
	}
)

func (x ModuleType) Enum() *ModuleType {
	p := new(ModuleType)
	*p = x
	return p
}

func (x ModuleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ModuleType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[5].Descriptor()
}

func (ModuleType) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[5]
}

func (x ModuleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ModuleType.Descriptor instead.
func (ModuleType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{5}
}

type OccupationType int32

const (
	OccupationType_STAFF OccupationType = 0
	OccupationType_CAST OccupationType = 1
)

// Enum value maps for OccupationType.
var (
	OccupationType_name = map[int32]string{
		0: "STAFF",
		1: "CAST",
	}
	OccupationType_value = map[string]int32{
		"STAFF": 0,
		"CAST":  1,
	}
)

func (x OccupationType) Enum() *OccupationType {
	p := new(OccupationType)
	*p = x
	return p
}

func (x OccupationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OccupationType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[6].Descriptor()
}

func (OccupationType) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[6]
}

func (x OccupationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OccupationType.Descriptor instead.
func (OccupationType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{6}
}

// 视频详情下方推荐卡子类型
type RelateCardType int32

const (
	RelateCardType_CARD_TYPE_UNKNOWN RelateCardType = 0
	RelateCardType_AV RelateCardType = 1
	RelateCardType_BANGUMI RelateCardType = 2
	RelateCardType_RESOURCE RelateCardType = 3
	RelateCardType_GAME RelateCardType = 4
	RelateCardType_CM RelateCardType = 5
	RelateCardType_LIVE RelateCardType = 6
	RelateCardType_AI_RECOMMEND RelateCardType = 7
	RelateCardType_BANGUMI_AV RelateCardType = 8
	RelateCardType_BANGUMI_UGC RelateCardType = 9
	RelateCardType_SPECIAL RelateCardType = 10
)

// Enum value maps for RelateCardType.
var (
	RelateCardType_name = map[int32]string{
		0:  "CARD_TYPE_UNKNOWN",
		1:  "AV",
		2:  "BANGUMI",
		3:  "RESOURCE",
		4:  "GAME",
		5:  "CM",
		6:  "LIVE",
		7:  "AI_RECOMMEND",
		8:  "BANGUMI_AV",
		9:  "BANGUMI_UGC",
		10: "SPECIAL",
	}
	RelateCardType_value = map[string]int32{
		"CARD_TYPE_UNKNOWN": 0,
		"AV":                1,
		"BANGUMI":           2,
		"RESOURCE":          3,
		"GAME":              4,
		"CM":                5,
		"LIVE":              6,
		"AI_RECOMMEND":      7,
		"BANGUMI_AV":        8,
		"BANGUMI_UGC":       9,
		"SPECIAL":           10,
	}
)

func (x RelateCardType) Enum() *RelateCardType {
	p := new(RelateCardType)
	*p = x
	return p
}

func (x RelateCardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RelateCardType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[7].Descriptor()
}

func (RelateCardType) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[7]
}

func (x RelateCardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RelateCardType.Descriptor instead.
func (RelateCardType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{7}
}

type ReserveBizType int32

const (
	ReserveBizType_BizTypeNone ReserveBizType = 0
	ReserveBizType_BizTypeReserveActivity ReserveBizType = 1
	ReserveBizType_BizTypeFavSeason ReserveBizType = 2
)

// Enum value maps for ReserveBizType.
var (
	ReserveBizType_name = map[int32]string{
		0: "BizTypeNone",
		1: "BizTypeReserveActivity",
		2: "BizTypeFavSeason",
	}
	ReserveBizType_value = map[string]int32{
		"BizTypeNone":            0,
		"BizTypeReserveActivity": 1,
		"BizTypeFavSeason":       2,
	}
)

func (x ReserveBizType) Enum() *ReserveBizType {
	p := new(ReserveBizType)
	*p = x
	return p
}

func (x ReserveBizType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReserveBizType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[8].Descriptor()
}

func (ReserveBizType) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[8]
}

func (x ReserveBizType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReserveBizType.Descriptor instead.
func (ReserveBizType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{8}
}

type SeasonType int32

const (
	SeasonType_Unknown SeasonType = 0
	SeasonType_Base SeasonType = 1
	SeasonType_Good SeasonType = 2
)

// Enum value maps for SeasonType.
var (
	SeasonType_name = map[int32]string{
		0: "Unknown",
		1: "Base",
		2: "Good",
	}
	SeasonType_value = map[string]int32{
		"Unknown": 0,
		"Base":    1,
		"Good":    2,
	}
)

func (x SeasonType) Enum() *SeasonType {
	p := new(SeasonType)
	*p = x
	return p
}

func (x SeasonType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SeasonType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[9].Descriptor()
}

func (SeasonType) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[9]
}

func (x SeasonType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SeasonType.Descriptor instead.
func (SeasonType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{9}
}

type SerialSeasonCoverStyle int32

const (
	SerialSeasonCoverStyle_TITLE SerialSeasonCoverStyle = 0
	SerialSeasonCoverStyle_PICTURE SerialSeasonCoverStyle = 1
)

// Enum value maps for SerialSeasonCoverStyle.
var (
	SerialSeasonCoverStyle_name = map[int32]string{
		0: "TITLE",
		1: "PICTURE",
	}
	SerialSeasonCoverStyle_value = map[string]int32{
		"TITLE":   0,
		"PICTURE": 1,
	}
)

func (x SerialSeasonCoverStyle) Enum() *SerialSeasonCoverStyle {
	p := new(SerialSeasonCoverStyle)
	*p = x
	return p
}

func (x SerialSeasonCoverStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SerialSeasonCoverStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_app_viewunite_common_proto_enumTypes[10].Descriptor()
}

func (SerialSeasonCoverStyle) Type() protoreflect.EnumType {
	return &file_bilibili_app_viewunite_common_proto_enumTypes[10]
}

func (x SerialSeasonCoverStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SerialSeasonCoverStyle.Descriptor instead.
func (SerialSeasonCoverStyle) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{10}
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Link string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	Cover string `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Type int32 `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Ab string `protobuf:"bytes,6,opt,name=ab,proto3" json:"ab,omitempty"`
	ShowName string `protobuf:"bytes,7,opt,name=show_name,json=showName,proto3" json:"show_name,omitempty"`
	Picurl string `protobuf:"bytes,8,opt,name=picurl,proto3" json:"picurl,omitempty"`
	PicurlSelected string `protobuf:"bytes,9,opt,name=picurl_selected,json=picurlSelected,proto3" json:"picurl_selected,omitempty"`
	H5Link string `protobuf:"bytes,10,opt,name=h5_link,json=h5Link,proto3" json:"h5_link,omitempty"`
	JumpMode string `protobuf:"bytes,11,opt,name=jump_mode,json=jumpMode,proto3" json:"jump_mode,omitempty"`
	Items []*Item `protobuf:"bytes,12,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{0}
}

func (x *Activity) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Activity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Activity) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Activity) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *Activity) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Activity) GetAb() string {
	if x != nil {
		return x.Ab
	}
	return ""
}

func (x *Activity) GetShowName() string {
	if x != nil {
		return x.ShowName
	}
	return ""
}

func (x *Activity) GetPicurl() string {
	if x != nil {
		return x.Picurl
	}
	return ""
}

func (x *Activity) GetPicurlSelected() string {
	if x != nil {
		return x.PicurlSelected
	}
	return ""
}

func (x *Activity) GetH5Link() string {
	if x != nil {
		return x.H5Link
	}
	return ""
}

func (x *Activity) GetJumpMode() string {
	if x != nil {
		return x.JumpMode
	}
	return ""
}

func (x *Activity) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ActivityEntrance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityCover string `protobuf:"bytes,1,opt,name=activity_cover,json=activityCover,proto3" json:"activity_cover,omitempty"`
	ActivityTitle string `protobuf:"bytes,2,opt,name=activity_title,json=activityTitle,proto3" json:"activity_title,omitempty"`
	WordTag string `protobuf:"bytes,3,opt,name=word_tag,json=wordTag,proto3" json:"word_tag,omitempty"`
	ActivitySubtitle string `protobuf:"bytes,4,opt,name=activity_subtitle,json=activitySubtitle,proto3" json:"activity_subtitle,omitempty"`
	ActivityLink string `protobuf:"bytes,5,opt,name=activity_link,json=activityLink,proto3" json:"activity_link,omitempty"`
	ActivityType int32 `protobuf:"varint,6,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	ReserveId int32 `protobuf:"varint,7,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
	Status int32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	UpperList []*User `protobuf:"bytes,9,rep,name=upper_list,json=upperList,proto3" json:"upper_list,omitempty"`
	Report map[string]string `protobuf:"bytes,10,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ActivityEntrance) Reset() {
	*x = ActivityEntrance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityEntrance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityEntrance) ProtoMessage() {}

func (x *ActivityEntrance) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityEntrance.ProtoReflect.Descriptor instead.
func (*ActivityEntrance) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityEntrance) GetActivityCover() string {
	if x != nil {
		return x.ActivityCover
	}
	return ""
}

func (x *ActivityEntrance) GetActivityTitle() string {
	if x != nil {
		return x.ActivityTitle
	}
	return ""
}

func (x *ActivityEntrance) GetWordTag() string {
	if x != nil {
		return x.WordTag
	}
	return ""
}

func (x *ActivityEntrance) GetActivitySubtitle() string {
	if x != nil {
		return x.ActivitySubtitle
	}
	return ""
}

func (x *ActivityEntrance) GetActivityLink() string {
	if x != nil {
		return x.ActivityLink
	}
	return ""
}

func (x *ActivityEntrance) GetActivityType() int32 {
	if x != nil {
		return x.ActivityType
	}
	return 0
}

func (x *ActivityEntrance) GetReserveId() int32 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

func (x *ActivityEntrance) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ActivityEntrance) GetUpperList() []*User {
	if x != nil {
		return x.UpperList
	}
	return nil
}

func (x *ActivityEntrance) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type ActivityEntranceModule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityEntrance []*ActivityEntrance `protobuf:"bytes,1,rep,name=activity_entrance,json=activityEntrance,proto3" json:"activity_entrance,omitempty"`
}

func (x *ActivityEntranceModule) Reset() {
	*x = ActivityEntranceModule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityEntranceModule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityEntranceModule) ProtoMessage() {}

func (x *ActivityEntranceModule) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityEntranceModule.ProtoReflect.Descriptor instead.
func (*ActivityEntranceModule) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{2}
}

func (x *ActivityEntranceModule) GetActivityEntrance() []*ActivityEntrance {
	if x != nil {
		return x.ActivityEntrance
	}
	return nil
}

type ActivityReserve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Vt *StatInfo `protobuf:"bytes,2,opt,name=vt,proto3" json:"vt,omitempty"`
	Danmaku *StatInfo `protobuf:"bytes,3,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
	Button *ReserveButton `protobuf:"bytes,4,opt,name=button,proto3" json:"button,omitempty"`
}

func (x *ActivityReserve) Reset() {
	*x = ActivityReserve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityReserve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityReserve) ProtoMessage() {}

func (x *ActivityReserve) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityReserve.ProtoReflect.Descriptor instead.
func (*ActivityReserve) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityReserve) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActivityReserve) GetVt() *StatInfo {
	if x != nil {
		return x.Vt
	}
	return nil
}

func (x *ActivityReserve) GetDanmaku() *StatInfo {
	if x != nil {
		return x.Danmaku
	}
	return nil
}

func (x *ActivityReserve) GetButton() *ReserveButton {
	if x != nil {
		return x.Button
	}
	return nil
}

type ActivityResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModPoolName string `protobuf:"bytes,1,opt,name=mod_pool_name,json=modPoolName,proto3" json:"mod_pool_name,omitempty"`
	ModResourceName string `protobuf:"bytes,2,opt,name=mod_resource_name,json=modResourceName,proto3" json:"mod_resource_name,omitempty"`
}

func (x *ActivityResource) Reset() {
	*x = ActivityResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityResource) ProtoMessage() {}

func (x *ActivityResource) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityResource.ProtoReflect.Descriptor instead.
func (*ActivityResource) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityResource) GetModPoolName() string {
	if x != nil {
		return x.ModPoolName
	}
	return ""
}

func (x *ActivityResource) GetModResourceName() string {
	if x != nil {
		return x.ModResourceName
	}
	return ""
}

type ActivityTab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	ShowName string `protobuf:"bytes,4,opt,name=show_name,json=showName,proto3" json:"show_name,omitempty"`
	Picurl string `protobuf:"bytes,5,opt,name=picurl,proto3" json:"picurl,omitempty"`
	PicurlSelected string `protobuf:"bytes,6,opt,name=picurl_selected,json=picurlSelected,proto3" json:"picurl_selected,omitempty"`
	H5Link string `protobuf:"bytes,7,opt,name=h5_link,json=h5Link,proto3" json:"h5_link,omitempty"`
	Link string `protobuf:"bytes,8,opt,name=link,proto3" json:"link,omitempty"`
	LinkType int32 `protobuf:"varint,9,opt,name=link_type,json=linkType,proto3" json:"link_type,omitempty"`
	BizKey int64 `protobuf:"varint,10,opt,name=biz_key,json=bizKey,proto3" json:"biz_key,omitempty"`
	Desc string `protobuf:"bytes,11,opt,name=desc,proto3" json:"desc,omitempty"`
	ActExt string `protobuf:"bytes,12,opt,name=act_ext,json=actExt,proto3" json:"act_ext,omitempty"`
	Report map[string]string `protobuf:"bytes,13,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ActivityTab) Reset() {
	*x = ActivityTab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityTab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityTab) ProtoMessage() {}

func (x *ActivityTab) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityTab.ProtoReflect.Descriptor instead.
func (*ActivityTab) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{5}
}

func (x *ActivityTab) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityTab) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ActivityTab) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ActivityTab) GetShowName() string {
	if x != nil {
		return x.ShowName
	}
	return ""
}

func (x *ActivityTab) GetPicurl() string {
	if x != nil {
		return x.Picurl
	}
	return ""
}

func (x *ActivityTab) GetPicurlSelected() string {
	if x != nil {
		return x.PicurlSelected
	}
	return ""
}

func (x *ActivityTab) GetH5Link() string {
	if x != nil {
		return x.H5Link
	}
	return ""
}

func (x *ActivityTab) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ActivityTab) GetLinkType() int32 {
	if x != nil {
		return x.LinkType
	}
	return 0
}

func (x *ActivityTab) GetBizKey() int64 {
	if x != nil {
		return x.BizKey
	}
	return 0
}

func (x *ActivityTab) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ActivityTab) GetActExt() string {
	if x != nil {
		return x.ActExt
	}
	return ""
}

func (x *ActivityTab) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type AggEpCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Num int32 `protobuf:"varint,4,opt,name=num,proto3" json:"num,omitempty"`
	JumpUrl string `protobuf:"bytes,5,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
}

func (x *AggEpCard) Reset() {
	*x = AggEpCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggEpCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggEpCard) ProtoMessage() {}

func (x *AggEpCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggEpCard.ProtoReflect.Descriptor instead.
func (*AggEpCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{6}
}

func (x *AggEpCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AggEpCard) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AggEpCard) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AggEpCard) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *AggEpCard) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

type AggEps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggEpCards []*AggEpCard `protobuf:"bytes,1,rep,name=agg_ep_cards,json=aggEpCards,proto3" json:"agg_ep_cards,omitempty"`
	PlaceIndex int32 `protobuf:"varint,2,opt,name=place_index,json=placeIndex,proto3" json:"place_index,omitempty"`
}

func (x *AggEps) Reset() {
	*x = AggEps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggEps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggEps) ProtoMessage() {}

func (x *AggEps) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggEps.ProtoReflect.Descriptor instead.
func (*AggEps) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{7}
}

func (x *AggEps) GetAggEpCards() []*AggEpCard {
	if x != nil {
		return x.AggEpCards
	}
	return nil
}

func (x *AggEps) GetPlaceIndex() int32 {
	if x != nil {
		return x.PlaceIndex
	}
	return 0
}

type AttentionRecommend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AttentionRecommend) Reset() {
	*x = AttentionRecommend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttentionRecommend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttentionRecommend) ProtoMessage() {}

func (x *AttentionRecommend) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttentionRecommend.ProtoReflect.Descriptor instead.
func (*AttentionRecommend) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{8}
}

type Audio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioInfo map[int64]*AudioInfo `protobuf:"bytes,1,rep,name=audio_info,json=audioInfo,proto3" json:"audio_info,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Audio) Reset() {
	*x = Audio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Audio) ProtoMessage() {}

func (x *Audio) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Audio.ProtoReflect.Descriptor instead.
func (*Audio) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{9}
}

func (x *Audio) GetAudioInfo() map[int64]*AudioInfo {
	if x != nil {
		return x.AudioInfo
	}
	return nil
}

type AudioInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	CoverUrl string `protobuf:"bytes,2,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	SongId int64 `protobuf:"varint,3,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	PlayCount int64 `protobuf:"varint,4,opt,name=play_count,json=playCount,proto3" json:"play_count,omitempty"`
	ReplyCount int64 `protobuf:"varint,5,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`
	UpperId int64 `protobuf:"varint,6,opt,name=upper_id,json=upperId,proto3" json:"upper_id,omitempty"`
	Entrance string `protobuf:"bytes,7,opt,name=entrance,proto3" json:"entrance,omitempty"`
	SongAttr int64 `protobuf:"varint,8,opt,name=song_attr,json=songAttr,proto3" json:"song_attr,omitempty"`
}

func (x *AudioInfo) Reset() {
	*x = AudioInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioInfo) ProtoMessage() {}

func (x *AudioInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioInfo.ProtoReflect.Descriptor instead.
func (*AudioInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{10}
}

func (x *AudioInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AudioInfo) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *AudioInfo) GetSongId() int64 {
	if x != nil {
		return x.SongId
	}
	return 0
}

func (x *AudioInfo) GetPlayCount() int64 {
	if x != nil {
		return x.PlayCount
	}
	return 0
}

func (x *AudioInfo) GetReplyCount() int64 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *AudioInfo) GetUpperId() int64 {
	if x != nil {
		return x.UpperId
	}
	return 0
}

func (x *AudioInfo) GetEntrance() string {
	if x != nil {
		return x.Entrance
	}
	return ""
}

func (x *AudioInfo) GetSongAttr() int64 {
	if x != nil {
		return x.SongAttr
	}
	return 0
}

type BadgeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	TextColor string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	TextColorNight string `protobuf:"bytes,3,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	BgColor string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BgColorNight string `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	BorderColor string `protobuf:"bytes,6,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	BorderColorNight string `protobuf:"bytes,7,opt,name=border_color_night,json=borderColorNight,proto3" json:"border_color_night,omitempty"`
	BgStyle int32 `protobuf:"varint,8,opt,name=bg_style,json=bgStyle,proto3" json:"bg_style,omitempty"`
	Img string `protobuf:"bytes,9,opt,name=img,proto3" json:"img,omitempty"`
	Type int32 `protobuf:"varint,10,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *BadgeInfo) Reset() {
	*x = BadgeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadgeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeInfo) ProtoMessage() {}

func (x *BadgeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeInfo.ProtoReflect.Descriptor instead.
func (*BadgeInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{11}
}

func (x *BadgeInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *BadgeInfo) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *BadgeInfo) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *BadgeInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *BadgeInfo) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *BadgeInfo) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

func (x *BadgeInfo) GetBorderColorNight() string {
	if x != nil {
		return x.BorderColorNight
	}
	return ""
}

func (x *BadgeInfo) GetBgStyle() int32 {
	if x != nil {
		return x.BgStyle
	}
	return 0
}

func (x *BadgeInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *BadgeInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type Banner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	RelateItem []*RelateItem `protobuf:"bytes,2,rep,name=relate_item,json=relateItem,proto3" json:"relate_item,omitempty"`
}

func (x *Banner) Reset() {
	*x = Banner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Banner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Banner) ProtoMessage() {}

func (x *Banner) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Banner.ProtoReflect.Descriptor instead.
func (*Banner) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{12}
}

func (x *Banner) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Banner) GetRelateItem() []*RelateItem {
	if x != nil {
		return x.RelateItem
	}
	return nil
}

type BizFavParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int64 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
}

func (x *BizFavParam) Reset() {
	*x = BizFavParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BizFavParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizFavParam) ProtoMessage() {}

func (x *BizFavParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizFavParam.ProtoReflect.Descriptor instead.
func (*BizFavParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{13}
}

func (x *BizFavParam) GetSeasonId() int64 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

type BizReserveActivityParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId int64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Oid int64 `protobuf:"varint,4,opt,name=oid,proto3" json:"oid,omitempty"`
	ReserveId int64 `protobuf:"varint,5,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
}

func (x *BizReserveActivityParam) Reset() {
	*x = BizReserveActivityParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BizReserveActivityParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BizReserveActivityParam) ProtoMessage() {}

func (x *BizReserveActivityParam) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BizReserveActivityParam.ProtoReflect.Descriptor instead.
func (*BizReserveActivityParam) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{14}
}

func (x *BizReserveActivityParam) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *BizReserveActivityParam) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *BizReserveActivityParam) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BizReserveActivityParam) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *BizReserveActivityParam) GetReserveId() int64 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

type Button struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	LeftStrikethroughText string `protobuf:"bytes,2,opt,name=left_strikethrough_text,json=leftStrikethroughText,proto3" json:"left_strikethrough_text,omitempty"`
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Link string `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	BadgeInfo *BadgeInfo `protobuf:"bytes,5,opt,name=badge_info,json=badgeInfo,proto3" json:"badge_info,omitempty"`
	SubTitle string `protobuf:"bytes,6,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
}

func (x *Button) Reset() {
	*x = Button{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Button) ProtoMessage() {}

func (x *Button) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Button.ProtoReflect.Descriptor instead.
func (*Button) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{15}
}

func (x *Button) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Button) GetLeftStrikethroughText() string {
	if x != nil {
		return x.LeftStrikethroughText
	}
	return ""
}

func (x *Button) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Button) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Button) GetBadgeInfo() *BadgeInfo {
	if x != nil {
		return x.BadgeInfo
	}
	return nil
}

func (x *Button) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

type CardBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	TrackId string `protobuf:"bytes,5,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	UniqueId string `protobuf:"bytes,6,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	FromSourceType int64 `protobuf:"varint,7,opt,name=from_source_type,json=fromSourceType,proto3" json:"from_source_type,omitempty"`
	FromSourceId string `protobuf:"bytes,8,opt,name=from_source_id,json=fromSourceId,proto3" json:"from_source_id,omitempty"`
	MaterialId int64 `protobuf:"varint,9,opt,name=material_id,json=materialId,proto3" json:"material_id,omitempty"`
	CoverGif string `protobuf:"bytes,10,opt,name=cover_gif,json=coverGif,proto3" json:"cover_gif,omitempty"`
	Author *Owner `protobuf:"bytes,11,opt,name=author,proto3" json:"author,omitempty"`
	Id int64 `protobuf:"varint,12,opt,name=id,proto3" json:"id,omitempty"`
	From string `protobuf:"bytes,13,opt,name=from,proto3" json:"from,omitempty"`
	FromSpmidSuffix string `protobuf:"bytes,14,opt,name=from_spmid_suffix,json=fromSpmidSuffix,proto3" json:"from_spmid_suffix,omitempty"`
	ReportFlowData string `protobuf:"bytes,15,opt,name=report_flow_data,json=reportFlowData,proto3" json:"report_flow_data,omitempty"`
}

func (x *CardBasicInfo) Reset() {
	*x = CardBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardBasicInfo) ProtoMessage() {}

func (x *CardBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardBasicInfo.ProtoReflect.Descriptor instead.
func (*CardBasicInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{16}
}

func (x *CardBasicInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CardBasicInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CardBasicInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CardBasicInfo) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CardBasicInfo) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

func (x *CardBasicInfo) GetUniqueId() string {
	if x != nil {
		return x.UniqueId
	}
	return ""
}

func (x *CardBasicInfo) GetFromSourceType() int64 {
	if x != nil {
		return x.FromSourceType
	}
	return 0
}

func (x *CardBasicInfo) GetFromSourceId() string {
	if x != nil {
		return x.FromSourceId
	}
	return ""
}

func (x *CardBasicInfo) GetMaterialId() int64 {
	if x != nil {
		return x.MaterialId
	}
	return 0
}

func (x *CardBasicInfo) GetCoverGif() string {
	if x != nil {
		return x.CoverGif
	}
	return ""
}

func (x *CardBasicInfo) GetAuthor() *Owner {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *CardBasicInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardBasicInfo) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CardBasicInfo) GetFromSpmidSuffix() string {
	if x != nil {
		return x.FromSpmidSuffix
	}
	return ""
}

func (x *CardBasicInfo) GetReportFlowData() string {
	if x != nil {
		return x.ReportFlowData
	}
	return ""
}

type CardStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CardStyle) Reset() {
	*x = CardStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardStyle) ProtoMessage() {}

func (x *CardStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardStyle.ProtoReflect.Descriptor instead.
func (*CardStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{17}
}

func (x *CardStyle) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CardStyle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Celebrity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Role string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Avatar string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	ShortDesc string `protobuf:"bytes,5,opt,name=short_desc,json=shortDesc,proto3" json:"short_desc,omitempty"`
	Desc string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	CharacterAvatar string `protobuf:"bytes,7,opt,name=character_avatar,json=characterAvatar,proto3" json:"character_avatar,omitempty"`
	Link string `protobuf:"bytes,8,opt,name=link,proto3" json:"link,omitempty"`
	Mid int64 `protobuf:"varint,9,opt,name=mid,proto3" json:"mid,omitempty"`
	IsFollow int32 `protobuf:"varint,10,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
	OccupationName string `protobuf:"bytes,11,opt,name=occupation_name,json=occupationName,proto3" json:"occupation_name,omitempty"`
	OccupationType int32 `protobuf:"varint,12,opt,name=occupation_type,json=occupationType,proto3" json:"occupation_type,omitempty"`
	RelateAttr int32 `protobuf:"varint,13,opt,name=relate_attr,json=relateAttr,proto3" json:"relate_attr,omitempty"`
	SmallAvatar string `protobuf:"bytes,14,opt,name=small_avatar,json=smallAvatar,proto3" json:"small_avatar,omitempty"`
	Report map[string]string `protobuf:"bytes,15,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Celebrity) Reset() {
	*x = Celebrity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Celebrity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Celebrity) ProtoMessage() {}

func (x *Celebrity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Celebrity.ProtoReflect.Descriptor instead.
func (*Celebrity) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{18}
}

func (x *Celebrity) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Celebrity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Celebrity) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Celebrity) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Celebrity) GetShortDesc() string {
	if x != nil {
		return x.ShortDesc
	}
	return ""
}

func (x *Celebrity) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Celebrity) GetCharacterAvatar() string {
	if x != nil {
		return x.CharacterAvatar
	}
	return ""
}

func (x *Celebrity) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Celebrity) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Celebrity) GetIsFollow() int32 {
	if x != nil {
		return x.IsFollow
	}
	return 0
}

func (x *Celebrity) GetOccupationName() string {
	if x != nil {
		return x.OccupationName
	}
	return ""
}

func (x *Celebrity) GetOccupationType() int32 {
	if x != nil {
		return x.OccupationType
	}
	return 0
}

func (x *Celebrity) GetRelateAttr() int32 {
	if x != nil {
		return x.RelateAttr
	}
	return 0
}

func (x *Celebrity) GetSmallAvatar() string {
	if x != nil {
		return x.SmallAvatar
	}
	return ""
}

func (x *Celebrity) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type CharacterGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Characters []*Celebrity `protobuf:"bytes,2,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *CharacterGroup) Reset() {
	*x = CharacterGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterGroup) ProtoMessage() {}

func (x *CharacterGroup) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterGroup.ProtoReflect.Descriptor instead.
func (*CharacterGroup) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{19}
}

func (x *CharacterGroup) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CharacterGroup) GetCharacters() []*Celebrity {
	if x != nil {
		return x.Characters
	}
	return nil
}

type Characters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*CharacterGroup `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *Characters) Reset() {
	*x = Characters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Characters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Characters) ProtoMessage() {}

func (x *Characters) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Characters.ProtoReflect.Descriptor instead.
func (*Characters) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{20}
}

func (x *Characters) GetGroups() []*CharacterGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type CoinExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinAppZipIcon string `protobuf:"bytes,1,opt,name=coin_app_zip_icon,json=coinAppZipIcon,proto3" json:"coin_app_zip_icon,omitempty"`
	CoinAppIcon_1 string `protobuf:"bytes,2,opt,name=coin_app_icon_1,json=coinAppIcon1,proto3" json:"coin_app_icon_1,omitempty"`
	CoinAppIcon_2 string `protobuf:"bytes,3,opt,name=coin_app_icon_2,json=coinAppIcon2,proto3" json:"coin_app_icon_2,omitempty"`
	CoinAppIcon_3 string `protobuf:"bytes,4,opt,name=coin_app_icon_3,json=coinAppIcon3,proto3" json:"coin_app_icon_3,omitempty"`
	CoinAppIcon_4 string `protobuf:"bytes,5,opt,name=coin_app_icon_4,json=coinAppIcon4,proto3" json:"coin_app_icon_4,omitempty"`
}

func (x *CoinExtend) Reset() {
	*x = CoinExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinExtend) ProtoMessage() {}

func (x *CoinExtend) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinExtend.ProtoReflect.Descriptor instead.
func (*CoinExtend) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{21}
}

func (x *CoinExtend) GetCoinAppZipIcon() string {
	if x != nil {
		return x.CoinAppZipIcon
	}
	return ""
}

func (x *CoinExtend) GetCoinAppIcon_1() string {
	if x != nil {
		return x.CoinAppIcon_1
	}
	return ""
}

func (x *CoinExtend) GetCoinAppIcon_2() string {
	if x != nil {
		return x.CoinAppIcon_2
	}
	return ""
}

func (x *CoinExtend) GetCoinAppIcon_3() string {
	if x != nil {
		return x.CoinAppIcon_3
	}
	return ""
}

func (x *CoinExtend) GetCoinAppIcon_4() string {
	if x != nil {
		return x.CoinAppIcon_4
	}
	return ""
}

type CombinationEp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SectionId int32 `protobuf:"varint,2,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	CanOrdDesc int32 `protobuf:"varint,4,opt,name=can_ord_desc,json=canOrdDesc,proto3" json:"can_ord_desc,omitempty"`
	More string `protobuf:"bytes,5,opt,name=more,proto3" json:"more,omitempty"`
	EpisodeIds []int32 `protobuf:"varint,6,rep,packed,name=episode_ids,json=episodeIds,proto3" json:"episode_ids,omitempty"`
	Episodes []*ViewEpisode `protobuf:"bytes,7,rep,name=episodes,proto3" json:"episodes,omitempty"`
	SplitText string `protobuf:"bytes,8,opt,name=split_text,json=splitText,proto3" json:"split_text,omitempty"`
	ModuleStyle *Style `protobuf:"bytes,9,opt,name=module_style,json=moduleStyle,proto3" json:"module_style,omitempty"`
	SerialSeason []*SerialSeason `protobuf:"bytes,10,rep,name=serial_season,json=serialSeason,proto3" json:"serial_season,omitempty"`
	SectionData *SectionData `protobuf:"bytes,11,opt,name=section_data,json=sectionData,proto3" json:"section_data,omitempty"`
}

func (x *CombinationEp) Reset() {
	*x = CombinationEp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombinationEp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombinationEp) ProtoMessage() {}

func (x *CombinationEp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombinationEp.ProtoReflect.Descriptor instead.
func (*CombinationEp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{22}
}

func (x *CombinationEp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CombinationEp) GetSectionId() int32 {
	if x != nil {
		return x.SectionId
	}
	return 0
}

func (x *CombinationEp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CombinationEp) GetCanOrdDesc() int32 {
	if x != nil {
		return x.CanOrdDesc
	}
	return 0
}

func (x *CombinationEp) GetMore() string {
	if x != nil {
		return x.More
	}
	return ""
}

func (x *CombinationEp) GetEpisodeIds() []int32 {
	if x != nil {
		return x.EpisodeIds
	}
	return nil
}

func (x *CombinationEp) GetEpisodes() []*ViewEpisode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

func (x *CombinationEp) GetSplitText() string {
	if x != nil {
		return x.SplitText
	}
	return ""
}

func (x *CombinationEp) GetModuleStyle() *Style {
	if x != nil {
		return x.ModuleStyle
	}
	return nil
}

func (x *CombinationEp) GetSerialSeason() []*SerialSeason {
	if x != nil {
		return x.SerialSeason
	}
	return nil
}

func (x *CombinationEp) GetSectionData() *SectionData {
	if x != nil {
		return x.SectionData
	}
	return nil
}

type Covenanter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Covenanter) Reset() {
	*x = Covenanter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Covenanter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Covenanter) ProtoMessage() {}

func (x *Covenanter) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Covenanter.ProtoReflect.Descriptor instead.
func (*Covenanter) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{23}
}

type DeliveryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ModuleStyle *Style `protobuf:"bytes,2,opt,name=module_style,json=moduleStyle,proto3" json:"module_style,omitempty"`
	More string `protobuf:"bytes,3,opt,name=more,proto3" json:"more,omitempty"`
	// Types that are assignable to Data:
	//
	//	*DeliveryData_Activity
	//	*DeliveryData_Characters
	//	*DeliveryData_TheatreHotTopic
	//	*DeliveryData_AggEps
	Data isDeliveryData_Data `protobuf_oneof:"data"`
	Id int32 `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`
	Report map[string]string `protobuf:"bytes,9,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DeliveryData) Reset() {
	*x = DeliveryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryData) ProtoMessage() {}

func (x *DeliveryData) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryData.ProtoReflect.Descriptor instead.
func (*DeliveryData) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{24}
}

func (x *DeliveryData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DeliveryData) GetModuleStyle() *Style {
	if x != nil {
		return x.ModuleStyle
	}
	return nil
}

func (x *DeliveryData) GetMore() string {
	if x != nil {
		return x.More
	}
	return ""
}

func (m *DeliveryData) GetData() isDeliveryData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *DeliveryData) GetActivity() *Activity {
	if x, ok := x.GetData().(*DeliveryData_Activity); ok {
		return x.Activity
	}
	return nil
}

func (x *DeliveryData) GetCharacters() *Characters {
	if x, ok := x.GetData().(*DeliveryData_Characters); ok {
		return x.Characters
	}
	return nil
}

func (x *DeliveryData) GetTheatreHotTopic() *TheatreHotTopic {
	if x, ok := x.GetData().(*DeliveryData_TheatreHotTopic); ok {
		return x.TheatreHotTopic
	}
	return nil
}

func (x *DeliveryData) GetAggEps() *AggEps {
	if x, ok := x.GetData().(*DeliveryData_AggEps); ok {
		return x.AggEps
	}
	return nil
}

func (x *DeliveryData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeliveryData) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type isDeliveryData_Data interface {
	isDeliveryData_Data()
}

type DeliveryData_Activity struct {
	Activity *Activity `protobuf:"bytes,4,opt,name=activity,proto3,oneof"`
}

type DeliveryData_Characters struct {
	Characters *Characters `protobuf:"bytes,5,opt,name=characters,proto3,oneof"`
}

type DeliveryData_TheatreHotTopic struct {
	TheatreHotTopic *TheatreHotTopic `protobuf:"bytes,6,opt,name=theatre_hot_topic,json=theatreHotTopic,proto3,oneof"`
}

type DeliveryData_AggEps struct {
	AggEps *AggEps `protobuf:"bytes,7,opt,name=agg_eps,json=aggEps,proto3,oneof"`
}

func (*DeliveryData_Activity) isDeliveryData_Data() {}

func (*DeliveryData_Characters) isDeliveryData_Data() {}

func (*DeliveryData_TheatreHotTopic) isDeliveryData_Data() {}

func (*DeliveryData_AggEps) isDeliveryData_Data() {}

type Desc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Desc) Reset() {
	*x = Desc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Desc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Desc) ProtoMessage() {}

func (x *Desc) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Desc.ProtoReflect.Descriptor instead.
func (*Desc) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{25}
}

func (x *Desc) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Desc) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type DescV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Rid int64 `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`
}

func (x *DescV2) Reset() {
	*x = DescV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescV2) ProtoMessage() {}

func (x *DescV2) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescV2.ProtoReflect.Descriptor instead.
func (*DescV2) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{26}
}

func (x *DescV2) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DescV2) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DescV2) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *DescV2) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

type Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Rotate int64 `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
}

func (x *Dimension) Reset() {
	*x = Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimension) ProtoMessage() {}

func (x *Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimension.ProtoReflect.Descriptor instead.
func (*Dimension) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{27}
}

func (x *Dimension) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Dimension) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Dimension) GetRotate() int64 {
	if x != nil {
		return x.Rotate
	}
	return 0
}

type DislikeReasons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Mid int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Rid int32 `protobuf:"varint,3,opt,name=rid,proto3" json:"rid,omitempty"`
	TagId int64 `protobuf:"varint,4,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DislikeReasons) Reset() {
	*x = DislikeReasons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DislikeReasons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DislikeReasons) ProtoMessage() {}

func (x *DislikeReasons) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DislikeReasons.ProtoReflect.Descriptor instead.
func (*DislikeReasons) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{28}
}

func (x *DislikeReasons) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DislikeReasons) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *DislikeReasons) GetRid() int32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *DislikeReasons) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *DislikeReasons) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FollowLayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff *Staff `protobuf:"bytes,1,opt,name=staff,proto3" json:"staff,omitempty"`
	Desc *Desc `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Report map[string]string `protobuf:"bytes,3,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FollowLayer) Reset() {
	*x = FollowLayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FollowLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FollowLayer) ProtoMessage() {}

func (x *FollowLayer) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FollowLayer.ProtoReflect.Descriptor instead.
func (*FollowLayer) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{29}
}

func (x *FollowLayer) GetStaff() *Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *FollowLayer) GetDesc() *Desc {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *FollowLayer) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type Headline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *Label `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Headline) Reset() {
	*x = Headline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Headline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Headline) ProtoMessage() {}

func (x *Headline) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Headline.ProtoReflect.Descriptor instead.
func (*Headline) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{30}
}

func (x *Headline) GetLabel() *Label {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *Headline) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type HistoryNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int64 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cid int64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *HistoryNode) Reset() {
	*x = HistoryNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryNode) ProtoMessage() {}

func (x *HistoryNode) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryNode.ProtoReflect.Descriptor instead.
func (*HistoryNode) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{31}
}

func (x *HistoryNode) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *HistoryNode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HistoryNode) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

// 荣誉 Banner
type Honor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	IconNight string `protobuf:"bytes,2,opt,name=icon_night,json=iconNight,proto3" json:"icon_night,omitempty"`
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	TextExtra string `protobuf:"bytes,4,opt,name=text_extra,json=textExtra,proto3" json:"text_extra,omitempty"`
	TextColor string `protobuf:"bytes,5,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	TextColorNight string `protobuf:"bytes,6,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	BgColor string `protobuf:"bytes,7,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	BgColorNight string `protobuf:"bytes,8,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	Url string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	UrlText string `protobuf:"bytes,10,opt,name=url_text,json=urlText,proto3" json:"url_text,omitempty"`
	Type HonorType `protobuf:"varint,11,opt,name=type,proto3,enum=bilibili.app.viewunite.common.HonorType" json:"type,omitempty"`
	HonorJumpType HonorJumpType `protobuf:"varint,12,opt,name=honor_jump_type,json=honorJumpType,proto3,enum=bilibili.app.viewunite.common.HonorJumpType" json:"honor_jump_type,omitempty"`
	Report map[string]string `protobuf:"bytes,13,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Honor) Reset() {
	*x = Honor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Honor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Honor) ProtoMessage() {}

func (x *Honor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Honor.ProtoReflect.Descriptor instead.
func (*Honor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{32}
}

func (x *Honor) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Honor) GetIconNight() string {
	if x != nil {
		return x.IconNight
	}
	return ""
}

func (x *Honor) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Honor) GetTextExtra() string {
	if x != nil {
		return x.TextExtra
	}
	return ""
}

func (x *Honor) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *Honor) GetTextColorNight() string {
	if x != nil {
		return x.TextColorNight
	}
	return ""
}

func (x *Honor) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *Honor) GetBgColorNight() string {
	if x != nil {
		return x.BgColorNight
	}
	return ""
}

func (x *Honor) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Honor) GetUrlText() string {
	if x != nil {
		return x.UrlText
	}
	return ""
}

func (x *Honor) GetType() HonorType {
	if x != nil {
		return x.Type
	}
	return HonorType_HONOR_NONE
}

func (x *Honor) GetHonorJumpType() HonorJumpType {
	if x != nil {
		return x.HonorJumpType
	}
	return HonorJumpType_HONOR_JUMP_TYPE_UNKNOWN
}

func (x *Honor) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type IconFont struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *IconFont) Reset() {
	*x = IconFont{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IconFont) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IconFont) ProtoMessage() {}

func (x *IconFont) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IconFont.ProtoReflect.Descriptor instead.
func (*IconFont) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{33}
}

func (x *IconFont) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IconFont) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Interaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpId int64 `protobuf:"varint,1,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	HistoryNode *HistoryNode `protobuf:"bytes,2,opt,name=history_node,json=historyNode,proto3" json:"history_node,omitempty"`
	GraphVersion int64 `protobuf:"varint,3,opt,name=graph_version,json=graphVersion,proto3" json:"graph_version,omitempty"`
	Msg string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	IsInteraction bool `protobuf:"varint,5,opt,name=is_interaction,json=isInteraction,proto3" json:"is_interaction,omitempty"`
}

func (x *Interaction) Reset() {
	*x = Interaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interaction) ProtoMessage() {}

func (x *Interaction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interaction.ProtoReflect.Descriptor instead.
func (*Interaction) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{34}
}

func (x *Interaction) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *Interaction) GetHistoryNode() *HistoryNode {
	if x != nil {
		return x.HistoryNode
	}
	return nil
}

func (x *Interaction) GetGraphVersion() int64 {
	if x != nil {
		return x.GraphVersion
	}
	return 0
}

func (x *Interaction) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Interaction) GetIsInteraction() bool {
	if x != nil {
		return x.IsInteraction
	}
	return false
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link string `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{35}
}

func (x *Item) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Item) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

type KingPos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disable bool `protobuf:"varint,1,opt,name=disable,proto3" json:"disable,omitempty"`
	Icon string `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Type KingPositionType `protobuf:"varint,3,opt,name=type,proto3,enum=bilibili.app.viewunite.common.KingPositionType" json:"type,omitempty"`
	DisableToast string `protobuf:"bytes,4,opt,name=disable_toast,json=disableToast,proto3" json:"disable_toast,omitempty"`
	CheckedPost string `protobuf:"bytes,5,opt,name=checked_post,json=checkedPost,proto3" json:"checked_post,omitempty"`
	// Types that are assignable to Extend:
	//
	//	*KingPos_Like
	//	*KingPos_Coin
	Extend isKingPos_Extend `protobuf_oneof:"extend"`
}

func (x *KingPos) Reset() {
	*x = KingPos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KingPos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KingPos) ProtoMessage() {}

func (x *KingPos) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KingPos.ProtoReflect.Descriptor instead.
func (*KingPos) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{36}
}

func (x *KingPos) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *KingPos) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *KingPos) GetType() KingPositionType {
	if x != nil {
		return x.Type
	}
	return KingPositionType_KING_POS_UNSPECIFIED
}

func (x *KingPos) GetDisableToast() string {
	if x != nil {
		return x.DisableToast
	}
	return ""
}

func (x *KingPos) GetCheckedPost() string {
	if x != nil {
		return x.CheckedPost
	}
	return ""
}

func (m *KingPos) GetExtend() isKingPos_Extend {
	if m != nil {
		return m.Extend
	}
	return nil
}

func (x *KingPos) GetLike() *LikeExtend {
	if x, ok := x.GetExtend().(*KingPos_Like); ok {
		return x.Like
	}
	return nil
}

func (x *KingPos) GetCoin() *CoinExtend {
	if x, ok := x.GetExtend().(*KingPos_Coin); ok {
		return x.Coin
	}
	return nil
}

type isKingPos_Extend interface {
	isKingPos_Extend()
}

type KingPos_Like struct {
	Like *LikeExtend `protobuf:"bytes,6,opt,name=like,proto3,oneof"`
}

type KingPos_Coin struct {
	Coin *CoinExtend `protobuf:"bytes,7,opt,name=coin,proto3,oneof"`
}

func (*KingPos_Like) isKingPos_Extend() {}

func (*KingPos_Coin) isKingPos_Extend() {}

type KingPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KingPos []*KingPos `protobuf:"bytes,1,rep,name=king_pos,json=kingPos,proto3" json:"king_pos,omitempty"`
	Extenf []*KingPos `protobuf:"bytes,2,rep,name=extenf,proto3" json:"extenf,omitempty"`
}

func (x *KingPosition) Reset() {
	*x = KingPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KingPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KingPosition) ProtoMessage() {}

func (x *KingPosition) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KingPosition.ProtoReflect.Descriptor instead.
func (*KingPosition) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{37}
}

func (x *KingPosition) GetKingPos() []*KingPos {
	if x != nil {
		return x.KingPos
	}
	return nil
}

func (x *KingPosition) GetExtenf() []*KingPos {
	if x != nil {
		return x.Extenf
	}
	return nil
}

type Label struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	IconNight string `protobuf:"bytes,4,opt,name=icon_night,json=iconNight,proto3" json:"icon_night,omitempty"`
	IconWidth int64 `protobuf:"varint,5,opt,name=icon_width,json=iconWidth,proto3" json:"icon_width,omitempty"`
	IconHeight int64 `protobuf:"varint,6,opt,name=icon_height,json=iconHeight,proto3" json:"icon_height,omitempty"`
	Lottie string `protobuf:"bytes,7,opt,name=lottie,proto3" json:"lottie,omitempty"`
	LottieNight string `protobuf:"bytes,8,opt,name=lottie_night,json=lottieNight,proto3" json:"lottie_night,omitempty"`
}

func (x *Label) Reset() {
	*x = Label{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{38}
}

func (x *Label) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Label) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Label) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Label) GetIconNight() string {
	if x != nil {
		return x.IconNight
	}
	return ""
}

func (x *Label) GetIconWidth() int64 {
	if x != nil {
		return x.IconWidth
	}
	return 0
}

func (x *Label) GetIconHeight() int64 {
	if x != nil {
		return x.IconHeight
	}
	return 0
}

func (x *Label) GetLottie() string {
	if x != nil {
		return x.Lottie
	}
	return ""
}

func (x *Label) GetLottieNight() string {
	if x != nil {
		return x.LottieNight
	}
	return ""
}

type LikeComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply string `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *LikeComment) Reset() {
	*x = LikeComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeComment) ProtoMessage() {}

func (x *LikeComment) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeComment.ProtoReflect.Descriptor instead.
func (*LikeComment) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{39}
}

func (x *LikeComment) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *LikeComment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type LikeExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripleLike *UpLikeImg `protobuf:"bytes,1,opt,name=triple_like,json=tripleLike,proto3" json:"triple_like,omitempty"`
	LikeAnimation string `protobuf:"bytes,2,opt,name=like_animation,json=likeAnimation,proto3" json:"like_animation,omitempty"`
	PlayerAnimation *PlayerAnimation `protobuf:"bytes,3,opt,name=player_animation,json=playerAnimation,proto3" json:"player_animation,omitempty"`
	Resource *ActivityResource `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *LikeExtend) Reset() {
	*x = LikeExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeExtend) ProtoMessage() {}

func (x *LikeExtend) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeExtend.ProtoReflect.Descriptor instead.
func (*LikeExtend) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{40}
}

func (x *LikeExtend) GetTripleLike() *UpLikeImg {
	if x != nil {
		return x.TripleLike
	}
	return nil
}

func (x *LikeExtend) GetLikeAnimation() string {
	if x != nil {
		return x.LikeAnimation
	}
	return ""
}

func (x *LikeExtend) GetPlayerAnimation() *PlayerAnimation {
	if x != nil {
		return x.PlayerAnimation
	}
	return nil
}

func (x *LikeExtend) GetResource() *ActivityResource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type Live struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	RoomId int64 `protobuf:"varint,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	EndpageUri string `protobuf:"bytes,4,opt,name=endpage_uri,json=endpageUri,proto3" json:"endpage_uri,omitempty"`
}

func (x *Live) Reset() {
	*x = Live{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Live) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Live) ProtoMessage() {}

func (x *Live) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Live.ProtoReflect.Descriptor instead.
func (*Live) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{41}
}

func (x *Live) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Live) GetRoomId() int64 {
	if x != nil {
		return x.RoomId
	}
	return 0
}

func (x *Live) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Live) GetEndpageUri() string {
	if x != nil {
		return x.EndpageUri
	}
	return ""
}

// 直播预约信息
type LiveOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid int64 `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	LivePlanStartTime int64 `protobuf:"varint,3,opt,name=live_plan_start_time,json=livePlanStartTime,proto3" json:"live_plan_start_time,omitempty"`
	IsFollow bool `protobuf:"varint,4,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
	FollowCount int64 `protobuf:"varint,5,opt,name=follow_count,json=followCount,proto3" json:"follow_count,omitempty"`
}

func (x *LiveOrder) Reset() {
	*x = LiveOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveOrder) ProtoMessage() {}

func (x *LiveOrder) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveOrder.ProtoReflect.Descriptor instead.
func (*LiveOrder) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{42}
}

func (x *LiveOrder) GetSid() int64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *LiveOrder) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *LiveOrder) GetLivePlanStartTime() int64 {
	if x != nil {
		return x.LivePlanStartTime
	}
	return 0
}

func (x *LiveOrder) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

func (x *LiveOrder) GetFollowCount() int64 {
	if x != nil {
		return x.FollowCount
	}
	return 0
}

type Mine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Rank int32 `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Msg string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Mine) Reset() {
	*x = Mine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mine) ProtoMessage() {}

func (x *Mine) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mine.ProtoReflect.Descriptor instead.
func (*Mine) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{43}
}

func (x *Mine) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Mine) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *Mine) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ModuleType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.viewunite.common.ModuleType" json:"type,omitempty"`
	// Types that are assignable to Data:
	//
	//	*Module_OgvIntroduction
	//	*Module_UgcIntroduction
	//	*Module_KingPosition
	//	*Module_HeadLine
	//	*Module_OgvTitle
	//	*Module_Honor
	//	*Module_List
	//	*Module_Staffs
	//	*Module_ActivityReserve
	//	*Module_LiveOrder
	//	*Module_SectionData
	//	*Module_DeliveryData
	//	*Module_FollowLayer
	//	*Module_OgvSeasons
	//	*Module_UgcSeason
	//	*Module_OgvLiveReserve
	//	*Module_CombinationEp
	//	*Module_Sponsor
	//	*Module_ActivityEntranceModule
	//	*Module_SerialSeason
	//	*Module_Relates
	//	*Module_Banner
	//	*Module_Audio
	//	*Module_LikeComment
	//	*Module_AttentionRecommend
	//	*Module_Covenanter
	Data isModule_Data `protobuf_oneof:"data"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{44}
}

func (x *Module) GetType() ModuleType {
	if x != nil {
		return x.Type
	}
	return ModuleType_UNKNOWN
}

func (m *Module) GetData() isModule_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Module) GetOgvIntroduction() *OgvIntroduction {
	if x, ok := x.GetData().(*Module_OgvIntroduction); ok {
		return x.OgvIntroduction
	}
	return nil
}

func (x *Module) GetUgcIntroduction() *UgcIntroduction {
	if x, ok := x.GetData().(*Module_UgcIntroduction); ok {
		return x.UgcIntroduction
	}
	return nil
}

func (x *Module) GetKingPosition() *KingPosition {
	if x, ok := x.GetData().(*Module_KingPosition); ok {
		return x.KingPosition
	}
	return nil
}

func (x *Module) GetHeadLine() *Headline {
	if x, ok := x.GetData().(*Module_HeadLine); ok {
		return x.HeadLine
	}
	return nil
}

func (x *Module) GetOgvTitle() *OgvTitle {
	if x, ok := x.GetData().(*Module_OgvTitle); ok {
		return x.OgvTitle
	}
	return nil
}

func (x *Module) GetHonor() *Honor {
	if x, ok := x.GetData().(*Module_Honor); ok {
		return x.Honor
	}
	return nil
}

func (x *Module) GetList() *UserList {
	if x, ok := x.GetData().(*Module_List); ok {
		return x.List
	}
	return nil
}

func (x *Module) GetStaffs() *Staffs {
	if x, ok := x.GetData().(*Module_Staffs); ok {
		return x.Staffs
	}
	return nil
}

func (x *Module) GetActivityReserve() *ActivityReserve {
	if x, ok := x.GetData().(*Module_ActivityReserve); ok {
		return x.ActivityReserve
	}
	return nil
}

func (x *Module) GetLiveOrder() *LiveOrder {
	if x, ok := x.GetData().(*Module_LiveOrder); ok {
		return x.LiveOrder
	}
	return nil
}

func (x *Module) GetSectionData() *SectionData {
	if x, ok := x.GetData().(*Module_SectionData); ok {
		return x.SectionData
	}
	return nil
}

func (x *Module) GetDeliveryData() *DeliveryData {
	if x, ok := x.GetData().(*Module_DeliveryData); ok {
		return x.DeliveryData
	}
	return nil
}

func (x *Module) GetFollowLayer() *FollowLayer {
	if x, ok := x.GetData().(*Module_FollowLayer); ok {
		return x.FollowLayer
	}
	return nil
}

func (x *Module) GetOgvSeasons() *OgvSeasons {
	if x, ok := x.GetData().(*Module_OgvSeasons); ok {
		return x.OgvSeasons
	}
	return nil
}

func (x *Module) GetUgcSeason() *UgcSeasons {
	if x, ok := x.GetData().(*Module_UgcSeason); ok {
		return x.UgcSeason
	}
	return nil
}

func (x *Module) GetOgvLiveReserve() *OgvLiveReserve {
	if x, ok := x.GetData().(*Module_OgvLiveReserve); ok {
		return x.OgvLiveReserve
	}
	return nil
}

func (x *Module) GetCombinationEp() *CombinationEp {
	if x, ok := x.GetData().(*Module_CombinationEp); ok {
		return x.CombinationEp
	}
	return nil
}

func (x *Module) GetSponsor() *Sponsor {
	if x, ok := x.GetData().(*Module_Sponsor); ok {
		return x.Sponsor
	}
	return nil
}

func (x *Module) GetActivityEntranceModule() *ActivityEntranceModule {
	if x, ok := x.GetData().(*Module_ActivityEntranceModule); ok {
		return x.ActivityEntranceModule
	}
	return nil
}

func (x *Module) GetSerialSeason() *SerialSeason {
	if x, ok := x.GetData().(*Module_SerialSeason); ok {
		return x.SerialSeason
	}
	return nil
}

func (x *Module) GetRelates() *Relates {
	if x, ok := x.GetData().(*Module_Relates); ok {
		return x.Relates
	}
	return nil
}

func (x *Module) GetBanner() *Banner {
	if x, ok := x.GetData().(*Module_Banner); ok {
		return x.Banner
	}
	return nil
}

func (x *Module) GetAudio() *Audio {
	if x, ok := x.GetData().(*Module_Audio); ok {
		return x.Audio
	}
	return nil
}

func (x *Module) GetLikeComment() *LikeComment {
	if x, ok := x.GetData().(*Module_LikeComment); ok {
		return x.LikeComment
	}
	return nil
}

func (x *Module) GetAttentionRecommend() *AttentionRecommend {
	if x, ok := x.GetData().(*Module_AttentionRecommend); ok {
		return x.AttentionRecommend
	}
	return nil
}

func (x *Module) GetCovenanter() *Covenanter {
	if x, ok := x.GetData().(*Module_Covenanter); ok {
		return x.Covenanter
	}
	return nil
}

type isModule_Data interface {
	isModule_Data()
}

type Module_OgvIntroduction struct {
	OgvIntroduction *OgvIntroduction `protobuf:"bytes,2,opt,name=ogv_introduction,json=ogvIntroduction,proto3,oneof"`
}

type Module_UgcIntroduction struct {
	UgcIntroduction *UgcIntroduction `protobuf:"bytes,3,opt,name=ugc_introduction,json=ugcIntroduction,proto3,oneof"`
}

type Module_KingPosition struct {
	KingPosition *KingPosition `protobuf:"bytes,4,opt,name=king_position,json=kingPosition,proto3,oneof"`
}

type Module_HeadLine struct {
	HeadLine *Headline `protobuf:"bytes,5,opt,name=head_line,json=headLine,proto3,oneof"`
}

type Module_OgvTitle struct {
	OgvTitle *OgvTitle `protobuf:"bytes,6,opt,name=ogv_title,json=ogvTitle,proto3,oneof"`
}

type Module_Honor struct {
	Honor *Honor `protobuf:"bytes,7,opt,name=honor,proto3,oneof"`
}

type Module_List struct {
	List *UserList `protobuf:"bytes,8,opt,name=list,proto3,oneof"`
}

type Module_Staffs struct {
	Staffs *Staffs `protobuf:"bytes,9,opt,name=staffs,proto3,oneof"`
}

type Module_ActivityReserve struct {
	ActivityReserve *ActivityReserve `protobuf:"bytes,10,opt,name=activity_reserve,json=activityReserve,proto3,oneof"`
}

type Module_LiveOrder struct {
	LiveOrder *LiveOrder `protobuf:"bytes,11,opt,name=live_order,json=liveOrder,proto3,oneof"`
}

type Module_SectionData struct {
	SectionData *SectionData `protobuf:"bytes,12,opt,name=section_data,json=sectionData,proto3,oneof"`
}

type Module_DeliveryData struct {
	DeliveryData *DeliveryData `protobuf:"bytes,13,opt,name=delivery_data,json=deliveryData,proto3,oneof"`
}

type Module_FollowLayer struct {
	FollowLayer *FollowLayer `protobuf:"bytes,14,opt,name=follow_layer,json=followLayer,proto3,oneof"`
}

type Module_OgvSeasons struct {
	OgvSeasons *OgvSeasons `protobuf:"bytes,15,opt,name=ogv_seasons,json=ogvSeasons,proto3,oneof"`
}

type Module_UgcSeason struct {
	UgcSeason *UgcSeasons `protobuf:"bytes,16,opt,name=ugc_season,json=ugcSeason,proto3,oneof"`
}

type Module_OgvLiveReserve struct {
	OgvLiveReserve *OgvLiveReserve `protobuf:"bytes,17,opt,name=ogv_live_reserve,json=ogvLiveReserve,proto3,oneof"`
}

type Module_CombinationEp struct {
	CombinationEp *CombinationEp `protobuf:"bytes,18,opt,name=combination_ep,json=combinationEp,proto3,oneof"`
}

type Module_Sponsor struct {
	Sponsor *Sponsor `protobuf:"bytes,19,opt,name=sponsor,proto3,oneof"`
}

type Module_ActivityEntranceModule struct {
	ActivityEntranceModule *ActivityEntranceModule `protobuf:"bytes,20,opt,name=activity_entrance_module,json=activityEntranceModule,proto3,oneof"`
}

type Module_SerialSeason struct {
	SerialSeason *SerialSeason `protobuf:"bytes,21,opt,name=serial_season,json=serialSeason,proto3,oneof"`
}

type Module_Relates struct {
	Relates *Relates `protobuf:"bytes,22,opt,name=relates,proto3,oneof"`
}

type Module_Banner struct {
	Banner *Banner `protobuf:"bytes,23,opt,name=banner,proto3,oneof"`
}

type Module_Audio struct {
	Audio *Audio `protobuf:"bytes,24,opt,name=audio,proto3,oneof"`
}

type Module_LikeComment struct {
	LikeComment *LikeComment `protobuf:"bytes,25,opt,name=like_comment,json=likeComment,proto3,oneof"`
}

type Module_AttentionRecommend struct {
	AttentionRecommend *AttentionRecommend `protobuf:"bytes,26,opt,name=attention_recommend,json=attentionRecommend,proto3,oneof"`
}

type Module_Covenanter struct {
	Covenanter *Covenanter `protobuf:"bytes,27,opt,name=covenanter,proto3,oneof"`
}

func (*Module_OgvIntroduction) isModule_Data() {}

func (*Module_UgcIntroduction) isModule_Data() {}

func (*Module_KingPosition) isModule_Data() {}

func (*Module_HeadLine) isModule_Data() {}

func (*Module_OgvTitle) isModule_Data() {}

func (*Module_Honor) isModule_Data() {}

func (*Module_List) isModule_Data() {}

func (*Module_Staffs) isModule_Data() {}

func (*Module_ActivityReserve) isModule_Data() {}

func (*Module_LiveOrder) isModule_Data() {}

func (*Module_SectionData) isModule_Data() {}

func (*Module_DeliveryData) isModule_Data() {}

func (*Module_FollowLayer) isModule_Data() {}

func (*Module_OgvSeasons) isModule_Data() {}

func (*Module_UgcSeason) isModule_Data() {}

func (*Module_OgvLiveReserve) isModule_Data() {}

func (*Module_CombinationEp) isModule_Data() {}

func (*Module_Sponsor) isModule_Data() {}

func (*Module_ActivityEntranceModule) isModule_Data() {}

func (*Module_SerialSeason) isModule_Data() {}

func (*Module_Relates) isModule_Data() {}

func (*Module_Banner) isModule_Data() {}

func (*Module_Audio) isModule_Data() {}

func (*Module_LikeComment) isModule_Data() {}

func (*Module_AttentionRecommend) isModule_Data() {}

func (*Module_Covenanter) isModule_Data() {}

type MultiViewEp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpId int64 `protobuf:"varint,1,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
}

func (x *MultiViewEp) Reset() {
	*x = MultiViewEp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiViewEp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiViewEp) ProtoMessage() {}

func (x *MultiViewEp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiViewEp.ProtoReflect.Descriptor instead.
func (*MultiViewEp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{45}
}

func (x *MultiViewEp) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

type NewEp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	IsNew int32 `protobuf:"varint,4,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	More string `protobuf:"bytes,5,opt,name=more,proto3" json:"more,omitempty"`
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	IndexShow string `protobuf:"bytes,7,opt,name=index_show,json=indexShow,proto3" json:"index_show,omitempty"`
}

func (x *NewEp) Reset() {
	*x = NewEp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewEp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewEp) ProtoMessage() {}

func (x *NewEp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewEp.ProtoReflect.Descriptor instead.
func (*NewEp) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{46}
}

func (x *NewEp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewEp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewEp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *NewEp) GetIsNew() int32 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *NewEp) GetMore() string {
	if x != nil {
		return x.More
	}
	return ""
}

func (x *NewEp) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *NewEp) GetIndexShow() string {
	if x != nil {
		return x.IndexShow
	}
	return ""
}

type OfficialVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *OfficialVerify) Reset() {
	*x = OfficialVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfficialVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfficialVerify) ProtoMessage() {}

func (x *OfficialVerify) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfficialVerify.ProtoReflect.Descriptor instead.
func (*OfficialVerify) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{47}
}

func (x *OfficialVerify) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OfficialVerify) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type OgvIntroduction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Followers string `protobuf:"bytes,1,opt,name=followers,proto3" json:"followers,omitempty"`
	Score string `protobuf:"bytes,2,opt,name=score,proto3" json:"score,omitempty"`
	PlayData *StatInfo `protobuf:"bytes,3,opt,name=play_data,json=playData,proto3" json:"play_data,omitempty"`
}

func (x *OgvIntroduction) Reset() {
	*x = OgvIntroduction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvIntroduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvIntroduction) ProtoMessage() {}

func (x *OgvIntroduction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvIntroduction.ProtoReflect.Descriptor instead.
func (*OgvIntroduction) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{48}
}

func (x *OgvIntroduction) GetFollowers() string {
	if x != nil {
		return x.Followers
	}
	return ""
}

func (x *OgvIntroduction) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *OgvIntroduction) GetPlayData() *StatInfo {
	if x != nil {
		return x.PlayData
	}
	return nil
}

type OgvLiveReserve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReserveId int64 `protobuf:"varint,1,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	NightIcon string `protobuf:"bytes,4,opt,name=night_icon,json=nightIcon,proto3" json:"night_icon,omitempty"`
	ClickButton string `protobuf:"bytes,5,opt,name=click_button,json=clickButton,proto3" json:"click_button,omitempty"`
	Link string `protobuf:"bytes,6,opt,name=link,proto3" json:"link,omitempty"`
	FollowVideoIsReserveLive int32 `protobuf:"varint,7,opt,name=follow_video_is_reserve_live,json=followVideoIsReserveLive,proto3" json:"follow_video_is_reserve_live,omitempty"`
	BgColor string `protobuf:"bytes,8,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	NightBgColor string `protobuf:"bytes,9,opt,name=night_bg_color,json=nightBgColor,proto3" json:"night_bg_color,omitempty"`
	TextColor string `protobuf:"bytes,10,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	NightTextColor string `protobuf:"bytes,11,opt,name=night_text_color,json=nightTextColor,proto3" json:"night_text_color,omitempty"`
	BtBgColor string `protobuf:"bytes,12,opt,name=bt_bg_color,json=btBgColor,proto3" json:"bt_bg_color,omitempty"`
	BtFrameColor string `protobuf:"bytes,13,opt,name=bt_frame_color,json=btFrameColor,proto3" json:"bt_frame_color,omitempty"`
	NightBtBgColor string `protobuf:"bytes,14,opt,name=night_bt_bg_color,json=nightBtBgColor,proto3" json:"night_bt_bg_color,omitempty"`
	NightBtFrameColor string `protobuf:"bytes,15,opt,name=night_bt_frame_color,json=nightBtFrameColor,proto3" json:"night_bt_frame_color,omitempty"`
	ActiveType int32 `protobuf:"varint,16,opt,name=active_type,json=activeType,proto3" json:"active_type,omitempty"`
	ReserveStatus int32 `protobuf:"varint,17,opt,name=reserve_status,json=reserveStatus,proto3" json:"reserve_status,omitempty"`
	BtTextColor string `protobuf:"bytes,18,opt,name=bt_text_color,json=btTextColor,proto3" json:"bt_text_color,omitempty"`
	NightBtTextColor string `protobuf:"bytes,19,opt,name=night_bt_text_color,json=nightBtTextColor,proto3" json:"night_bt_text_color,omitempty"`
	Report map[string]string `protobuf:"bytes,20,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OgvLiveReserve) Reset() {
	*x = OgvLiveReserve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvLiveReserve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvLiveReserve) ProtoMessage() {}

func (x *OgvLiveReserve) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvLiveReserve.ProtoReflect.Descriptor instead.
func (*OgvLiveReserve) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{49}
}

func (x *OgvLiveReserve) GetReserveId() int64 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

func (x *OgvLiveReserve) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OgvLiveReserve) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *OgvLiveReserve) GetNightIcon() string {
	if x != nil {
		return x.NightIcon
	}
	return ""
}

func (x *OgvLiveReserve) GetClickButton() string {
	if x != nil {
		return x.ClickButton
	}
	return ""
}

func (x *OgvLiveReserve) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *OgvLiveReserve) GetFollowVideoIsReserveLive() int32 {
	if x != nil {
		return x.FollowVideoIsReserveLive
	}
	return 0
}

func (x *OgvLiveReserve) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *OgvLiveReserve) GetNightBgColor() string {
	if x != nil {
		return x.NightBgColor
	}
	return ""
}

func (x *OgvLiveReserve) GetTextColor() string {
	if x != nil {
		return x.TextColor
	}
	return ""
}

func (x *OgvLiveReserve) GetNightTextColor() string {
	if x != nil {
		return x.NightTextColor
	}
	return ""
}

func (x *OgvLiveReserve) GetBtBgColor() string {
	if x != nil {
		return x.BtBgColor
	}
	return ""
}

func (x *OgvLiveReserve) GetBtFrameColor() string {
	if x != nil {
		return x.BtFrameColor
	}
	return ""
}

func (x *OgvLiveReserve) GetNightBtBgColor() string {
	if x != nil {
		return x.NightBtBgColor
	}
	return ""
}

func (x *OgvLiveReserve) GetNightBtFrameColor() string {
	if x != nil {
		return x.NightBtFrameColor
	}
	return ""
}

func (x *OgvLiveReserve) GetActiveType() int32 {
	if x != nil {
		return x.ActiveType
	}
	return 0
}

func (x *OgvLiveReserve) GetReserveStatus() int32 {
	if x != nil {
		return x.ReserveStatus
	}
	return 0
}

func (x *OgvLiveReserve) GetBtTextColor() string {
	if x != nil {
		return x.BtTextColor
	}
	return ""
}

func (x *OgvLiveReserve) GetNightBtTextColor() string {
	if x != nil {
		return x.NightBtTextColor
	}
	return ""
}

func (x *OgvLiveReserve) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type OgvSeasons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	SerialSeason []*SerialSeason `protobuf:"bytes,2,rep,name=serial_season,json=serialSeason,proto3" json:"serial_season,omitempty"`
	Style SerialSeasonCoverStyle `protobuf:"varint,3,opt,name=style,proto3,enum=bilibili.app.viewunite.common.SerialSeasonCoverStyle" json:"style,omitempty"`
}

func (x *OgvSeasons) Reset() {
	*x = OgvSeasons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvSeasons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvSeasons) ProtoMessage() {}

func (x *OgvSeasons) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvSeasons.ProtoReflect.Descriptor instead.
func (*OgvSeasons) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{50}
}

func (x *OgvSeasons) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OgvSeasons) GetSerialSeason() []*SerialSeason {
	if x != nil {
		return x.SerialSeason
	}
	return nil
}

func (x *OgvSeasons) GetStyle() SerialSeasonCoverStyle {
	if x != nil {
		return x.Style
	}
	return SerialSeasonCoverStyle_TITLE
}

type OgvTitle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	BadgeInfo *BadgeInfo `protobuf:"bytes,2,opt,name=badge_info,json=badgeInfo,proto3" json:"badge_info,omitempty"`
	IsShowBtnAnimation int32 `protobuf:"varint,3,opt,name=is_show_btn_animation,json=isShowBtnAnimation,proto3" json:"is_show_btn_animation,omitempty"`
	FollowVideoIsReserveLive int32 `protobuf:"varint,4,opt,name=follow_video_is_reserve_live,json=followVideoIsReserveLive,proto3" json:"follow_video_is_reserve_live,omitempty"`
	ReserveId int64 `protobuf:"varint,5,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
	TitleDeliveryButton *TitleDeliveryButton `protobuf:"bytes,6,opt,name=title_delivery_button,json=titleDeliveryButton,proto3" json:"title_delivery_button,omitempty"`
}

func (x *OgvTitle) Reset() {
	*x = OgvTitle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OgvTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OgvTitle) ProtoMessage() {}

func (x *OgvTitle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OgvTitle.ProtoReflect.Descriptor instead.
func (*OgvTitle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{51}
}

func (x *OgvTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OgvTitle) GetBadgeInfo() *BadgeInfo {
	if x != nil {
		return x.BadgeInfo
	}
	return nil
}

func (x *OgvTitle) GetIsShowBtnAnimation() int32 {
	if x != nil {
		return x.IsShowBtnAnimation
	}
	return 0
}

func (x *OgvTitle) GetFollowVideoIsReserveLive() int32 {
	if x != nil {
		return x.FollowVideoIsReserveLive
	}
	return 0
}

func (x *OgvTitle) GetReserveId() int64 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

func (x *OgvTitle) GetTitleDeliveryButton() *TitleDeliveryButton {
	if x != nil {
		return x.TitleDeliveryButton
	}
	return nil
}

type Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avatar *v1.AvatarItem `protobuf:"bytes,1,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Fans string `protobuf:"bytes,4,opt,name=fans,proto3" json:"fans,omitempty"`
	ArcCount string `protobuf:"bytes,5,opt,name=arc_count,json=arcCount,proto3" json:"arc_count,omitempty"`
	Attention int32 `protobuf:"varint,6,opt,name=attention,proto3" json:"attention,omitempty"`
	AttentionRelation int32 `protobuf:"varint,7,opt,name=attention_relation,json=attentionRelation,proto3" json:"attention_relation,omitempty"`
	PubLocation string `protobuf:"bytes,8,opt,name=pub_location,json=pubLocation,proto3" json:"pub_location,omitempty"`
	Vip *Vip `protobuf:"bytes,9,opt,name=vip,proto3" json:"vip,omitempty"`
	TitleUrl string `protobuf:"bytes,10,opt,name=title_url,json=titleUrl,proto3" json:"title_url,omitempty"`
	Face string `protobuf:"bytes,11,opt,name=face,proto3" json:"face,omitempty"`
	Mid int64 `protobuf:"varint,12,opt,name=mid,proto3" json:"mid,omitempty"`
	OfficialVerify *OfficialVerify `protobuf:"bytes,13,opt,name=official_verify,json=officialVerify,proto3" json:"official_verify,omitempty"`
	Live *Live `protobuf:"bytes,14,opt,name=live,proto3" json:"live,omitempty"`
	FansNum int64 `protobuf:"varint,15,opt,name=fans_num,json=fansNum,proto3" json:"fans_num,omitempty"`
	Assists []int64 `protobuf:"varint,16,rep,packed,name=assists,proto3" json:"assists,omitempty"`
}

func (x *Owner) Reset() {
	*x = Owner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Owner) ProtoMessage() {}

func (x *Owner) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Owner.ProtoReflect.Descriptor instead.
func (*Owner) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{52}
}

func (x *Owner) GetAvatar() *v1.AvatarItem {
	if x != nil {
		return x.Avatar
	}
	return nil
}

func (x *Owner) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Owner) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Owner) GetFans() string {
	if x != nil {
		return x.Fans
	}
	return ""
}

func (x *Owner) GetArcCount() string {
	if x != nil {
		return x.ArcCount
	}
	return ""
}

func (x *Owner) GetAttention() int32 {
	if x != nil {
		return x.Attention
	}
	return 0
}

func (x *Owner) GetAttentionRelation() int32 {
	if x != nil {
		return x.AttentionRelation
	}
	return 0
}

func (x *Owner) GetPubLocation() string {
	if x != nil {
		return x.PubLocation
	}
	return ""
}

func (x *Owner) GetVip() *Vip {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *Owner) GetTitleUrl() string {
	if x != nil {
		return x.TitleUrl
	}
	return ""
}

func (x *Owner) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *Owner) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Owner) GetOfficialVerify() *OfficialVerify {
	if x != nil {
		return x.OfficialVerify
	}
	return nil
}

func (x *Owner) GetLive() *Live {
	if x != nil {
		return x.Live
	}
	return nil
}

func (x *Owner) GetFansNum() int64 {
	if x != nil {
		return x.FansNum
	}
	return 0
}

func (x *Owner) GetAssists() []int64 {
	if x != nil {
		return x.Assists
	}
	return nil
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Part string `protobuf:"bytes,2,opt,name=part,proto3" json:"part,omitempty"`
	Duration int64 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Desc string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Dimension *Dimension `protobuf:"bytes,5,opt,name=dimension,proto3" json:"dimension,omitempty"`
	DlTitle string `protobuf:"bytes,6,opt,name=dl_title,json=dlTitle,proto3" json:"dl_title,omitempty"`
	DlSubtitle string `protobuf:"bytes,7,opt,name=dl_subtitle,json=dlSubtitle,proto3" json:"dl_subtitle,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{53}
}

func (x *Page) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Page) GetPart() string {
	if x != nil {
		return x.Part
	}
	return ""
}

func (x *Page) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Page) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Page) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *Page) GetDlTitle() string {
	if x != nil {
		return x.DlTitle
	}
	return ""
}

func (x *Page) GetDlSubtitle() string {
	if x != nil {
		return x.DlSubtitle
	}
	return ""
}

type Pendant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Pendant) Reset() {
	*x = Pendant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pendant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pendant) ProtoMessage() {}

func (x *Pendant) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pendant.ProtoReflect.Descriptor instead.
func (*Pendant) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{54}
}

func (x *Pendant) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Pendant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Pendant) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type PlayerAnimation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerIcon string `protobuf:"bytes,1,opt,name=player_icon,json=playerIcon,proto3" json:"player_icon,omitempty"`
	PlayerTripleIcon string `protobuf:"bytes,2,opt,name=player_triple_icon,json=playerTripleIcon,proto3" json:"player_triple_icon,omitempty"`
}

func (x *PlayerAnimation) Reset() {
	*x = PlayerAnimation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAnimation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAnimation) ProtoMessage() {}

func (x *PlayerAnimation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAnimation.ProtoReflect.Descriptor instead.
func (*PlayerAnimation) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{55}
}

func (x *PlayerAnimation) GetPlayerIcon() string {
	if x != nil {
		return x.PlayerIcon
	}
	return ""
}

func (x *PlayerAnimation) GetPlayerTripleIcon() string {
	if x != nil {
		return x.PlayerTripleIcon
	}
	return ""
}

type PointActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tip string `protobuf:"bytes,1,opt,name=tip,proto3" json:"tip,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Link string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *PointActivity) Reset() {
	*x = PointActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PointActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PointActivity) ProtoMessage() {}

func (x *PointActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PointActivity.ProtoReflect.Descriptor instead.
func (*PointActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{56}
}

func (x *PointActivity) GetTip() string {
	if x != nil {
		return x.Tip
	}
	return ""
}

func (x *PointActivity) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PointActivity) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type PowerIconStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconUrl string `protobuf:"bytes,1,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	IconNightUrl string `protobuf:"bytes,2,opt,name=icon_night_url,json=iconNightUrl,proto3" json:"icon_night_url,omitempty"`
	IconWidth int64 `protobuf:"varint,3,opt,name=icon_width,json=iconWidth,proto3" json:"icon_width,omitempty"`
	IconHeight int64 `protobuf:"varint,4,opt,name=icon_height,json=iconHeight,proto3" json:"icon_height,omitempty"`
}

func (x *PowerIconStyle) Reset() {
	*x = PowerIconStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PowerIconStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PowerIconStyle) ProtoMessage() {}

func (x *PowerIconStyle) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PowerIconStyle.ProtoReflect.Descriptor instead.
func (*PowerIconStyle) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{57}
}

func (x *PowerIconStyle) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *PowerIconStyle) GetIconNightUrl() string {
	if x != nil {
		return x.IconNightUrl
	}
	return ""
}

func (x *PowerIconStyle) GetIconWidth() int64 {
	if x != nil {
		return x.IconWidth
	}
	return 0
}

func (x *PowerIconStyle) GetIconHeight() int64 {
	if x != nil {
		return x.IconHeight
	}
	return 0
}

type Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	IconNight string `protobuf:"bytes,2,opt,name=icon_night,json=iconNight,proto3" json:"icon_night,omitempty"`
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Rank) Reset() {
	*x = Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rank) ProtoMessage() {}

func (x *Rank) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rank.ProtoReflect.Descriptor instead.
func (*Rank) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{58}
}

func (x *Rank) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Rank) GetIconNight() string {
	if x != nil {
		return x.IconNight
	}
	return ""
}

func (x *Rank) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type RankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconUrlNight string `protobuf:"bytes,1,opt,name=icon_url_night,json=iconUrlNight,proto3" json:"icon_url_night,omitempty"`
	IconUrlDay string `protobuf:"bytes,2,opt,name=icon_url_day,json=iconUrlDay,proto3" json:"icon_url_day,omitempty"`
	BkgNightColor string `protobuf:"bytes,3,opt,name=bkg_night_color,json=bkgNightColor,proto3" json:"bkg_night_color,omitempty"`
	BkgDayColor string `protobuf:"bytes,4,opt,name=bkg_day_color,json=bkgDayColor,proto3" json:"bkg_day_color,omitempty"`
	FontNightColor string `protobuf:"bytes,5,opt,name=font_night_color,json=fontNightColor,proto3" json:"font_night_color,omitempty"`
	FontDayColor string `protobuf:"bytes,6,opt,name=font_day_color,json=fontDayColor,proto3" json:"font_day_color,omitempty"`
	RankContent string `protobuf:"bytes,7,opt,name=rank_content,json=rankContent,proto3" json:"rank_content,omitempty"`
	RankLink string `protobuf:"bytes,8,opt,name=rank_link,json=rankLink,proto3" json:"rank_link,omitempty"`
}

func (x *RankInfo) Reset() {
	*x = RankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankInfo) ProtoMessage() {}

func (x *RankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankInfo.ProtoReflect.Descriptor instead.
func (*RankInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{59}
}

func (x *RankInfo) GetIconUrlNight() string {
	if x != nil {
		return x.IconUrlNight
	}
	return ""
}

func (x *RankInfo) GetIconUrlDay() string {
	if x != nil {
		return x.IconUrlDay
	}
	return ""
}

func (x *RankInfo) GetBkgNightColor() string {
	if x != nil {
		return x.BkgNightColor
	}
	return ""
}

func (x *RankInfo) GetBkgDayColor() string {
	if x != nil {
		return x.BkgDayColor
	}
	return ""
}

func (x *RankInfo) GetFontNightColor() string {
	if x != nil {
		return x.FontNightColor
	}
	return ""
}

func (x *RankInfo) GetFontDayColor() string {
	if x != nil {
		return x.FontDayColor
	}
	return ""
}

func (x *RankInfo) GetRankContent() string {
	if x != nil {
		return x.RankContent
	}
	return ""
}

func (x *RankInfo) GetRankLink() string {
	if x != nil {
		return x.RankLink
	}
	return ""
}

type Rating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score string `protobuf:"bytes,1,opt,name=score,proto3" json:"score,omitempty"`
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Rating) Reset() {
	*x = Rating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rating) ProtoMessage() {}

func (x *Rating) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rating.ProtoReflect.Descriptor instead.
func (*Rating) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{60}
}

func (x *Rating) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

func (x *Rating) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 视频详情下方推荐卡子类型: 普通视频
type RelateAVCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Duration int64 `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	Dimension *Dimension `protobuf:"bytes,3,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Stat *Stat `protobuf:"bytes,4,opt,name=stat,proto3" json:"stat,omitempty"`
	JumpUrl string `protobuf:"bytes,5,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	ShowUpName bool `protobuf:"varint,6,opt,name=show_up_name,json=showUpName,proto3" json:"show_up_name,omitempty"`
	RcmdReason *BadgeInfo `protobuf:"bytes,7,opt,name=rcmd_reason,json=rcmdReason,proto3" json:"rcmd_reason,omitempty"`
}

func (x *RelateAVCard) Reset() {
	*x = RelateAVCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateAVCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateAVCard) ProtoMessage() {}

func (x *RelateAVCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateAVCard.ProtoReflect.Descriptor instead.
func (*RelateAVCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{61}
}

func (x *RelateAVCard) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RelateAVCard) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *RelateAVCard) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *RelateAVCard) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *RelateAVCard) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *RelateAVCard) GetShowUpName() bool {
	if x != nil {
		return x.ShowUpName
	}
	return false
}

func (x *RelateAVCard) GetRcmdReason() *BadgeInfo {
	if x != nil {
		return x.RcmdReason
	}
	return nil
}

// 视频详情下方推荐卡子类型: 番剧(小卡?)
type RelateBangumiAvCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Badge *BadgeInfo `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
	Stat *Stat `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
	Rating *Rating `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *RelateBangumiAvCard) Reset() {
	*x = RelateBangumiAvCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateBangumiAvCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateBangumiAvCard) ProtoMessage() {}

func (x *RelateBangumiAvCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateBangumiAvCard.ProtoReflect.Descriptor instead.
func (*RelateBangumiAvCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{62}
}

func (x *RelateBangumiAvCard) GetBadge() *BadgeInfo {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *RelateBangumiAvCard) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *RelateBangumiAvCard) GetRating() *Rating {
	if x != nil {
		return x.Rating
	}
	return nil
}

// 视频详情下方推荐卡子类型: 番剧(大卡?)
type RelateBangumiCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int32 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	SeasonType int32 `protobuf:"varint,2,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
	NewEp *NewEp `protobuf:"bytes,3,opt,name=new_ep,json=newEp,proto3" json:"new_ep,omitempty"`
	Stat *Stat `protobuf:"bytes,4,opt,name=stat,proto3" json:"stat,omitempty"`
	Rating *Rating `protobuf:"bytes,5,opt,name=rating,proto3" json:"rating,omitempty"`
	RcmdReason string `protobuf:"bytes,6,opt,name=rcmd_reason,json=rcmdReason,proto3" json:"rcmd_reason,omitempty"`
	BadgeInfo *BadgeInfo `protobuf:"bytes,7,opt,name=badge_info,json=badgeInfo,proto3" json:"badge_info,omitempty"`
	GotoType string `protobuf:"bytes,8,opt,name=goto_type,json=gotoType,proto3" json:"goto_type,omitempty"`
	Report map[string]string `protobuf:"bytes,9,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RelateBangumiCard) Reset() {
	*x = RelateBangumiCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateBangumiCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateBangumiCard) ProtoMessage() {}

func (x *RelateBangumiCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateBangumiCard.ProtoReflect.Descriptor instead.
func (*RelateBangumiCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{63}
}

func (x *RelateBangumiCard) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *RelateBangumiCard) GetSeasonType() int32 {
	if x != nil {
		return x.SeasonType
	}
	return 0
}

func (x *RelateBangumiCard) GetNewEp() *NewEp {
	if x != nil {
		return x.NewEp
	}
	return nil
}

func (x *RelateBangumiCard) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *RelateBangumiCard) GetRating() *Rating {
	if x != nil {
		return x.Rating
	}
	return nil
}

func (x *RelateBangumiCard) GetRcmdReason() string {
	if x != nil {
		return x.RcmdReason
	}
	return ""
}

func (x *RelateBangumiCard) GetBadgeInfo() *BadgeInfo {
	if x != nil {
		return x.BadgeInfo
	}
	return nil
}

func (x *RelateBangumiCard) GetGotoType() string {
	if x != nil {
		return x.GotoType
	}
	return ""
}

func (x *RelateBangumiCard) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

// 视频详情下方推荐卡子类型: 番剧集?
type RelateBangumiResourceCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Scover string `protobuf:"bytes,2,opt,name=scover,proto3" json:"scover,omitempty"`
	ReType int32 `protobuf:"varint,3,opt,name=re_type,json=reType,proto3" json:"re_type,omitempty"`
	ReValue string `protobuf:"bytes,4,opt,name=re_value,json=reValue,proto3" json:"re_value,omitempty"`
	Corner string `protobuf:"bytes,5,opt,name=corner,proto3" json:"corner,omitempty"`
	Card int32 `protobuf:"varint,6,opt,name=card,proto3" json:"card,omitempty"`
	Siz string `protobuf:"bytes,7,opt,name=siz,proto3" json:"siz,omitempty"`
	Position int32 `protobuf:"varint,8,opt,name=position,proto3" json:"position,omitempty"`
	RcmdReason string `protobuf:"bytes,9,opt,name=rcmd_reason,json=rcmdReason,proto3" json:"rcmd_reason,omitempty"`
	Label string `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	Report map[string]string `protobuf:"bytes,11,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	GotoType string `protobuf:"bytes,12,opt,name=goto_type,json=gotoType,proto3" json:"goto_type,omitempty"`
}

func (x *RelateBangumiResourceCard) Reset() {
	*x = RelateBangumiResourceCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateBangumiResourceCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateBangumiResourceCard) ProtoMessage() {}

func (x *RelateBangumiResourceCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateBangumiResourceCard.ProtoReflect.Descriptor instead.
func (*RelateBangumiResourceCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{64}
}

func (x *RelateBangumiResourceCard) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *RelateBangumiResourceCard) GetScover() string {
	if x != nil {
		return x.Scover
	}
	return ""
}

func (x *RelateBangumiResourceCard) GetReType() int32 {
	if x != nil {
		return x.ReType
	}
	return 0
}

func (x *RelateBangumiResourceCard) GetReValue() string {
	if x != nil {
		return x.ReValue
	}
	return ""
}

func (x *RelateBangumiResourceCard) GetCorner() string {
	if x != nil {
		return x.Corner
	}
	return ""
}

func (x *RelateBangumiResourceCard) GetCard() int32 {
	if x != nil {
		return x.Card
	}
	return 0
}

func (x *RelateBangumiResourceCard) GetSiz() string {
	if x != nil {
		return x.Siz
	}
	return ""
}

func (x *RelateBangumiResourceCard) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *RelateBangumiResourceCard) GetRcmdReason() string {
	if x != nil {
		return x.RcmdReason
	}
	return ""
}

func (x *RelateBangumiResourceCard) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RelateBangumiResourceCard) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *RelateBangumiResourceCard) GetGotoType() string {
	if x != nil {
		return x.GotoType
	}
	return ""
}

// 视频详情下方推荐卡子类型: UGC 番剧?
type RelateBangumiUgcCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Badge *BadgeInfo `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
	Stat *Stat `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
	Rating *Rating `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *RelateBangumiUgcCard) Reset() {
	*x = RelateBangumiUgcCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateBangumiUgcCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateBangumiUgcCard) ProtoMessage() {}

func (x *RelateBangumiUgcCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateBangumiUgcCard.ProtoReflect.Descriptor instead.
func (*RelateBangumiUgcCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{65}
}

func (x *RelateBangumiUgcCard) GetBadge() *BadgeInfo {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *RelateBangumiUgcCard) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *RelateBangumiUgcCard) GetRating() *Rating {
	if x != nil {
		return x.Rating
	}
	return nil
}

// 视频详情下方推荐卡
type RelateCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelateCardType RelateCardType `protobuf:"varint,1,opt,name=relate_card_type,json=relateCardType,proto3,enum=bilibili.app.viewunite.common.RelateCardType" json:"relate_card_type,omitempty"`
	// Types that are assignable to Card:
	//
	//	*RelateCard_Av
	//	*RelateCard_Bangumi
	//	*RelateCard_Resource
	//	*RelateCard_Game
	//	*RelateCard_Cm
	//	*RelateCard_Live
	//	*RelateCard_BangumiAv
	//	*RelateCard_AiCard
	//	*RelateCard_BangumiUgc
	//	*RelateCard_Special
	Card isRelateCard_Card `protobuf_oneof:"card"`
	ThreePoint *RelateThreePoint `protobuf:"bytes,10,opt,name=three_point,json=threePoint,proto3" json:"three_point,omitempty"`
	CmStock *anypb.Any `protobuf:"bytes,11,opt,name=cm_stock,json=cmStock,proto3" json:"cm_stock,omitempty"`
	BasicInfo *CardBasicInfo `protobuf:"bytes,12,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
}

func (x *RelateCard) Reset() {
	*x = RelateCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateCard) ProtoMessage() {}

func (x *RelateCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateCard.ProtoReflect.Descriptor instead.
func (*RelateCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{66}
}

func (x *RelateCard) GetRelateCardType() RelateCardType {
	if x != nil {
		return x.RelateCardType
	}
	return RelateCardType_CARD_TYPE_UNKNOWN
}

func (m *RelateCard) GetCard() isRelateCard_Card {
	if m != nil {
		return m.Card
	}
	return nil
}

func (x *RelateCard) GetAv() *RelateAVCard {
	if x, ok := x.GetCard().(*RelateCard_Av); ok {
		return x.Av
	}
	return nil
}

func (x *RelateCard) GetBangumi() *RelateBangumiCard {
	if x, ok := x.GetCard().(*RelateCard_Bangumi); ok {
		return x.Bangumi
	}
	return nil
}

func (x *RelateCard) GetResource() *RelateBangumiResourceCard {
	if x, ok := x.GetCard().(*RelateCard_Resource); ok {
		return x.Resource
	}
	return nil
}

func (x *RelateCard) GetGame() *RelateGameCard {
	if x, ok := x.GetCard().(*RelateCard_Game); ok {
		return x.Game
	}
	return nil
}

func (x *RelateCard) GetCm() *RelateCMCard {
	if x, ok := x.GetCard().(*RelateCard_Cm); ok {
		return x.Cm
	}
	return nil
}

func (x *RelateCard) GetLive() *RelateLiveCard {
	if x, ok := x.GetCard().(*RelateCard_Live); ok {
		return x.Live
	}
	return nil
}

func (x *RelateCard) GetBangumiAv() *RelateBangumiAvCard {
	if x, ok := x.GetCard().(*RelateCard_BangumiAv); ok {
		return x.BangumiAv
	}
	return nil
}

func (x *RelateCard) GetAiCard() *RelatedAICard {
	if x, ok := x.GetCard().(*RelateCard_AiCard); ok {
		return x.AiCard
	}
	return nil
}

func (x *RelateCard) GetBangumiUgc() *RelateBangumiUgcCard {
	if x, ok := x.GetCard().(*RelateCard_BangumiUgc); ok {
		return x.BangumiUgc
	}
	return nil
}

func (x *RelateCard) GetSpecial() *RelateSpecial {
	if x, ok := x.GetCard().(*RelateCard_Special); ok {
		return x.Special
	}
	return nil
}

func (x *RelateCard) GetThreePoint() *RelateThreePoint {
	if x != nil {
		return x.ThreePoint
	}
	return nil
}

func (x *RelateCard) GetCmStock() *anypb.Any {
	if x != nil {
		return x.CmStock
	}
	return nil
}

func (x *RelateCard) GetBasicInfo() *CardBasicInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

type isRelateCard_Card interface {
	isRelateCard_Card()
}

type RelateCard_Av struct {
	Av *RelateAVCard `protobuf:"bytes,2,opt,name=av,proto3,oneof"`
}

type RelateCard_Bangumi struct {
	Bangumi *RelateBangumiCard `protobuf:"bytes,3,opt,name=bangumi,proto3,oneof"`
}

type RelateCard_Resource struct {
	Resource *RelateBangumiResourceCard `protobuf:"bytes,4,opt,name=resource,proto3,oneof"`
}

type RelateCard_Game struct {
	Game *RelateGameCard `protobuf:"bytes,5,opt,name=game,proto3,oneof"`
}

type RelateCard_Cm struct {
	Cm *RelateCMCard `protobuf:"bytes,6,opt,name=cm,proto3,oneof"`
}

type RelateCard_Live struct {
	Live *RelateLiveCard `protobuf:"bytes,7,opt,name=live,proto3,oneof"`
}

type RelateCard_BangumiAv struct {
	BangumiAv *RelateBangumiAvCard `protobuf:"bytes,8,opt,name=bangumi_av,json=bangumiAv,proto3,oneof"`
}

type RelateCard_AiCard struct {
	AiCard *RelatedAICard `protobuf:"bytes,9,opt,name=ai_card,json=aiCard,proto3,oneof"`
}

type RelateCard_BangumiUgc struct {
	BangumiUgc *RelateBangumiUgcCard `protobuf:"bytes,13,opt,name=bangumi_ugc,json=bangumiUgc,proto3,oneof"`
}

type RelateCard_Special struct {
	Special *RelateSpecial `protobuf:"bytes,14,opt,name=special,proto3,oneof"`
}

func (*RelateCard_Av) isRelateCard_Card() {}

func (*RelateCard_Bangumi) isRelateCard_Card() {}

func (*RelateCard_Resource) isRelateCard_Card() {}

func (*RelateCard_Game) isRelateCard_Card() {}

func (*RelateCard_Cm) isRelateCard_Card() {}

func (*RelateCard_Live) isRelateCard_Card() {}

func (*RelateCard_BangumiAv) isRelateCard_Card() {}

func (*RelateCard_AiCard) isRelateCard_Card() {}

func (*RelateCard_BangumiUgc) isRelateCard_Card() {}

func (*RelateCard_Special) isRelateCard_Card() {}

// 视频详情下方推荐卡子类型: 广告推广
type RelateCMCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	SourceContent *anypb.Any `protobuf:"bytes,2,opt,name=source_content,json=sourceContent,proto3" json:"source_content,omitempty"`
	Duration int64 `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Stat *Stat `protobuf:"bytes,4,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *RelateCMCard) Reset() {
	*x = RelateCMCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateCMCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateCMCard) ProtoMessage() {}

func (x *RelateCMCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateCMCard.ProtoReflect.Descriptor instead.
func (*RelateCMCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{67}
}

func (x *RelateCMCard) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *RelateCMCard) GetSourceContent() *anypb.Any {
	if x != nil {
		return x.SourceContent
	}
	return nil
}

func (x *RelateCMCard) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RelateCMCard) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

// 视频详情下方推荐配置
type RelateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidShowM int64 `protobuf:"varint,1,opt,name=valid_show_m,json=validShowM,proto3" json:"valid_show_m,omitempty"`
	ValidShowN int64 `protobuf:"varint,2,opt,name=valid_show_n,json=validShowN,proto3" json:"valid_show_n,omitempty"`
	Pagination *pagination.Pagination `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	CanLoadMore bool `protobuf:"varint,4,opt,name=can_load_more,json=canLoadMore,proto3" json:"can_load_more,omitempty"`
}

func (x *RelateConfig) Reset() {
	*x = RelateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateConfig) ProtoMessage() {}

func (x *RelateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateConfig.ProtoReflect.Descriptor instead.
func (*RelateConfig) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{68}
}

func (x *RelateConfig) GetValidShowM() int64 {
	if x != nil {
		return x.ValidShowM
	}
	return 0
}

func (x *RelateConfig) GetValidShowN() int64 {
	if x != nil {
		return x.ValidShowN
	}
	return 0
}

func (x *RelateConfig) GetPagination() *pagination.Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *RelateConfig) GetCanLoadMore() bool {
	if x != nil {
		return x.CanLoadMore
	}
	return false
}

// 视频详情下方推荐卡子类型: AI 推荐?
type RelatedAICard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	Duration int64 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	UpInfo *Staff `protobuf:"bytes,3,opt,name=up_info,json=upInfo,proto3" json:"up_info,omitempty"`
	Stat *Stat `protobuf:"bytes,4,opt,name=stat,proto3" json:"stat,omitempty"`
	Report map[string]string `protobuf:"bytes,5,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	GotoType string `protobuf:"bytes,6,opt,name=goto_type,json=gotoType,proto3" json:"goto_type,omitempty"`
}

func (x *RelatedAICard) Reset() {
	*x = RelatedAICard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelatedAICard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedAICard) ProtoMessage() {}

func (x *RelatedAICard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedAICard.ProtoReflect.Descriptor instead.
func (*RelatedAICard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{69}
}

func (x *RelatedAICard) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *RelatedAICard) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RelatedAICard) GetUpInfo() *Staff {
	if x != nil {
		return x.UpInfo
	}
	return nil
}

func (x *RelatedAICard) GetStat() *Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *RelatedAICard) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *RelatedAICard) GetGotoType() string {
	if x != nil {
		return x.GotoType
	}
	return ""
}

// 视频详情下方推荐卡子类型: 点击不喜欢后占位卡片
type RelateDislike struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle string `protobuf:"bytes,2,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty"`
	ClosedSubTitle string `protobuf:"bytes,3,opt,name=closed_sub_title,json=closedSubTitle,proto3" json:"closed_sub_title,omitempty"`
	PasteText string `protobuf:"bytes,4,opt,name=paste_text,json=pasteText,proto3" json:"paste_text,omitempty"`
	ClosedPasteText string `protobuf:"bytes,5,opt,name=closed_paste_text,json=closedPasteText,proto3" json:"closed_paste_text,omitempty"`
	DislikeReason []*DislikeReasons `protobuf:"bytes,6,rep,name=dislike_reason,json=dislikeReason,proto3" json:"dislike_reason,omitempty"`
	Toast string `protobuf:"bytes,7,opt,name=toast,proto3" json:"toast,omitempty"`
	ClosedToast string `protobuf:"bytes,8,opt,name=closed_toast,json=closedToast,proto3" json:"closed_toast,omitempty"`
}

func (x *RelateDislike) Reset() {
	*x = RelateDislike{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateDislike) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateDislike) ProtoMessage() {}

func (x *RelateDislike) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateDislike.ProtoReflect.Descriptor instead.
func (*RelateDislike) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{70}
}

func (x *RelateDislike) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RelateDislike) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *RelateDislike) GetClosedSubTitle() string {
	if x != nil {
		return x.ClosedSubTitle
	}
	return ""
}

func (x *RelateDislike) GetPasteText() string {
	if x != nil {
		return x.PasteText
	}
	return ""
}

func (x *RelateDislike) GetClosedPasteText() string {
	if x != nil {
		return x.ClosedPasteText
	}
	return ""
}

func (x *RelateDislike) GetDislikeReason() []*DislikeReasons {
	if x != nil {
		return x.DislikeReason
	}
	return nil
}

func (x *RelateDislike) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

func (x *RelateDislike) GetClosedToast() string {
	if x != nil {
		return x.ClosedToast
	}
	return ""
}

// 视频详情下方推荐卡子类型: 游戏推广
type RelateGameCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReserveStatus int64 `protobuf:"varint,1,opt,name=reserve_status,json=reserveStatus,proto3" json:"reserve_status,omitempty"`
	ReserveStatusText string `protobuf:"bytes,2,opt,name=reserve_status_text,json=reserveStatusText,proto3" json:"reserve_status_text,omitempty"`
	Reserve string `protobuf:"bytes,3,opt,name=reserve,proto3" json:"reserve,omitempty"`
	Rating float32 `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	TagName string `protobuf:"bytes,5,opt,name=tag_name,json=tagName,proto3" json:"tag_name,omitempty"`
	RankInfo *RankInfo `protobuf:"bytes,6,opt,name=rank_info,json=rankInfo,proto3" json:"rank_info,omitempty"`
	PackInfo *Button `protobuf:"bytes,7,opt,name=pack_info,json=packInfo,proto3" json:"pack_info,omitempty"`
	Notice *Button `protobuf:"bytes,8,opt,name=notice,proto3" json:"notice,omitempty"`
	PowerIconStyle *PowerIconStyle `protobuf:"bytes,9,opt,name=power_icon_style,json=powerIconStyle,proto3" json:"power_icon_style,omitempty"`
	GameRcmdReason string `protobuf:"bytes,10,opt,name=game_rcmd_reason,json=gameRcmdReason,proto3" json:"game_rcmd_reason,omitempty"`
	WikiInfo *WikiInfo `protobuf:"bytes,11,opt,name=wiki_info,json=wikiInfo,proto3" json:"wiki_info,omitempty"`
	Badge *BadgeInfo `protobuf:"bytes,12,opt,name=badge,proto3" json:"badge,omitempty"`
}

func (x *RelateGameCard) Reset() {
	*x = RelateGameCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateGameCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateGameCard) ProtoMessage() {}

func (x *RelateGameCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateGameCard.ProtoReflect.Descriptor instead.
func (*RelateGameCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{71}
}

func (x *RelateGameCard) GetReserveStatus() int64 {
	if x != nil {
		return x.ReserveStatus
	}
	return 0
}

func (x *RelateGameCard) GetReserveStatusText() string {
	if x != nil {
		return x.ReserveStatusText
	}
	return ""
}

func (x *RelateGameCard) GetReserve() string {
	if x != nil {
		return x.Reserve
	}
	return ""
}

func (x *RelateGameCard) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *RelateGameCard) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *RelateGameCard) GetRankInfo() *RankInfo {
	if x != nil {
		return x.RankInfo
	}
	return nil
}

func (x *RelateGameCard) GetPackInfo() *Button {
	if x != nil {
		return x.PackInfo
	}
	return nil
}

func (x *RelateGameCard) GetNotice() *Button {
	if x != nil {
		return x.Notice
	}
	return nil
}

func (x *RelateGameCard) GetPowerIconStyle() *PowerIconStyle {
	if x != nil {
		return x.PowerIconStyle
	}
	return nil
}

func (x *RelateGameCard) GetGameRcmdReason() string {
	if x != nil {
		return x.GameRcmdReason
	}
	return ""
}

func (x *RelateGameCard) GetWikiInfo() *WikiInfo {
	if x != nil {
		return x.WikiInfo
	}
	return nil
}

func (x *RelateGameCard) GetBadge() *BadgeInfo {
	if x != nil {
		return x.Badge
	}
	return nil
}

type RelateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Cover string `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	UseDefaultBrowser bool `protobuf:"varint,3,opt,name=use_default_browser,json=useDefaultBrowser,proto3" json:"use_default_browser,omitempty"`
}

func (x *RelateItem) Reset() {
	*x = RelateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateItem) ProtoMessage() {}

func (x *RelateItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateItem.ProtoReflect.Descriptor instead.
func (*RelateItem) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{72}
}

func (x *RelateItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RelateItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *RelateItem) GetUseDefaultBrowser() bool {
	if x != nil {
		return x.UseDefaultBrowser
	}
	return false
}

// 视频详情下方推荐卡子类型: 直播
type RelateLiveCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IconType int64 `protobuf:"varint,1,opt,name=icon_type,json=iconType,proto3" json:"icon_type,omitempty"`
	AreaName string `protobuf:"bytes,2,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty"`
	WatchedShow int64 `protobuf:"varint,3,opt,name=watched_show,json=watchedShow,proto3" json:"watched_show,omitempty"`
	LiveStatus int64 `protobuf:"varint,4,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`
}

func (x *RelateLiveCard) Reset() {
	*x = RelateLiveCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateLiveCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateLiveCard) ProtoMessage() {}

func (x *RelateLiveCard) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateLiveCard.ProtoReflect.Descriptor instead.
func (*RelateLiveCard) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{73}
}

func (x *RelateLiveCard) GetIconType() int64 {
	if x != nil {
		return x.IconType
	}
	return 0
}

func (x *RelateLiveCard) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *RelateLiveCard) GetWatchedShow() int64 {
	if x != nil {
		return x.WatchedShow
	}
	return 0
}

func (x *RelateLiveCard) GetLiveStatus() int64 {
	if x != nil {
		return x.LiveStatus
	}
	return 0
}

// 视频下方推荐区
type Relates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*RelateCard `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	Config *RelateConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Relates) Reset() {
	*x = Relates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Relates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relates) ProtoMessage() {}

func (x *Relates) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relates.ProtoReflect.Descriptor instead.
func (*Relates) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{74}
}

func (x *Relates) GetCards() []*RelateCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *Relates) GetConfig() *RelateConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// 视频详情下方推荐卡子类型: 其他特殊
type RelateSpecial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Badge *BadgeInfo `protobuf:"bytes,1,opt,name=badge,proto3" json:"badge,omitempty"`
	RcmdReason *BadgeInfo `protobuf:"bytes,2,opt,name=rcmd_reason,json=rcmdReason,proto3" json:"rcmd_reason,omitempty"`
}

func (x *RelateSpecial) Reset() {
	*x = RelateSpecial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateSpecial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateSpecial) ProtoMessage() {}

func (x *RelateSpecial) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateSpecial.ProtoReflect.Descriptor instead.
func (*RelateSpecial) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{75}
}

func (x *RelateSpecial) GetBadge() *BadgeInfo {
	if x != nil {
		return x.Badge
	}
	return nil
}

func (x *RelateSpecial) GetRcmdReason() *BadgeInfo {
	if x != nil {
		return x.RcmdReason
	}
	return nil
}

// 视频详情下方推荐卡右上角三点的内容
type RelateThreePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dislike *RelateDislike `protobuf:"bytes,1,opt,name=dislike,proto3" json:"dislike,omitempty"`
	Feedback *RelateDislike `protobuf:"bytes,2,opt,name=feedback,proto3" json:"feedback,omitempty"`
	WatchLater bool `protobuf:"varint,3,opt,name=watch_later,json=watchLater,proto3" json:"watch_later,omitempty"`
	DislikeReportData string `protobuf:"bytes,4,opt,name=dislike_report_data,json=dislikeReportData,proto3" json:"dislike_report_data,omitempty"`
}

func (x *RelateThreePoint) Reset() {
	*x = RelateThreePoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelateThreePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelateThreePoint) ProtoMessage() {}

func (x *RelateThreePoint) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelateThreePoint.ProtoReflect.Descriptor instead.
func (*RelateThreePoint) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{76}
}

func (x *RelateThreePoint) GetDislike() *RelateDislike {
	if x != nil {
		return x.Dislike
	}
	return nil
}

func (x *RelateThreePoint) GetFeedback() *RelateDislike {
	if x != nil {
		return x.Feedback
	}
	return nil
}

func (x *RelateThreePoint) GetWatchLater() bool {
	if x != nil {
		return x.WatchLater
	}
	return false
}

func (x *RelateThreePoint) GetDislikeReportData() string {
	if x != nil {
		return x.DislikeReportData
	}
	return ""
}

type ReserveButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Text string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	SelectedText string `protobuf:"bytes,4,opt,name=selected_text,json=selectedText,proto3" json:"selected_text,omitempty"`
	OrderType ReserveBizType `protobuf:"varint,7,opt,name=order_type,json=orderType,proto3,enum=bilibili.app.viewunite.common.ReserveBizType" json:"order_type,omitempty"`
	// Types that are assignable to OrderParam:
	//
	//	*ReserveButton_Reserve
	//	*ReserveButton_Fav
	OrderParam isReserveButton_OrderParam `protobuf_oneof:"order_param"`
}

func (x *ReserveButton) Reset() {
	*x = ReserveButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveButton) ProtoMessage() {}

func (x *ReserveButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveButton.ProtoReflect.Descriptor instead.
func (*ReserveButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{77}
}

func (x *ReserveButton) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ReserveButton) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ReserveButton) GetSelectedText() string {
	if x != nil {
		return x.SelectedText
	}
	return ""
}

func (x *ReserveButton) GetOrderType() ReserveBizType {
	if x != nil {
		return x.OrderType
	}
	return ReserveBizType_BizTypeNone
}

func (m *ReserveButton) GetOrderParam() isReserveButton_OrderParam {
	if m != nil {
		return m.OrderParam
	}
	return nil
}

func (x *ReserveButton) GetReserve() *BizReserveActivityParam {
	if x, ok := x.GetOrderParam().(*ReserveButton_Reserve); ok {
		return x.Reserve
	}
	return nil
}

func (x *ReserveButton) GetFav() *BizFavParam {
	if x, ok := x.GetOrderParam().(*ReserveButton_Fav); ok {
		return x.Fav
	}
	return nil
}

type isReserveButton_OrderParam interface {
	isReserveButton_OrderParam()
}

type ReserveButton_Reserve struct {
	Reserve *BizReserveActivityParam `protobuf:"bytes,8,opt,name=reserve,proto3,oneof"`
}

type ReserveButton_Fav struct {
	Fav *BizFavParam `protobuf:"bytes,9,opt,name=fav,proto3,oneof"`
}

func (*ReserveButton_Reserve) isReserveButton_OrderParam() {}

func (*ReserveButton_Fav) isReserveButton_OrderParam() {}

type Rights struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowDownload int32 `protobuf:"varint,1,opt,name=allow_download,json=allowDownload,proto3" json:"allow_download,omitempty"`
	AllowReview int32 `protobuf:"varint,2,opt,name=allow_review,json=allowReview,proto3" json:"allow_review,omitempty"`
	CanWatch int32 `protobuf:"varint,3,opt,name=can_watch,json=canWatch,proto3" json:"can_watch,omitempty"`
	Resource string `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	AllowDm int32 `protobuf:"varint,5,opt,name=allow_dm,json=allowDm,proto3" json:"allow_dm,omitempty"`
	AllowDemand int32 `protobuf:"varint,6,opt,name=allow_demand,json=allowDemand,proto3" json:"allow_demand,omitempty"`
	// 区域限制
	AreaLimit int32 `protobuf:"varint,7,opt,name=area_limit,json=areaLimit,proto3" json:"area_limit,omitempty"`
}

func (x *Rights) Reset() {
	*x = Rights{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rights) ProtoMessage() {}

func (x *Rights) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rights.ProtoReflect.Descriptor instead.
func (*Rights) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{78}
}

func (x *Rights) GetAllowDownload() int32 {
	if x != nil {
		return x.AllowDownload
	}
	return 0
}

func (x *Rights) GetAllowReview() int32 {
	if x != nil {
		return x.AllowReview
	}
	return 0
}

func (x *Rights) GetCanWatch() int32 {
	if x != nil {
		return x.CanWatch
	}
	return 0
}

func (x *Rights) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Rights) GetAllowDm() int32 {
	if x != nil {
		return x.AllowDm
	}
	return 0
}

func (x *Rights) GetAllowDemand() int32 {
	if x != nil {
		return x.AllowDemand
	}
	return 0
}

func (x *Rights) GetAreaLimit() int32 {
	if x != nil {
		return x.AreaLimit
	}
	return 0
}

type SeasonHead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Intro string `protobuf:"bytes,2,opt,name=intro,proto3" json:"intro,omitempty"`
	Vt *StatInfo `protobuf:"bytes,3,opt,name=vt,proto3" json:"vt,omitempty"`
	Danmaku *StatInfo `protobuf:"bytes,4,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
}

func (x *SeasonHead) Reset() {
	*x = SeasonHead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonHead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonHead) ProtoMessage() {}

func (x *SeasonHead) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonHead.ProtoReflect.Descriptor instead.
func (*SeasonHead) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{79}
}

func (x *SeasonHead) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SeasonHead) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *SeasonHead) GetVt() *StatInfo {
	if x != nil {
		return x.Vt
	}
	return nil
}

func (x *SeasonHead) GetDanmaku() *StatInfo {
	if x != nil {
		return x.Danmaku
	}
	return nil
}

type SeasonShow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ButtonText string `protobuf:"bytes,1,opt,name=button_text,json=buttonText,proto3" json:"button_text,omitempty"`
	JoinText string `protobuf:"bytes,2,opt,name=join_text,json=joinText,proto3" json:"join_text,omitempty"`
	RuleText string `protobuf:"bytes,3,opt,name=rule_text,json=ruleText,proto3" json:"rule_text,omitempty"`
	CheckinText string `protobuf:"bytes,4,opt,name=checkin_text,json=checkinText,proto3" json:"checkin_text,omitempty"`
	CheckinPrompt string `protobuf:"bytes,5,opt,name=checkin_prompt,json=checkinPrompt,proto3" json:"checkin_prompt,omitempty"`
}

func (x *SeasonShow) Reset() {
	*x = SeasonShow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SeasonShow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeasonShow) ProtoMessage() {}

func (x *SeasonShow) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeasonShow.ProtoReflect.Descriptor instead.
func (*SeasonShow) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{80}
}

func (x *SeasonShow) GetButtonText() string {
	if x != nil {
		return x.ButtonText
	}
	return ""
}

func (x *SeasonShow) GetJoinText() string {
	if x != nil {
		return x.JoinText
	}
	return ""
}

func (x *SeasonShow) GetRuleText() string {
	if x != nil {
		return x.RuleText
	}
	return ""
}

func (x *SeasonShow) GetCheckinText() string {
	if x != nil {
		return x.CheckinText
	}
	return ""
}

func (x *SeasonShow) GetCheckinPrompt() string {
	if x != nil {
		return x.CheckinPrompt
	}
	return ""
}

type SectionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SectionId int32 `protobuf:"varint,2,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	CanOrdDesc int32 `protobuf:"varint,4,opt,name=can_ord_desc,json=canOrdDesc,proto3" json:"can_ord_desc,omitempty"`
	More string `protobuf:"bytes,5,opt,name=more,proto3" json:"more,omitempty"`
	EpisodeIds []int32 `protobuf:"varint,6,rep,packed,name=episode_ids,json=episodeIds,proto3" json:"episode_ids,omitempty"`
	Episodes []*ViewEpisode `protobuf:"bytes,7,rep,name=episodes,proto3" json:"episodes,omitempty"`
	SplitText string `protobuf:"bytes,8,opt,name=split_text,json=splitText,proto3" json:"split_text,omitempty"`
	ModuleStyle *Style `protobuf:"bytes,9,opt,name=module_style,json=moduleStyle,proto3" json:"module_style,omitempty"`
	MoreBottomDesc string `protobuf:"bytes,10,opt,name=more_bottom_desc,json=moreBottomDesc,proto3" json:"more_bottom_desc,omitempty"`
	Seasons []*SerialSeason `protobuf:"bytes,11,rep,name=seasons,proto3" json:"seasons,omitempty"`
	MoreLeft *Button `protobuf:"bytes,12,opt,name=more_left,json=moreLeft,proto3" json:"more_left,omitempty"`
	Type int32 `protobuf:"varint,13,opt,name=type,proto3" json:"type,omitempty"`
	Report map[string]string `protobuf:"bytes,14,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SectionData) Reset() {
	*x = SectionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionData) ProtoMessage() {}

func (x *SectionData) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionData.ProtoReflect.Descriptor instead.
func (*SectionData) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{81}
}

func (x *SectionData) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SectionData) GetSectionId() int32 {
	if x != nil {
		return x.SectionId
	}
	return 0
}

func (x *SectionData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SectionData) GetCanOrdDesc() int32 {
	if x != nil {
		return x.CanOrdDesc
	}
	return 0
}

func (x *SectionData) GetMore() string {
	if x != nil {
		return x.More
	}
	return ""
}

func (x *SectionData) GetEpisodeIds() []int32 {
	if x != nil {
		return x.EpisodeIds
	}
	return nil
}

func (x *SectionData) GetEpisodes() []*ViewEpisode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

func (x *SectionData) GetSplitText() string {
	if x != nil {
		return x.SplitText
	}
	return ""
}

func (x *SectionData) GetModuleStyle() *Style {
	if x != nil {
		return x.ModuleStyle
	}
	return nil
}

func (x *SectionData) GetMoreBottomDesc() string {
	if x != nil {
		return x.MoreBottomDesc
	}
	return ""
}

func (x *SectionData) GetSeasons() []*SerialSeason {
	if x != nil {
		return x.Seasons
	}
	return nil
}

func (x *SectionData) GetMoreLeft() *Button {
	if x != nil {
		return x.MoreLeft
	}
	return nil
}

func (x *SectionData) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SectionData) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type SerialSeason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeasonId int32 `protobuf:"varint,1,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	SeasonTitle string `protobuf:"bytes,3,opt,name=season_title,json=seasonTitle,proto3" json:"season_title,omitempty"`
	IsNew int32 `protobuf:"varint,4,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Badge string `protobuf:"bytes,6,opt,name=badge,proto3" json:"badge,omitempty"`
	BadgeType int32 `protobuf:"varint,7,opt,name=badge_type,json=badgeType,proto3" json:"badge_type,omitempty"`
	BadgeInfo *BadgeInfo `protobuf:"bytes,8,opt,name=badge_info,json=badgeInfo,proto3" json:"badge_info,omitempty"`
	Link string `protobuf:"bytes,9,opt,name=link,proto3" json:"link,omitempty"`
	Resource string `protobuf:"bytes,10,opt,name=resource,proto3" json:"resource,omitempty"`
	NewEp *NewEp `protobuf:"bytes,11,opt,name=new_ep,json=newEp,proto3" json:"new_ep,omitempty"`
}

func (x *SerialSeason) Reset() {
	*x = SerialSeason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerialSeason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerialSeason) ProtoMessage() {}

func (x *SerialSeason) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerialSeason.ProtoReflect.Descriptor instead.
func (*SerialSeason) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{82}
}

func (x *SerialSeason) GetSeasonId() int32 {
	if x != nil {
		return x.SeasonId
	}
	return 0
}

func (x *SerialSeason) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SerialSeason) GetSeasonTitle() string {
	if x != nil {
		return x.SeasonTitle
	}
	return ""
}

func (x *SerialSeason) GetIsNew() int32 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *SerialSeason) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SerialSeason) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *SerialSeason) GetBadgeType() int32 {
	if x != nil {
		return x.BadgeType
	}
	return 0
}

func (x *SerialSeason) GetBadgeInfo() *BadgeInfo {
	if x != nil {
		return x.BadgeInfo
	}
	return nil
}

func (x *SerialSeason) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *SerialSeason) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *SerialSeason) GetNewEp() *NewEp {
	if x != nil {
		return x.NewEp
	}
	return nil
}

type SkipRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End int32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *SkipRange) Reset() {
	*x = SkipRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkipRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkipRange) ProtoMessage() {}

func (x *SkipRange) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkipRange.ProtoReflect.Descriptor instead.
func (*SkipRange) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{83}
}

func (x *SkipRange) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SkipRange) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type Sponsor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Week int64 `protobuf:"varint,2,opt,name=week,proto3" json:"week,omitempty"`
	RankList []*SponsorRank `protobuf:"bytes,3,rep,name=rank_list,json=rankList,proto3" json:"rank_list,omitempty"`
	Mine *Mine `protobuf:"bytes,4,opt,name=mine,proto3" json:"mine,omitempty"`
	PointActivity *PointActivity `protobuf:"bytes,5,opt,name=point_activity,json=pointActivity,proto3" json:"point_activity,omitempty"`
	Pendants []*Pendant `protobuf:"bytes,6,rep,name=pendants,proto3" json:"pendants,omitempty"`
	Threshold []*Threshold `protobuf:"bytes,7,rep,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *Sponsor) Reset() {
	*x = Sponsor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sponsor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sponsor) ProtoMessage() {}

func (x *Sponsor) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sponsor.ProtoReflect.Descriptor instead.
func (*Sponsor) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{84}
}

func (x *Sponsor) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Sponsor) GetWeek() int64 {
	if x != nil {
		return x.Week
	}
	return 0
}

func (x *Sponsor) GetRankList() []*SponsorRank {
	if x != nil {
		return x.RankList
	}
	return nil
}

func (x *Sponsor) GetMine() *Mine {
	if x != nil {
		return x.Mine
	}
	return nil
}

func (x *Sponsor) GetPointActivity() *PointActivity {
	if x != nil {
		return x.PointActivity
	}
	return nil
}

func (x *Sponsor) GetPendants() []*Pendant {
	if x != nil {
		return x.Pendants
	}
	return nil
}

func (x *Sponsor) GetThreshold() []*Threshold {
	if x != nil {
		return x.Threshold
	}
	return nil
}

type SponsorRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Uname string `protobuf:"bytes,3,opt,name=uname,proto3" json:"uname,omitempty"`
	Face string `protobuf:"bytes,4,opt,name=face,proto3" json:"face,omitempty"`
	Vip *Vip `protobuf:"bytes,5,opt,name=vip,proto3" json:"vip,omitempty"`
}

func (x *SponsorRank) Reset() {
	*x = SponsorRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SponsorRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SponsorRank) ProtoMessage() {}

func (x *SponsorRank) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SponsorRank.ProtoReflect.Descriptor instead.
func (*SponsorRank) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{85}
}

func (x *SponsorRank) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *SponsorRank) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SponsorRank) GetUname() string {
	if x != nil {
		return x.Uname
	}
	return ""
}

func (x *SponsorRank) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *SponsorRank) GetVip() *Vip {
	if x != nil {
		return x.Vip
	}
	return nil
}

type Staff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Attention int32 `protobuf:"varint,2,opt,name=attention,proto3" json:"attention,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Face string `protobuf:"bytes,5,opt,name=face,proto3" json:"face,omitempty"`
	Official *OfficialVerify `protobuf:"bytes,6,opt,name=official,proto3" json:"official,omitempty"`
	Vip *Vip `protobuf:"bytes,7,opt,name=vip,proto3" json:"vip,omitempty"`
	LabelStyle int32 `protobuf:"varint,8,opt,name=label_style,json=labelStyle,proto3" json:"label_style,omitempty"`
	Fans string `protobuf:"bytes,9,opt,name=fans,proto3" json:"fans,omitempty"`
}

func (x *Staff) Reset() {
	*x = Staff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staff) ProtoMessage() {}

func (x *Staff) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staff.ProtoReflect.Descriptor instead.
func (*Staff) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{86}
}

func (x *Staff) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *Staff) GetAttention() int32 {
	if x != nil {
		return x.Attention
	}
	return 0
}

func (x *Staff) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Staff) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Staff) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *Staff) GetOfficial() *OfficialVerify {
	if x != nil {
		return x.Official
	}
	return nil
}

func (x *Staff) GetVip() *Vip {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *Staff) GetLabelStyle() int32 {
	if x != nil {
		return x.LabelStyle
	}
	return 0
}

func (x *Staff) GetFans() string {
	if x != nil {
		return x.Fans
	}
	return ""
}

type Staffs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Staff []*Staff `protobuf:"bytes,1,rep,name=staff,proto3" json:"staff,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Staffs) Reset() {
	*x = Staffs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Staffs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Staffs) ProtoMessage() {}

func (x *Staffs) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Staffs.ProtoReflect.Descriptor instead.
func (*Staffs) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{87}
}

func (x *Staffs) GetStaff() []*Staff {
	if x != nil {
		return x.Staff
	}
	return nil
}

func (x *Staffs) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频观看时长
	Vt *StatInfo `protobuf:"bytes,1,opt,name=vt,proto3" json:"vt,omitempty"`
	// 弹幕
	Danmaku *StatInfo `protobuf:"bytes,2,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
	// 回复数
	Reply int64 `protobuf:"varint,3,opt,name=reply,proto3" json:"reply,omitempty"`
	// 收藏数
	Fav int64 `protobuf:"varint,4,opt,name=fav,proto3" json:"fav,omitempty"`
	// 硬币数
	Coin int64 `protobuf:"varint,5,opt,name=coin,proto3" json:"coin,omitempty"`
	// 分享数
	Share int64 `protobuf:"varint,6,opt,name=share,proto3" json:"share,omitempty"`
	// 点赞数
	Like int64 `protobuf:"varint,7,opt,name=like,proto3" json:"like,omitempty"`
	// 关注数
	Follow int64 `protobuf:"varint,8,opt,name=follow,proto3" json:"follow,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{88}
}

func (x *Stat) GetVt() *StatInfo {
	if x != nil {
		return x.Vt
	}
	return nil
}

func (x *Stat) GetDanmaku() *StatInfo {
	if x != nil {
		return x.Danmaku
	}
	return nil
}

func (x *Stat) GetReply() int64 {
	if x != nil {
		return x.Reply
	}
	return 0
}

func (x *Stat) GetFav() int64 {
	if x != nil {
		return x.Fav
	}
	return 0
}

func (x *Stat) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *Stat) GetShare() int64 {
	if x != nil {
		return x.Share
	}
	return 0
}

func (x *Stat) GetLike() int64 {
	if x != nil {
		return x.Like
	}
	return 0
}

func (x *Stat) GetFollow() int64 {
	if x != nil {
		return x.Follow
	}
	return 0
}

type StatInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	PureText string `protobuf:"bytes,3,opt,name=pure_text,json=pureText,proto3" json:"pure_text,omitempty"`
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *StatInfo) Reset() {
	*x = StatInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatInfo) ProtoMessage() {}

func (x *StatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatInfo.ProtoReflect.Descriptor instead.
func (*StatInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{89}
}

func (x *StatInfo) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *StatInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *StatInfo) GetPureText() string {
	if x != nil {
		return x.PureText
	}
	return ""
}

func (x *StatInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type Style struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Line int32 `protobuf:"varint,1,opt,name=line,proto3" json:"line,omitempty"`
	Hidden int32 `protobuf:"varint,2,opt,name=hidden,proto3" json:"hidden,omitempty"`
	ShowPages []string `protobuf:"bytes,3,rep,name=show_pages,json=showPages,proto3" json:"show_pages,omitempty"`
}

func (x *Style) Reset() {
	*x = Style{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Style) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Style) ProtoMessage() {}

func (x *Style) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Style.ProtoReflect.Descriptor instead.
func (*Style) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{90}
}

func (x *Style) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *Style) GetHidden() int32 {
	if x != nil {
		return x.Hidden
	}
	return 0
}

func (x *Style) GetShowPages() []string {
	if x != nil {
		return x.ShowPages
	}
	return nil
}

type Tag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int64 `protobuf:"varint,1,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	TagType string `protobuf:"bytes,4,opt,name=tag_type,json=tagType,proto3" json:"tag_type,omitempty"`
}

func (x *Tag) Reset() {
	*x = Tag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tag) ProtoMessage() {}

func (x *Tag) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tag.ProtoReflect.Descriptor instead.
func (*Tag) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{91}
}

func (x *Tag) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *Tag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tag) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Tag) GetTagType() string {
	if x != nil {
		return x.TagType
	}
	return ""
}

type TheatreHotTopic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TheatreId int64 `protobuf:"varint,1,opt,name=theatre_id,json=theatreId,proto3" json:"theatre_id,omitempty"`
	TheatreSetId int64 `protobuf:"varint,2,opt,name=theatre_set_id,json=theatreSetId,proto3" json:"theatre_set_id,omitempty"`
	TheatreTitle string `protobuf:"bytes,3,opt,name=theatre_title,json=theatreTitle,proto3" json:"theatre_title,omitempty"`
	BackgroundImageUrl string `protobuf:"bytes,4,opt,name=background_image_url,json=backgroundImageUrl,proto3" json:"background_image_url,omitempty"`
	TheatreUrl string `protobuf:"bytes,5,opt,name=theatre_url,json=theatreUrl,proto3" json:"theatre_url,omitempty"`
	HotTopicId int64 `protobuf:"varint,6,opt,name=hot_topic_id,json=hotTopicId,proto3" json:"hot_topic_id,omitempty"`
	// Original one is hottopicsetid, here renamed
	HotTopicSetId int64 `protobuf:"varint,7,opt,name=hot_topic_set_id,json=hotTopicSetId,proto3" json:"hot_topic_set_id,omitempty"`
	// Original one is hottopictitle, here renamed
	HotTopicTitle string `protobuf:"bytes,8,opt,name=hot_topic_title,json=hotTopicTitle,proto3" json:"hot_topic_title,omitempty"`
	HotTopicUrl string `protobuf:"bytes,9,opt,name=hot_topic_url,json=hotTopicUrl,proto3" json:"hot_topic_url,omitempty"`
	IsSubscribe int32 `protobuf:"varint,10,opt,name=is_subscribe,json=isSubscribe,proto3" json:"is_subscribe,omitempty"`
	Report map[string]string `protobuf:"bytes,11,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TheatreHotTopic) Reset() {
	*x = TheatreHotTopic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TheatreHotTopic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TheatreHotTopic) ProtoMessage() {}

func (x *TheatreHotTopic) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TheatreHotTopic.ProtoReflect.Descriptor instead.
func (*TheatreHotTopic) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{92}
}

func (x *TheatreHotTopic) GetTheatreId() int64 {
	if x != nil {
		return x.TheatreId
	}
	return 0
}

func (x *TheatreHotTopic) GetTheatreSetId() int64 {
	if x != nil {
		return x.TheatreSetId
	}
	return 0
}

func (x *TheatreHotTopic) GetTheatreTitle() string {
	if x != nil {
		return x.TheatreTitle
	}
	return ""
}

func (x *TheatreHotTopic) GetBackgroundImageUrl() string {
	if x != nil {
		return x.BackgroundImageUrl
	}
	return ""
}

func (x *TheatreHotTopic) GetTheatreUrl() string {
	if x != nil {
		return x.TheatreUrl
	}
	return ""
}

func (x *TheatreHotTopic) GetHotTopicId() int64 {
	if x != nil {
		return x.HotTopicId
	}
	return 0
}

func (x *TheatreHotTopic) GetHotTopicSetId() int64 {
	if x != nil {
		return x.HotTopicSetId
	}
	return 0
}

func (x *TheatreHotTopic) GetHotTopicTitle() string {
	if x != nil {
		return x.HotTopicTitle
	}
	return ""
}

func (x *TheatreHotTopic) GetHotTopicUrl() string {
	if x != nil {
		return x.HotTopicUrl
	}
	return ""
}

func (x *TheatreHotTopic) GetIsSubscribe() int32 {
	if x != nil {
		return x.IsSubscribe
	}
	return 0
}

func (x *TheatreHotTopic) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type Threshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bp int32 `protobuf:"varint,1,opt,name=bp,proto3" json:"bp,omitempty"`
	Days int32 `protobuf:"varint,2,opt,name=days,proto3" json:"days,omitempty"`
	DaysText string `protobuf:"bytes,3,opt,name=days_text,json=daysText,proto3" json:"days_text,omitempty"`
}

func (x *Threshold) Reset() {
	*x = Threshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Threshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Threshold) ProtoMessage() {}

func (x *Threshold) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Threshold.ProtoReflect.Descriptor instead.
func (*Threshold) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{93}
}

func (x *Threshold) GetBp() int32 {
	if x != nil {
		return x.Bp
	}
	return 0
}

func (x *Threshold) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *Threshold) GetDaysText() string {
	if x != nil {
		return x.DaysText
	}
	return ""
}

type TitleDeliveryButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Link string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	Report map[string]string `protobuf:"bytes,4,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TitleDeliveryButton) Reset() {
	*x = TitleDeliveryButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TitleDeliveryButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleDeliveryButton) ProtoMessage() {}

func (x *TitleDeliveryButton) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleDeliveryButton.ProtoReflect.Descriptor instead.
func (*TitleDeliveryButton) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{94}
}

func (x *TitleDeliveryButton) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *TitleDeliveryButton) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TitleDeliveryButton) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *TitleDeliveryButton) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type UgcEpisode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Aid int64 `protobuf:"varint,2,opt,name=aid,proto3" json:"aid,omitempty"`
	Cid int64 `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Cover string `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	CoverRightText string `protobuf:"bytes,6,opt,name=cover_right_text,json=coverRightText,proto3" json:"cover_right_text,omitempty"`
	Page *Page `protobuf:"bytes,7,opt,name=page,proto3" json:"page,omitempty"`
	Vt *StatInfo `protobuf:"bytes,8,opt,name=vt,proto3" json:"vt,omitempty"`
	Danmaku *StatInfo `protobuf:"bytes,9,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
}

func (x *UgcEpisode) Reset() {
	*x = UgcEpisode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcEpisode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcEpisode) ProtoMessage() {}

func (x *UgcEpisode) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcEpisode.ProtoReflect.Descriptor instead.
func (*UgcEpisode) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{95}
}

func (x *UgcEpisode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UgcEpisode) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *UgcEpisode) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *UgcEpisode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UgcEpisode) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UgcEpisode) GetCoverRightText() string {
	if x != nil {
		return x.CoverRightText
	}
	return ""
}

func (x *UgcEpisode) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *UgcEpisode) GetVt() *StatInfo {
	if x != nil {
		return x.Vt
	}
	return nil
}

func (x *UgcEpisode) GetDanmaku() *StatInfo {
	if x != nil {
		return x.Danmaku
	}
	return nil
}

type UgcIntroduction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	Rating *Rating `protobuf:"bytes,2,opt,name=rating,proto3" json:"rating,omitempty"`
	Rank *Rank `protobuf:"bytes,3,opt,name=rank,proto3" json:"rank,omitempty"`
	Bgm []*ViewMaterial `protobuf:"bytes,4,rep,name=bgm,proto3" json:"bgm,omitempty"`
	Sticker []*ViewMaterial `protobuf:"bytes,5,rep,name=sticker,proto3" json:"sticker,omitempty"`
	VideoSource []*ViewMaterial `protobuf:"bytes,6,rep,name=video_source,json=videoSource,proto3" json:"video_source,omitempty"`
	Pubdate int64 `protobuf:"varint,7,opt,name=pubdate,proto3" json:"pubdate,omitempty"`
	Desc []*DescV2 `protobuf:"bytes,8,rep,name=desc,proto3" json:"desc,omitempty"`
}

func (x *UgcIntroduction) Reset() {
	*x = UgcIntroduction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcIntroduction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcIntroduction) ProtoMessage() {}

func (x *UgcIntroduction) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcIntroduction.ProtoReflect.Descriptor instead.
func (*UgcIntroduction) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{96}
}

func (x *UgcIntroduction) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UgcIntroduction) GetRating() *Rating {
	if x != nil {
		return x.Rating
	}
	return nil
}

func (x *UgcIntroduction) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

func (x *UgcIntroduction) GetBgm() []*ViewMaterial {
	if x != nil {
		return x.Bgm
	}
	return nil
}

func (x *UgcIntroduction) GetSticker() []*ViewMaterial {
	if x != nil {
		return x.Sticker
	}
	return nil
}

func (x *UgcIntroduction) GetVideoSource() []*ViewMaterial {
	if x != nil {
		return x.VideoSource
	}
	return nil
}

func (x *UgcIntroduction) GetPubdate() int64 {
	if x != nil {
		return x.Pubdate
	}
	return 0
}

func (x *UgcIntroduction) GetDesc() []*DescV2 {
	if x != nil {
		return x.Desc
	}
	return nil
}

type UgcSeasonActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	ActivityId int64 `protobuf:"varint,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Intro string `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
	DayCount int32 `protobuf:"varint,6,opt,name=day_count,json=dayCount,proto3" json:"day_count,omitempty"`
	UserCount int32 `protobuf:"varint,7,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	JoinDeadline int64 `protobuf:"varint,8,opt,name=join_deadline,json=joinDeadline,proto3" json:"join_deadline,omitempty"`
	ActivityDeadline int64 `protobuf:"varint,9,opt,name=activity_deadline,json=activityDeadline,proto3" json:"activity_deadline,omitempty"`
	CheckinViewTime int32 `protobuf:"varint,10,opt,name=checkin_view_time,json=checkinViewTime,proto3" json:"checkin_view_time,omitempty"`
	NewActivity bool `protobuf:"varint,11,opt,name=new_activity,json=newActivity,proto3" json:"new_activity,omitempty"`
	UserActivity *UserActivity `protobuf:"bytes,12,opt,name=user_activity,json=userActivity,proto3" json:"user_activity,omitempty"`
	SeasonShow *SeasonShow `protobuf:"bytes,13,opt,name=season_show,json=seasonShow,proto3" json:"season_show,omitempty"`
}

func (x *UgcSeasonActivity) Reset() {
	*x = UgcSeasonActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcSeasonActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcSeasonActivity) ProtoMessage() {}

func (x *UgcSeasonActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcSeasonActivity.ProtoReflect.Descriptor instead.
func (*UgcSeasonActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{97}
}

func (x *UgcSeasonActivity) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UgcSeasonActivity) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *UgcSeasonActivity) GetActivityId() int64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *UgcSeasonActivity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UgcSeasonActivity) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *UgcSeasonActivity) GetDayCount() int32 {
	if x != nil {
		return x.DayCount
	}
	return 0
}

func (x *UgcSeasonActivity) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *UgcSeasonActivity) GetJoinDeadline() int64 {
	if x != nil {
		return x.JoinDeadline
	}
	return 0
}

func (x *UgcSeasonActivity) GetActivityDeadline() int64 {
	if x != nil {
		return x.ActivityDeadline
	}
	return 0
}

func (x *UgcSeasonActivity) GetCheckinViewTime() int32 {
	if x != nil {
		return x.CheckinViewTime
	}
	return 0
}

func (x *UgcSeasonActivity) GetNewActivity() bool {
	if x != nil {
		return x.NewActivity
	}
	return false
}

func (x *UgcSeasonActivity) GetUserActivity() *UserActivity {
	if x != nil {
		return x.UserActivity
	}
	return nil
}

func (x *UgcSeasonActivity) GetSeasonShow() *SeasonShow {
	if x != nil {
		return x.SeasonShow
	}
	return nil
}

type UgcSeasons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Cover string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	SupernatantTitle string `protobuf:"bytes,4,opt,name=supernatant_title,json=supernatantTitle,proto3" json:"supernatant_title,omitempty"`
	Section []*UgcSection `protobuf:"bytes,5,rep,name=section,proto3" json:"section,omitempty"`
	UnionTitle string `protobuf:"bytes,6,opt,name=union_title,json=unionTitle,proto3" json:"union_title,omitempty"`
	Head *SeasonHead `protobuf:"bytes,7,opt,name=head,proto3" json:"head,omitempty"`
	EpCount int64 `protobuf:"varint,8,opt,name=ep_count,json=epCount,proto3" json:"ep_count,omitempty"`
	SeasonType int32 `protobuf:"varint,9,opt,name=season_type,json=seasonType,proto3" json:"season_type,omitempty"`
	Activity *UgcSeasonActivity `protobuf:"bytes,10,opt,name=activity,proto3" json:"activity,omitempty"`
	SeasonAbility []string `protobuf:"bytes,11,rep,name=season_ability,json=seasonAbility,proto3" json:"season_ability,omitempty"`
	SeasonTitle string `protobuf:"bytes,12,opt,name=season_title,json=seasonTitle,proto3" json:"season_title,omitempty"`
}

func (x *UgcSeasons) Reset() {
	*x = UgcSeasons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcSeasons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcSeasons) ProtoMessage() {}

func (x *UgcSeasons) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcSeasons.ProtoReflect.Descriptor instead.
func (*UgcSeasons) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{98}
}

func (x *UgcSeasons) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UgcSeasons) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UgcSeasons) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UgcSeasons) GetSupernatantTitle() string {
	if x != nil {
		return x.SupernatantTitle
	}
	return ""
}

func (x *UgcSeasons) GetSection() []*UgcSection {
	if x != nil {
		return x.Section
	}
	return nil
}

func (x *UgcSeasons) GetUnionTitle() string {
	if x != nil {
		return x.UnionTitle
	}
	return ""
}

func (x *UgcSeasons) GetHead() *SeasonHead {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *UgcSeasons) GetEpCount() int64 {
	if x != nil {
		return x.EpCount
	}
	return 0
}

func (x *UgcSeasons) GetSeasonType() int32 {
	if x != nil {
		return x.SeasonType
	}
	return 0
}

func (x *UgcSeasons) GetActivity() *UgcSeasonActivity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *UgcSeasons) GetSeasonAbility() []string {
	if x != nil {
		return x.SeasonAbility
	}
	return nil
}

func (x *UgcSeasons) GetSeasonTitle() string {
	if x != nil {
		return x.SeasonTitle
	}
	return ""
}

type UgcSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type int64 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Episodes []*UgcEpisode `protobuf:"bytes,4,rep,name=episodes,proto3" json:"episodes,omitempty"`
}

func (x *UgcSection) Reset() {
	*x = UgcSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcSection) ProtoMessage() {}

func (x *UgcSection) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcSection.ProtoReflect.Descriptor instead.
func (*UgcSection) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{99}
}

func (x *UgcSection) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UgcSection) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UgcSection) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UgcSection) GetEpisodes() []*UgcEpisode {
	if x != nil {
		return x.Episodes
	}
	return nil
}

type UpLikeImg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreImg string `protobuf:"bytes,1,opt,name=pre_img,json=preImg,proto3" json:"pre_img,omitempty"`
	SucImg string `protobuf:"bytes,2,opt,name=suc_img,json=sucImg,proto3" json:"suc_img,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Type int64 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *UpLikeImg) Reset() {
	*x = UpLikeImg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpLikeImg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpLikeImg) ProtoMessage() {}

func (x *UpLikeImg) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpLikeImg.ProtoReflect.Descriptor instead.
func (*UpLikeImg) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{100}
}

func (x *UpLikeImg) GetPreImg() string {
	if x != nil {
		return x.PreImg
	}
	return ""
}

func (x *UpLikeImg) GetSucImg() string {
	if x != nil {
		return x.SucImg
	}
	return ""
}

func (x *UpLikeImg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpLikeImg) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Face string `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	Follower int64 `protobuf:"varint,4,opt,name=follower,proto3" json:"follower,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{101}
}

func (x *User) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetFace() string {
	if x != nil {
		return x.Face
	}
	return ""
}

func (x *User) GetFollower() int64 {
	if x != nil {
		return x.Follower
	}
	return 0
}

type UserActivity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserState int32 `protobuf:"varint,1,opt,name=user_state,json=userState,proto3" json:"user_state,omitempty"`
	LastCheckinDate int64 `protobuf:"varint,2,opt,name=last_checkin_date,json=lastCheckinDate,proto3" json:"last_checkin_date,omitempty"`
	CheckinToday int32 `protobuf:"varint,3,opt,name=checkin_today,json=checkinToday,proto3" json:"checkin_today,omitempty"`
	UserDayCount int32 `protobuf:"varint,4,opt,name=user_day_count,json=userDayCount,proto3" json:"user_day_count,omitempty"`
	UserViewTime int32 `protobuf:"varint,5,opt,name=user_view_time,json=userViewTime,proto3" json:"user_view_time,omitempty"`
	Portrait string `protobuf:"bytes,6,opt,name=portrait,proto3" json:"portrait,omitempty"`
}

func (x *UserActivity) Reset() {
	*x = UserActivity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivity) ProtoMessage() {}

func (x *UserActivity) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivity.ProtoReflect.Descriptor instead.
func (*UserActivity) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{102}
}

func (x *UserActivity) GetUserState() int32 {
	if x != nil {
		return x.UserState
	}
	return 0
}

func (x *UserActivity) GetLastCheckinDate() int64 {
	if x != nil {
		return x.LastCheckinDate
	}
	return 0
}

func (x *UserActivity) GetCheckinToday() int32 {
	if x != nil {
		return x.CheckinToday
	}
	return 0
}

func (x *UserActivity) GetUserDayCount() int32 {
	if x != nil {
		return x.UserDayCount
	}
	return 0
}

func (x *UserActivity) GetUserViewTime() int32 {
	if x != nil {
		return x.UserViewTime
	}
	return 0
}

func (x *UserActivity) GetPortrait() string {
	if x != nil {
		return x.Portrait
	}
	return ""
}

type UserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*User `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UserList) Reset() {
	*x = UserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{103}
}

func (x *UserList) GetList() []*User {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *UserList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UserStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Show int32 `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
	Follow int32 `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"`
}

func (x *UserStatus) Reset() {
	*x = UserStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatus) ProtoMessage() {}

func (x *UserStatus) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatus.ProtoReflect.Descriptor instead.
func (*UserStatus) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{104}
}

func (x *UserStatus) GetShow() int32 {
	if x != nil {
		return x.Show
	}
	return 0
}

func (x *UserStatus) GetFollow() int32 {
	if x != nil {
		return x.Follow
	}
	return 0
}

type ViewEpisode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EpId int64 `protobuf:"varint,1,opt,name=ep_id,json=epId,proto3" json:"ep_id,omitempty"`
	Badge string `protobuf:"bytes,2,opt,name=badge,proto3" json:"badge,omitempty"`
	BadgeType int32 `protobuf:"varint,3,opt,name=badge_type,json=badgeType,proto3" json:"badge_type,omitempty"`
	BadgeInfo *BadgeInfo `protobuf:"bytes,4,opt,name=badge_info,json=badgeInfo,proto3" json:"badge_info,omitempty"`
	Duration int32 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Status int32 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Cover string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	Aid int64 `protobuf:"varint,8,opt,name=aid,proto3" json:"aid,omitempty"`
	Title string `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	MovieTitle string `protobuf:"bytes,10,opt,name=movie_title,json=movieTitle,proto3" json:"movie_title,omitempty"`
	Subtitle string `protobuf:"bytes,11,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	LongTitle string `protobuf:"bytes,12,opt,name=long_title,json=longTitle,proto3" json:"long_title,omitempty"`
	ToastTitle string `protobuf:"bytes,13,opt,name=toast_title,json=toastTitle,proto3" json:"toast_title,omitempty"`
	Cid int64 `protobuf:"varint,14,opt,name=cid,proto3" json:"cid,omitempty"`
	From string `protobuf:"bytes,15,opt,name=from,proto3" json:"from,omitempty"`
	ShareUrl string `protobuf:"bytes,16,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`
	ShareCopy string `protobuf:"bytes,17,opt,name=share_copy,json=shareCopy,proto3" json:"share_copy,omitempty"`
	ShortLink string `protobuf:"bytes,18,opt,name=short_link,json=shortLink,proto3" json:"short_link,omitempty"`
	Vid string `protobuf:"bytes,19,opt,name=vid,proto3" json:"vid,omitempty"`
	ReleaseDate string `protobuf:"bytes,20,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Dimension *Dimension `protobuf:"bytes,21,opt,name=dimension,proto3" json:"dimension,omitempty"`
	Rights *Rights `protobuf:"bytes,22,opt,name=rights,proto3" json:"rights,omitempty"`
	Interaction *Interaction `protobuf:"bytes,23,opt,name=interaction,proto3" json:"interaction,omitempty"`
	Bvid string `protobuf:"bytes,24,opt,name=bvid,proto3" json:"bvid,omitempty"`
	ArchiveAttr int32 `protobuf:"varint,25,opt,name=archive_attr,json=archiveAttr,proto3" json:"archive_attr,omitempty"`
	Link string `protobuf:"bytes,26,opt,name=link,proto3" json:"link,omitempty"`
	LinkType string `protobuf:"bytes,27,opt,name=link_type,json=linkType,proto3" json:"link_type,omitempty"`
	Bmid string `protobuf:"bytes,28,opt,name=bmid,proto3" json:"bmid,omitempty"`
	PubTime int64 `protobuf:"varint,29,opt,name=pub_time,json=pubTime,proto3" json:"pub_time,omitempty"`
	Pv int32 `protobuf:"varint,30,opt,name=pv,proto3" json:"pv,omitempty"`
	EpIndex int32 `protobuf:"varint,31,opt,name=ep_index,json=epIndex,proto3" json:"ep_index,omitempty"`
	SectionIndex int32 `protobuf:"varint,32,opt,name=section_index,json=sectionIndex,proto3" json:"section_index,omitempty"`
	UpInfos []*Staff `protobuf:"bytes,33,rep,name=up_infos,json=upInfos,proto3" json:"up_infos,omitempty"`
	UpInfo *Staff `protobuf:"bytes,34,opt,name=up_info,json=upInfo,proto3" json:"up_info,omitempty"`
	DialogType string `protobuf:"bytes,35,opt,name=dialog_type,json=dialogType,proto3" json:"dialog_type,omitempty"`
	ToastType string `protobuf:"bytes,36,opt,name=toast_type,json=toastType,proto3" json:"toast_type,omitempty"`
	MultiViewEps []*MultiViewEp `protobuf:"bytes,37,rep,name=multi_view_eps,json=multiViewEps,proto3" json:"multi_view_eps,omitempty"`
	IsSubView bool `protobuf:"varint,38,opt,name=is_sub_view,json=isSubView,proto3" json:"is_sub_view,omitempty"`
	IsViewHide bool `protobuf:"varint,39,opt,name=is_view_hide,json=isViewHide,proto3" json:"is_view_hide,omitempty"`
	JumpLink string `protobuf:"bytes,40,opt,name=jump_link,json=jumpLink,proto3" json:"jump_link,omitempty"`
	StatForUnity *Stat `protobuf:"bytes,41,opt,name=stat_for_unity,json=statForUnity,proto3" json:"stat_for_unity,omitempty"`
	Report map[string]string `protobuf:"bytes,42,rep,name=report,proto3" json:"report,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ViewEpisode) Reset() {
	*x = ViewEpisode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewEpisode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewEpisode) ProtoMessage() {}

func (x *ViewEpisode) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewEpisode.ProtoReflect.Descriptor instead.
func (*ViewEpisode) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{105}
}

func (x *ViewEpisode) GetEpId() int64 {
	if x != nil {
		return x.EpId
	}
	return 0
}

func (x *ViewEpisode) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *ViewEpisode) GetBadgeType() int32 {
	if x != nil {
		return x.BadgeType
	}
	return 0
}

func (x *ViewEpisode) GetBadgeInfo() *BadgeInfo {
	if x != nil {
		return x.BadgeInfo
	}
	return nil
}

func (x *ViewEpisode) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ViewEpisode) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ViewEpisode) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ViewEpisode) GetAid() int64 {
	if x != nil {
		return x.Aid
	}
	return 0
}

func (x *ViewEpisode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ViewEpisode) GetMovieTitle() string {
	if x != nil {
		return x.MovieTitle
	}
	return ""
}

func (x *ViewEpisode) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *ViewEpisode) GetLongTitle() string {
	if x != nil {
		return x.LongTitle
	}
	return ""
}

func (x *ViewEpisode) GetToastTitle() string {
	if x != nil {
		return x.ToastTitle
	}
	return ""
}

func (x *ViewEpisode) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ViewEpisode) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ViewEpisode) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

func (x *ViewEpisode) GetShareCopy() string {
	if x != nil {
		return x.ShareCopy
	}
	return ""
}

func (x *ViewEpisode) GetShortLink() string {
	if x != nil {
		return x.ShortLink
	}
	return ""
}

func (x *ViewEpisode) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *ViewEpisode) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *ViewEpisode) GetDimension() *Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *ViewEpisode) GetRights() *Rights {
	if x != nil {
		return x.Rights
	}
	return nil
}

func (x *ViewEpisode) GetInteraction() *Interaction {
	if x != nil {
		return x.Interaction
	}
	return nil
}

func (x *ViewEpisode) GetBvid() string {
	if x != nil {
		return x.Bvid
	}
	return ""
}

func (x *ViewEpisode) GetArchiveAttr() int32 {
	if x != nil {
		return x.ArchiveAttr
	}
	return 0
}

func (x *ViewEpisode) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ViewEpisode) GetLinkType() string {
	if x != nil {
		return x.LinkType
	}
	return ""
}

func (x *ViewEpisode) GetBmid() string {
	if x != nil {
		return x.Bmid
	}
	return ""
}

func (x *ViewEpisode) GetPubTime() int64 {
	if x != nil {
		return x.PubTime
	}
	return 0
}

func (x *ViewEpisode) GetPv() int32 {
	if x != nil {
		return x.Pv
	}
	return 0
}

func (x *ViewEpisode) GetEpIndex() int32 {
	if x != nil {
		return x.EpIndex
	}
	return 0
}

func (x *ViewEpisode) GetSectionIndex() int32 {
	if x != nil {
		return x.SectionIndex
	}
	return 0
}

func (x *ViewEpisode) GetUpInfos() []*Staff {
	if x != nil {
		return x.UpInfos
	}
	return nil
}

func (x *ViewEpisode) GetUpInfo() *Staff {
	if x != nil {
		return x.UpInfo
	}
	return nil
}

func (x *ViewEpisode) GetDialogType() string {
	if x != nil {
		return x.DialogType
	}
	return ""
}

func (x *ViewEpisode) GetToastType() string {
	if x != nil {
		return x.ToastType
	}
	return ""
}

func (x *ViewEpisode) GetMultiViewEps() []*MultiViewEp {
	if x != nil {
		return x.MultiViewEps
	}
	return nil
}

func (x *ViewEpisode) GetIsSubView() bool {
	if x != nil {
		return x.IsSubView
	}
	return false
}

func (x *ViewEpisode) GetIsViewHide() bool {
	if x != nil {
		return x.IsViewHide
	}
	return false
}

func (x *ViewEpisode) GetJumpLink() string {
	if x != nil {
		return x.JumpLink
	}
	return ""
}

func (x *ViewEpisode) GetStatForUnity() *Stat {
	if x != nil {
		return x.StatForUnity
	}
	return nil
}

func (x *ViewEpisode) GetReport() map[string]string {
	if x != nil {
		return x.Report
	}
	return nil
}

type ViewMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oid int64 `protobuf:"varint,1,opt,name=oid,proto3" json:"oid,omitempty"`
	Mid int64 `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Author string `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	JumpUrl string `protobuf:"bytes,5,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
}

func (x *ViewMaterial) Reset() {
	*x = ViewMaterial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewMaterial) ProtoMessage() {}

func (x *ViewMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewMaterial.ProtoReflect.Descriptor instead.
func (*ViewMaterial) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{106}
}

func (x *ViewMaterial) GetOid() int64 {
	if x != nil {
		return x.Oid
	}
	return 0
}

func (x *ViewMaterial) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ViewMaterial) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ViewMaterial) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ViewMaterial) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

type Vip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	VipStatus int32 `protobuf:"varint,2,opt,name=vip_status,json=vipStatus,proto3" json:"vip_status,omitempty"`
	ThemeType int32 `protobuf:"varint,3,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty"`
	Label *VipLabel `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	IsVip int32 `protobuf:"varint,5,opt,name=is_vip,json=isVip,proto3" json:"is_vip,omitempty"`
}

func (x *Vip) Reset() {
	*x = Vip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vip) ProtoMessage() {}

func (x *Vip) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vip.ProtoReflect.Descriptor instead.
func (*Vip) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{107}
}

func (x *Vip) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Vip) GetVipStatus() int32 {
	if x != nil {
		return x.VipStatus
	}
	return 0
}

func (x *Vip) GetThemeType() int32 {
	if x != nil {
		return x.ThemeType
	}
	return 0
}

func (x *Vip) GetLabel() *VipLabel {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *Vip) GetIsVip() int32 {
	if x != nil {
		return x.IsVip
	}
	return 0
}

type VipLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	LabelTheme string `protobuf:"bytes,3,opt,name=label_theme,json=labelTheme,proto3" json:"label_theme,omitempty"`
}

func (x *VipLabel) Reset() {
	*x = VipLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLabel) ProtoMessage() {}

func (x *VipLabel) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLabel.ProtoReflect.Descriptor instead.
func (*VipLabel) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{108}
}

func (x *VipLabel) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *VipLabel) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *VipLabel) GetLabelTheme() string {
	if x != nil {
		return x.LabelTheme
	}
	return ""
}

type WikiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WikiLabel string `protobuf:"bytes,1,opt,name=wiki_label,json=wikiLabel,proto3" json:"wiki_label,omitempty"`
	WikiUrl string `protobuf:"bytes,2,opt,name=wiki_url,json=wikiUrl,proto3" json:"wiki_url,omitempty"`
}

func (x *WikiInfo) Reset() {
	*x = WikiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_app_viewunite_common_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WikiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WikiInfo) ProtoMessage() {}

func (x *WikiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_app_viewunite_common_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WikiInfo.ProtoReflect.Descriptor instead.
func (*WikiInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_app_viewunite_common_proto_rawDescGZIP(), []int{109}
}

func (x *WikiInfo) GetWikiLabel() string {
	if x != nil {
		return x.WikiLabel
	}
	return ""
}

func (x *WikiInfo) GetWikiUrl() string {
	if x != nil {
		return x.WikiUrl
	}
	return ""
}

var File_bilibili_app_viewunite_common_proto protoreflect.FileDescriptor

var file_bilibili_app_viewunite_common_proto_rawDesc = []byte{
	0x0a, 0x23, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x64,
	0x61, 0x67, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x02, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x62, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x61, 0x62, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x75, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x69, 0x63, 0x75, 0x72, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x75, 0x72, 0x6c, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x35, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x35, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a,
	0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xfd, 0x03, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x64,
	0x5f, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x64,
	0x54, 0x61, 0x67, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x42, 0x0a, 0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x75, 0x70, 0x70, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x76, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12,
	0x5c, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e,
	0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x10, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xe9, 0x01,
	0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x02, 0x76, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x76, 0x74,
	0x12, 0x41, 0x0a, 0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x64, 0x61, 0x6e, 0x6d,
	0x61, 0x6b, 0x75, 0x12, 0x44, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x10, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x6d, 0x6f, 0x64, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x6f, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x6f,
	0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc0, 0x03,
	0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61, 0x62, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x75, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x69, 0x63, 0x75, 0x72, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x75, 0x72, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x35, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x35, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x62, 0x69, 0x7a, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x62, 0x69, 0x7a, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x63, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x45, 0x78, 0x74, 0x12, 0x4e, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x61,
	0x62, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x78, 0x0a, 0x09, 0x41, 0x67, 0x67, 0x45, 0x70, 0x43, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12,
	0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x22, 0x75, 0x0a, 0x06, 0x41, 0x67,
	0x67, 0x45, 0x70, 0x73, 0x12, 0x4a, 0x0a, 0x0c, 0x61, 0x67, 0x67, 0x5f, 0x65, 0x70, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e,
	0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x67, 0x67, 0x45, 0x70,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x61, 0x67, 0x67, 0x45, 0x70, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x12, 0x52, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x66, 0x0a, 0x0e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xeb, 0x01,
	0x0a, 0x09, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x6f, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x73, 0x6f, 0x6e, 0x67, 0x41, 0x74, 0x74, 0x72, 0x22, 0xbb, 0x02, 0x0a, 0x09,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x67, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6a, 0x0a, 0x06, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x2a, 0x0a, 0x0b, 0x42, 0x69, 0x7a, 0x46, 0x61, 0x76, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x06, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x6c, 0x65, 0x66, 0x74,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x5f, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x65, 0x66, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x47, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x64,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xdf,
	0x03, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x64, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x67, 0x69, 0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x47, 0x69, 0x66, 0x12, 0x3c, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x5f, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x70, 0x6d, 0x69, 0x64,
	0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x2f, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x9b, 0x04, 0x0a, 0x09, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x63, 0x63, 0x75, 0x70,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x63, 0x63,
	0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x6f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6d, 0x61, 0x6c, 0x6c,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x4c, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x65, 0x6c, 0x65, 0x62, 0x72, 0x69, 0x74, 0x79,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x70, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x65, 0x6c, 0x65,
	0x62, 0x72, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x22, 0x53, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x45, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x69, 0x6e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x7a, 0x69, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x5a, 0x69, 0x70, 0x49, 0x63, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x41,
	0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x31, 0x12, 0x25, 0x0a, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x32, 0x12, 0x25,
	0x0a, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f,
	0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x70, 0x70,
	0x49, 0x63, 0x6f, 0x6e, 0x33, 0x12, 0x25, 0x0a, 0x0f, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x34, 0x22, 0xfc, 0x03, 0x0a,
	0x0d, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x4f, 0x72,
	0x64, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x70, 0x69,
	0x73, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a,
	0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x65, 0x70,
	0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x47, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0c,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x0c,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x0c, 0x0a, 0x0a, 0x43,
	0x6f, 0x76, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x22, 0xd9, 0x04, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x47, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0b, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x12, 0x45, 0x0a,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x5c, 0x0a, 0x11, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x5f, 0x68, 0x6f, 0x74,
	0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x68, 0x65,
	0x61, 0x74, 0x72, 0x65, 0x48, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x48, 0x00, 0x52, 0x0f,
	0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x48, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x40, 0x0a, 0x07, 0x61, 0x67, 0x67, 0x5f, 0x65, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x67, 0x67, 0x45, 0x70, 0x73, 0x48, 0x00, 0x52, 0x06, 0x61, 0x67, 0x67, 0x45, 0x70,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x4f, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x30, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x54, 0x0a, 0x06, 0x44, 0x65, 0x73, 0x63, 0x56,
	0x32, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69, 0x64, 0x22, 0x51, 0x0a,
	0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x6f, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x72, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x8d, 0x02, 0x0a, 0x0b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x12, 0x37, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x4e, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x60, 0x0a, 0x08, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3a, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x0b, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x63, 0x69, 0x64, 0x22, 0xbd, 0x04, 0x0a, 0x05, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x75, 0x72, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x0f, 0x68, 0x6f, 0x6e, 0x6f,
	0x72, 0x5f, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x4a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0d, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x4a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48,
	0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48,
	0x6f, 0x6e, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x32, 0x0a, 0x08, 0x49, 0x63, 0x6f, 0x6e, 0x46, 0x6f, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x65, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0c,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0b,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x70, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x22, 0xd0, 0x02, 0x0a, 0x07,
	0x4b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x04, 0x6c,
	0x69, 0x6b, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x22, 0x91,
	0x01, 0x0a, 0x0c, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x41, 0x0a, 0x08, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x52, 0x07, 0x6b, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x73, 0x12, 0x3e, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x52, 0x06, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x66, 0x22, 0xdb, 0x01, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e,
	0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x74, 0x74, 0x69, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x74, 0x74, 0x69, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6c, 0x6f, 0x74, 0x74, 0x69, 0x65, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x74, 0x74, 0x69, 0x65, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x22, 0x39, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x0a,
	0x4c, 0x69, 0x6b, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x0b, 0x74, 0x72,
	0x69, 0x70, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x55, 0x70, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6d, 0x67, 0x52, 0x0a, 0x74, 0x72, 0x69, 0x70, 0x6c,
	0x65, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c,
	0x69, 0x6b, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x10,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x22, 0x64, 0x0a, 0x04, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x64,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x6e, 0x64, 0x70, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x22, 0xa2, 0x01, 0x0a, 0x09, 0x4c,
	0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2f,
	0x0a, 0x14, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6c, 0x69,
	0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x21, 0x0a, 0x0c,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x44, 0x0a, 0x04, 0x4d, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xe7, 0x10, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x5b, 0x0a, 0x10, 0x6f, 0x67, 0x76, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x67, 0x76, 0x49, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x6f, 0x67, 0x76,
	0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x10,
	0x75, 0x67, 0x63, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x67, 0x63, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x67, 0x63, 0x49, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x0d, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0c, 0x6b, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a,
	0x09, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x08, 0x68, 0x65, 0x61,
	0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x6f, 0x67, 0x76, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x67, 0x76, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x67, 0x76, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3c, 0x0a,
	0x05, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x6f, 0x6e,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x68, 0x6f, 0x6e, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x66, 0x66, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e,
	0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x73, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x66, 0x66, 0x73, 0x12, 0x5b, 0x0a, 0x10, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x6c, 0x69, 0x76, 0x65,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x76,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0b, 0x6f, 0x67, 0x76,
	0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f,
	0x67, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6f, 0x67, 0x76,
	0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x75, 0x67, 0x63, 0x5f, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x67, 0x63, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x09, 0x75, 0x67, 0x63, 0x53, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x10, 0x6f, 0x67, 0x76, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x67,
	0x76, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x6f, 0x67, 0x76, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x55,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x70,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x70, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x71, 0x0a, 0x18, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x16, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x52, 0x0a, 0x0d,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x12, 0x4f, 0x0a, 0x0c, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x13, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x12, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x4b, 0x0a, 0x0a, 0x63, 0x6f,
	0x76, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x6f, 0x76, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x76,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x22, 0x0a, 0x0b, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x56, 0x69, 0x65, 0x77, 0x45, 0x70, 0x12, 0x13,
	0x0a, 0x05, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65,
	0x70, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x05, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f,
	0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x38, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x4f, 0x67, 0x76, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xc4, 0x06, 0x0a, 0x0e, 0x4f, 0x67, 0x76, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c,
	0x69, 0x63, 0x6b, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x12, 0x3e, 0x0a, 0x1c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x76,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x69, 0x76,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x42, 0x67, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x69, 0x67,
	0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x62,
	0x74, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x74, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62,
	0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x29, 0x0a, 0x11, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x74, 0x5f, 0x62, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x74, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x14,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x74, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x69, 0x67, 0x68,
	0x74, 0x42, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x62, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x42, 0x74, 0x54,
	0x65, 0x78, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x67, 0x76, 0x4c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc1, 0x01, 0x0a, 0x0a, 0x4f, 0x67, 0x76, 0x53, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52,
	0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x4b, 0x0a,
	0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x22, 0xe3, 0x02, 0x0a, 0x08, 0x4f,
	0x67, 0x76, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x47, 0x0a,
	0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x74, 0x6e,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x1c, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x18, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x73, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x49, 0x64, 0x12, 0x66, 0x0a, 0x15, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x13, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x22, 0xd6, 0x04, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x61, 0x67, 0x77, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x72, 0x63, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x72, 0x63, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x74, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x75, 0x62, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x03, 0x76, 0x69,
	0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x70, 0x52, 0x03, 0x76, 0x69, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x56, 0x0a, 0x0f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x0e, 0x6f, 0x66, 0x66,
	0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x37, 0x0a, 0x04, 0x6c,
	0x69, 0x76, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x04,
	0x6c, 0x69, 0x76, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x61, 0x6e, 0x73, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x61, 0x6e, 0x73, 0x4e, 0x75, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x46, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x6c, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x6c, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x45, 0x0a, 0x07,
	0x50, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6e, 0x69,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x74, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x72, 0x69, 0x70, 0x6c,
	0x65, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x0d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x91, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x49, 0x63, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f,
	0x6e, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x63,
	0x6f, 0x6e, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63,
	0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x69, 0x63, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x69, 0x63, 0x6f, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x4d, 0x0a, 0x04, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x6e,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e,
	0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0xae, 0x02, 0x0a, 0x08, 0x52, 0x61,
	0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0c,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x44, 0x61, 0x79, 0x12, 0x26,
	0x0a, 0x0f, 0x62, 0x6b, 0x67, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x6b, 0x67, 0x4e, 0x69, 0x67, 0x68,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6b, 0x67, 0x5f, 0x64, 0x61,
	0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62,
	0x6b, 0x67, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x6f,
	0x6e, 0x74, 0x5f, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x6f, 0x6e, 0x74, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x79,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x6f,
	0x6e, 0x74, 0x44, 0x61, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x61,
	0x6e, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x34, 0x0a, 0x06, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0xc5, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x56, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12,
	0x46, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x55, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a,
	0x0b, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x63,
	0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xcd, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x41, 0x76, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x3e, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x12, 0x37, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x9e, 0x04, 0x0a, 0x11, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x6e, 0x65, 0x77, 0x5f, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x77,
	0x45, 0x70, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x45, 0x70, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x6f, 0x74, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39,
	0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc2, 0x03, 0x0a, 0x19, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x6e, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x6e, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x69, 0x7a, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x5c, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x74, 0x6f, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x74, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xce,
	0x01, 0x0a, 0x14, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69,
	0x55, 0x67, 0x63, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x12, 0x3d, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22,
	0xab, 0x08, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x57,
	0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x02, 0x61, 0x76, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x56, 0x43, 0x61, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x02, 0x61, 0x76, 0x12, 0x4c, 0x0a, 0x07, 0x62, 0x61, 0x6e, 0x67, 0x75, 0x6d,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x6e, 0x67, 0x75, 0x6d, 0x69, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x07, 0x62, 0x61, 0x6e,
	0x67, 0x75, 0x6d, 0x69, 0x12, 0x56, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e,
	0x67, 0x75, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x04,
	0x67, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e,
	0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x04, 0x67, 0x61, 0x6d,
	0x65, 0x12, 0x3d, 0x0a, 0x02, 0x63, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x43, 0x4d, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x02, 0x63, 0x6d,
	0x12, 0x43, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69,
	0x5f, 0x61, 0x76, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x41, 0x76, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x09, 0x62, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x41, 0x76, 0x12, 0x47, 0x0a, 0x07, 0x61, 0x69,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x49, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x06, 0x61, 0x69, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x56, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x5f, 0x75,
	0x67, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x55, 0x67, 0x63, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0a, 0x62, 0x61, 0x6e, 0x67, 0x75, 0x6d, 0x69, 0x55, 0x67, 0x63, 0x12, 0x48, 0x0a, 0x07, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x50, 0x0a, 0x0b, 0x74, 0x68, 0x72, 0x65, 0x65, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e,
	0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x74, 0x68, 0x72,
	0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x6d, 0x5f, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x07, 0x63, 0x6d, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x4b, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x06, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x22, 0xb2, 0x01,
	0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x4d, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0d,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x04, 0x73, 0x74, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74,
	0x61, 0x74, 0x22, 0xb7, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x53, 0x68, 0x6f, 0x77, 0x4d, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x4e, 0x12, 0x3f, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x6e, 0x5f,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x63, 0x61, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0xdf, 0x02, 0x0a,
	0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x49, 0x43, 0x61, 0x72, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x07,
	0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x52, 0x06, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04,
	0x73, 0x74, 0x61, 0x74, 0x12, 0x50, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x49, 0x43, 0x61,
	0x72, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x74, 0x6f, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x74, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc6,
	0x02, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x75,
	0x62, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x73, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x73, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x50,
	0x61, 0x73, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x54, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x52,
	0x0d, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x61, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x74,
	0x6f, 0x61, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x54, 0x6f, 0x61, 0x73, 0x74, 0x22, 0x86, 0x05, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44,
	0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x08,
	0x70, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52,
	0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x10, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x52, 0x0e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65,
	0x52, 0x63, 0x6d, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x09, 0x77, 0x69,
	0x6b, 0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x69,
	0x6b, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x77, 0x69, 0x6b, 0x69, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3e, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x22, 0x64, 0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x75, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x76, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x63, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x63,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x72, 0x65, 0x61, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e,
	0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x72,
	0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x63, 0x6d, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xf5, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x07, 0x64,
	0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x52, 0x07, 0x64, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x12, 0x48, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x6c,
	0x69, 0x6b, 0x65, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x77, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x72, 0x12, 0x2e,
	0x0a, 0x13, 0x64, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x69, 0x73,
	0x6c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd1,
	0x02, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x4c, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x69, 0x7a,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x52, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x42, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x12, 0x3e, 0x0a, 0x03, 0x66, 0x61, 0x76, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x42, 0x69, 0x7a, 0x46, 0x61, 0x76, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x03,
	0x66, 0x61, 0x76, 0x42, 0x0d, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0xe8, 0x01, 0x0a, 0x06, 0x52, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x77,
	0x61, 0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x61, 0x72, 0x65, 0x61, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb4, 0x01,
	0x0a, 0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x37, 0x0a, 0x02, 0x76, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x76,
	0x74, 0x12, 0x41, 0x0a, 0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x64, 0x61, 0x6e,
	0x6d, 0x61, 0x6b, 0x75, 0x22, 0xb1, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53,
	0x68, 0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x75, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0xad, 0x05, 0x0a, 0x0b, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x63, 0x61, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x4f, 0x72, 0x64, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x46, 0x0a, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x45, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x52, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6d, 0x6f, 0x72, 0x65, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x12, 0x45,
	0x0a, 0x07, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x65,
	0x66, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52,
	0x08, 0x6d, 0x6f, 0x72, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a,
	0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfc, 0x02, 0x0a, 0x0c, 0x53, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x47, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x6e, 0x65,
	0x77, 0x5f, 0x65, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e,
	0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x77, 0x45, 0x70,
	0x52, 0x05, 0x6e, 0x65, 0x77, 0x45, 0x70, 0x22, 0x33, 0x0a, 0x09, 0x53, 0x6b, 0x69, 0x70, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x96, 0x03, 0x0a,
	0x07, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x77, 0x65,
	0x65, 0x6b, 0x12, 0x47, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x6d,
	0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x52, 0x04,
	0x6d, 0x69, 0x6e, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x08, 0x70, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x6e, 0x64,
	0x61, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x46, 0x0a,
	0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x0b, 0x53, 0x70, 0x6f, 0x6e, 0x73, 0x6f,
	0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x61, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x56, 0x69, 0x70, 0x52, 0x03, 0x76, 0x69, 0x70, 0x22, 0xab, 0x02, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x66, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61, 0x63,
	0x65, 0x12, 0x49, 0x0a, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x03,
	0x76, 0x69, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x70, 0x52, 0x03, 0x76,
	0x69, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x74,
	0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x61, 0x6e, 0x73, 0x22, 0x5a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x66, 0x66,
	0x73, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x05, 0x73, 0x74, 0x61, 0x66, 0x66, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x37, 0x0a, 0x02,
	0x76, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x02, 0x76, 0x74, 0x12, 0x41, 0x0a, 0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x61, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x66, 0x61, 0x76,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6b, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x65, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x75, 0x72, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x52, 0x0a,
	0x05, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x5d, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x97, 0x04, 0x0a, 0x0f, 0x54, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x48, 0x6f, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x72, 0x65, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x68, 0x65,
	0x61, 0x74, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x68, 0x65, 0x61, 0x74, 0x72, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x68, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x10, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68,
	0x6f, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x65, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x68, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x69, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x52, 0x0a, 0x06, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x68, 0x65, 0x61,
	0x74, 0x72, 0x65, 0x48, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a,
	0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a, 0x09, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x62, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x62, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x61, 0x79, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x61, 0x79, 0x73, 0x54, 0x65, 0x78, 0x74, 0x22, 0xe6, 0x01, 0x0a, 0x13, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x56,
	0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xcb, 0x02, 0x0a, 0x0a, 0x55, 0x67, 0x63, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x02, 0x76, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x76, 0x74, 0x12, 0x41, 0x0a, 0x07,
	0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x64, 0x61, 0x6e, 0x6d, 0x61, 0x6b, 0x75, 0x22,
	0xec, 0x03, 0x0a, 0x0f, 0x55, 0x67, 0x63, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x12, 0x3d, 0x0a, 0x03, 0x62, 0x67, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x03, 0x62,
	0x67, 0x6d, 0x12, 0x45, 0x0a, 0x07, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x07, 0x73, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0c, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x0b, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x75, 0x62,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x75, 0x62, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x56, 0x32, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x81,
	0x04, 0x0a, 0x11, 0x55, 0x67, 0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x79, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x61, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6a, 0x6f, 0x69, 0x6e,
	0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x53, 0x68,
	0x6f, 0x77, 0x22, 0xee, 0x03, 0x0a, 0x0a, 0x55, 0x67, 0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x2b, 0x0a,
	0x11, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x61, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x70, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x61, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75,
	0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x67, 0x63, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x3d, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x52, 0x04, 0x68, 0x65, 0x61, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x67,
	0x63, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x55, 0x67, 0x63, 0x53, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x08,
	0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69,
	0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55,
	0x67, 0x63, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x65, 0x70, 0x69, 0x73, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x6b, 0x0a, 0x09, 0x55, 0x70, 0x4c, 0x69, 0x6b, 0x65, 0x49, 0x6d, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x5f, 0x69, 0x6d, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x63, 0x49,
	0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x5c, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x61,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x22, 0xe6,
	0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x5f, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12,
	0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x44, 0x61, 0x79,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x75,
	0x73, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x22, 0x59, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x68, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0xc8, 0x0c, 0x0a,
	0x0b, 0x56, 0x69, 0x65, 0x77, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x05,
	0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x70, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x64,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x62, 0x61, 0x64, 0x67, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e,
	0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x62, 0x61, 0x64, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x70, 0x79, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x70, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x10, 0x0a, 0x03, 0x76, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x06,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x4c, 0x0a, 0x0b, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x69,
	0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x76, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6d, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x62, 0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x75, 0x62, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x70, 0x76, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x70, 0x76,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x65, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x3f, 0x0a, 0x08, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x21, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x07, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x3d, 0x0a, 0x07, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x66, 0x66, 0x52, 0x06, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x50, 0x0a, 0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x65,
	0x70, 0x73, 0x18, 0x25, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x56, 0x69,
	0x65, 0x77, 0x45, 0x70, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x56, 0x69, 0x65, 0x77, 0x45,
	0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x76, 0x69, 0x65,
	0x77, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x62, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x68, 0x69,
	0x64, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x69, 0x65, 0x77,
	0x48, 0x69, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x49, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69,
	0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x46, 0x6f, 0x72, 0x55, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65, 0x77,
	0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x45, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x39, 0x0a, 0x0b,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7b, 0x0a, 0x0c, 0x56, 0x69, 0x65, 0x77, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d,
	0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d,
	0x70, 0x55, 0x72, 0x6c, 0x22, 0xad, 0x01, 0x0a, 0x03, 0x56, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x69, 0x65,
	0x77, 0x75, 0x6e, 0x69, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x69,
	0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x15, 0x0a,
	0x06, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x73, 0x56, 0x69, 0x70, 0x22, 0x53, 0x0a, 0x08, 0x56, 0x69, 0x70, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x08, 0x57, 0x69, 0x6b,
	0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x6b, 0x69, 0x5f, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x69, 0x6b, 0x69, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x6b, 0x69, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x69, 0x6b, 0x69, 0x55, 0x72, 0x6c, 0x2a,
	0x95, 0x01, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x52, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x52, 0x53,
	0x5f, 0x4e, 0x30, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x41, 0x52, 0x53, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x48, 0x49, 0x4d, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x41, 0x52, 0x53, 0x5f, 0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x4d, 0x45,
	0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x52, 0x53, 0x5f, 0x42, 0x55, 0x44, 0x44, 0x59, 0x10,
	0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x52, 0x53, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x52, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10, 0x06, 0x2a, 0x41, 0x0a, 0x08, 0x44, 0x65, 0x73, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65,
	0x73, 0x63, 0x54, 0x79, 0x70, 0x65, 0x41, 0x74, 0x10, 0x02, 0x2a, 0x57, 0x0a, 0x0d, 0x48, 0x6f,
	0x6e, 0x6f, 0x72, 0x4a, 0x75, 0x6d, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x48,
	0x4f, 0x4e, 0x4f, 0x52, 0x5f, 0x4a, 0x55, 0x4d, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x48, 0x4f, 0x4e, 0x4f,
	0x52, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x48, 0x4f, 0x4e, 0x4f, 0x52, 0x5f, 0x48, 0x41, 0x4c, 0x46, 0x5f, 0x53, 0x43, 0x52, 0x45, 0x45,
	0x4e, 0x10, 0x02, 0x2a, 0xc4, 0x01, 0x0a, 0x09, 0x48, 0x6f, 0x6e, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x4f, 0x4e, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4c, 0x41, 0x59, 0x4c, 0x45, 0x54, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x52, 0x47, 0x55, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54,
	0x49, 0x43, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x55, 0x49, 0x44, 0x41, 0x4e, 0x43,
	0x45, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x48, 0x4f, 0x4e, 0x4f, 0x52, 0x5f, 0x42, 0x49, 0x4c,
	0x49, 0x5f, 0x52, 0x41, 0x4e, 0x4b, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x48, 0x4f, 0x4e, 0x4f,
	0x52, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x4c, 0x59, 0x5f, 0x52, 0x41, 0x4e, 0x4b, 0x10, 0x06, 0x12,
	0x14, 0x0a, 0x10, 0x48, 0x4f, 0x4e, 0x4f, 0x52, 0x5f, 0x44, 0x41, 0x49, 0x4c, 0x59, 0x5f, 0x52,
	0x41, 0x4e, 0x4b, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x48, 0x4f, 0x4e, 0x4f, 0x52, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x4f, 0x4e, 0x4f,
	0x52, 0x5f, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x4f, 0x4e,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x0a, 0x2a, 0x79, 0x0a, 0x10, 0x4b, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x14, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4b, 0x45,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b, 0x45, 0x10, 0x02, 0x12,
	0x08, 0x0a, 0x04, 0x43, 0x4f, 0x49, 0x4e, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x41, 0x56,
	0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x48, 0x41, 0x52, 0x45, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x43, 0x41, 0x43, 0x48, 0x45, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x41, 0x4e, 0x4d,
	0x41, 0x4b, 0x55, 0x10, 0x07, 0x2a, 0xf4, 0x04, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x47, 0x56, 0x5f, 0x49, 0x4e, 0x54, 0x52, 0x4f, 0x44, 0x55,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x47, 0x56, 0x5f, 0x54,
	0x49, 0x54, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x47, 0x43, 0x5f, 0x48, 0x45,
	0x41, 0x44, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x47, 0x43, 0x5f,
	0x49, 0x4e, 0x54, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x11,
	0x0a, 0x0d, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x05, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x46, 0x46,
	0x53, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x4f, 0x4e, 0x4f, 0x52, 0x10, 0x08, 0x12, 0x09,
	0x0a, 0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x09, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x47,
	0x45, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f,
	0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x4c, 0x49, 0x56,
	0x45, 0x5f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x49, 0x56, 0x45, 0x10, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x0e, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x0f,
	0x12, 0x08, 0x0a, 0x04, 0x50, 0x55, 0x47, 0x56, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f,
	0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x11, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x10, 0x12, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54, 0x45, 0x52, 0x10, 0x13, 0x12, 0x10, 0x0a, 0x0c,
	0x46, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x5f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x14, 0x12, 0x0f,
	0x0a, 0x0b, 0x4f, 0x47, 0x56, 0x5f, 0x53, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x53, 0x10, 0x15, 0x12,
	0x0e, 0x0a, 0x0a, 0x55, 0x47, 0x43, 0x5f, 0x53, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x10, 0x16, 0x12,
	0x14, 0x0a, 0x10, 0x4f, 0x47, 0x56, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x10, 0x17, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x4d, 0x42, 0x49, 0x4e, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x50, 0x49, 0x53, 0x4f, 0x44, 0x45, 0x10, 0x18, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x4f, 0x52, 0x10, 0x19, 0x12, 0x15, 0x0a, 0x11, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x41, 0x4e, 0x43, 0x45,
	0x10, 0x1a, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x48, 0x45, 0x41, 0x54, 0x52, 0x45, 0x5f, 0x48, 0x4f,
	0x54, 0x5f, 0x54, 0x4f, 0x50, 0x49, 0x43, 0x10, 0x1b, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x4c,
	0x41, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x10, 0x1c,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x59, 0x5f, 0x42, 0x41, 0x52, 0x10, 0x1d, 0x12, 0x0a, 0x0a,
	0x06, 0x42, 0x41, 0x4e, 0x4e, 0x45, 0x52, 0x10, 0x1e, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44,
	0x49, 0x4f, 0x10, 0x1f, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x47, 0x47, 0x5f, 0x43, 0x41, 0x52, 0x44,
	0x10, 0x20, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x45, 0x50, 0x10,
	0x21, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x22, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x54, 0x54, 0x45, 0x4e, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x10, 0x23, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x4f, 0x56, 0x45, 0x4e, 0x41, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x24, 0x2a, 0x25, 0x0a, 0x0e,
	0x4f, 0x63, 0x63, 0x75, 0x70, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x54, 0x41, 0x46, 0x46, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x41, 0x53,
	0x54, 0x10, 0x01, 0x2a, 0xa6, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a,
	0x02, 0x41, 0x56, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x41, 0x4e, 0x47, 0x55, 0x4d, 0x49,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x03,
	0x12, 0x08, 0x0a, 0x04, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x4d,
	0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x49, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x44, 0x10, 0x07, 0x12, 0x0e,
	0x0a, 0x0a, 0x42, 0x41, 0x4e, 0x47, 0x55, 0x4d, 0x49, 0x5f, 0x41, 0x56, 0x10, 0x08, 0x12, 0x0f,
	0x0a, 0x0b, 0x42, 0x41, 0x4e, 0x47, 0x55, 0x4d, 0x49, 0x5f, 0x55, 0x47, 0x43, 0x10, 0x09, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x10, 0x0a, 0x2a, 0x53, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f,
	0x0a, 0x0b, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x1a, 0x0a, 0x16, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x42,
	0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x46, 0x61, 0x76, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x10,
	0x02, 0x2a, 0x2d, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x42, 0x61, 0x73, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x10, 0x02,
	0x2a, 0x30, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x49,
	0x54, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x49, 0x43, 0x54, 0x55, 0x52, 0x45,
	0x10, 0x01, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x74, 0x6d, 0x74, 0x63, 0x32, 0x33, 0x33, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x2d, 0x67,
	0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x75, 0x6e, 0x69, 0x74,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_app_viewunite_common_proto_rawDescOnce sync.Once
	file_bilibili_app_viewunite_common_proto_rawDescData = file_bilibili_app_viewunite_common_proto_rawDesc
)

func file_bilibili_app_viewunite_common_proto_rawDescGZIP() []byte {
	file_bilibili_app_viewunite_common_proto_rawDescOnce.Do(func() {
		file_bilibili_app_viewunite_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_app_viewunite_common_proto_rawDescData)
	})
	return file_bilibili_app_viewunite_common_proto_rawDescData
}

var file_bilibili_app_viewunite_common_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_bilibili_app_viewunite_common_proto_msgTypes = make([]protoimpl.MessageInfo, 125)
var file_bilibili_app_viewunite_common_proto_goTypes = []interface{}{
	(AttentionRelationStatus)(0),      // 0: bilibili.app.viewunite.common.AttentionRelationStatus
	(DescType)(0),                     // 1: bilibili.app.viewunite.common.DescType
	(HonorJumpType)(0),                // 2: bilibili.app.viewunite.common.HonorJumpType
	(HonorType)(0),                    // 3: bilibili.app.viewunite.common.HonorType
	(KingPositionType)(0),             // 4: bilibili.app.viewunite.common.KingPositionType
	(ModuleType)(0),                   // 5: bilibili.app.viewunite.common.ModuleType
	(OccupationType)(0),               // 6: bilibili.app.viewunite.common.OccupationType
	(RelateCardType)(0),               // 7: bilibili.app.viewunite.common.RelateCardType
	(ReserveBizType)(0),               // 8: bilibili.app.viewunite.common.ReserveBizType
	(SeasonType)(0),                   // 9: bilibili.app.viewunite.common.SeasonType
	(SerialSeasonCoverStyle)(0),       // 10: bilibili.app.viewunite.common.SerialSeasonCoverStyle
	(*Activity)(nil),                  // 11: bilibili.app.viewunite.common.Activity
	(*ActivityEntrance)(nil),          // 12: bilibili.app.viewunite.common.ActivityEntrance
	(*ActivityEntranceModule)(nil),    // 13: bilibili.app.viewunite.common.ActivityEntranceModule
	(*ActivityReserve)(nil),           // 14: bilibili.app.viewunite.common.ActivityReserve
	(*ActivityResource)(nil),          // 15: bilibili.app.viewunite.common.ActivityResource
	(*ActivityTab)(nil),               // 16: bilibili.app.viewunite.common.ActivityTab
	(*AggEpCard)(nil),                 // 17: bilibili.app.viewunite.common.AggEpCard
	(*AggEps)(nil),                    // 18: bilibili.app.viewunite.common.AggEps
	(*AttentionRecommend)(nil),        // 19: bilibili.app.viewunite.common.AttentionRecommend
	(*Audio)(nil),                     // 20: bilibili.app.viewunite.common.Audio
	(*AudioInfo)(nil),                 // 21: bilibili.app.viewunite.common.AudioInfo
	(*BadgeInfo)(nil),                 // 22: bilibili.app.viewunite.common.BadgeInfo
	(*Banner)(nil),                    // 23: bilibili.app.viewunite.common.Banner
	(*BizFavParam)(nil),               // 24: bilibili.app.viewunite.common.BizFavParam
	(*BizReserveActivityParam)(nil),   // 25: bilibili.app.viewunite.common.BizReserveActivityParam
	(*Button)(nil),                    // 26: bilibili.app.viewunite.common.Button
	(*CardBasicInfo)(nil),             // 27: bilibili.app.viewunite.common.CardBasicInfo
	(*CardStyle)(nil),                 // 28: bilibili.app.viewunite.common.CardStyle
	(*Celebrity)(nil),                 // 29: bilibili.app.viewunite.common.Celebrity
	(*CharacterGroup)(nil),            // 30: bilibili.app.viewunite.common.CharacterGroup
	(*Characters)(nil),                // 31: bilibili.app.viewunite.common.Characters
	(*CoinExtend)(nil),                // 32: bilibili.app.viewunite.common.CoinExtend
	(*CombinationEp)(nil),             // 33: bilibili.app.viewunite.common.CombinationEp
	(*Covenanter)(nil),                // 34: bilibili.app.viewunite.common.Covenanter
	(*DeliveryData)(nil),              // 35: bilibili.app.viewunite.common.DeliveryData
	(*Desc)(nil),                      // 36: bilibili.app.viewunite.common.Desc
	(*DescV2)(nil),                    // 37: bilibili.app.viewunite.common.DescV2
	(*Dimension)(nil),                 // 38: bilibili.app.viewunite.common.Dimension
	(*DislikeReasons)(nil),            // 39: bilibili.app.viewunite.common.DislikeReasons
	(*FollowLayer)(nil),               // 40: bilibili.app.viewunite.common.FollowLayer
	(*Headline)(nil),                  // 41: bilibili.app.viewunite.common.Headline
	(*HistoryNode)(nil),               // 42: bilibili.app.viewunite.common.HistoryNode
	(*Honor)(nil),                     // 43: bilibili.app.viewunite.common.Honor
	(*IconFont)(nil),                  // 44: bilibili.app.viewunite.common.IconFont
	(*Interaction)(nil),               // 45: bilibili.app.viewunite.common.Interaction
	(*Item)(nil),                      // 46: bilibili.app.viewunite.common.Item
	(*KingPos)(nil),                   // 47: bilibili.app.viewunite.common.KingPos
	(*KingPosition)(nil),              // 48: bilibili.app.viewunite.common.KingPosition
	(*Label)(nil),                     // 49: bilibili.app.viewunite.common.Label
	(*LikeComment)(nil),               // 50: bilibili.app.viewunite.common.LikeComment
	(*LikeExtend)(nil),                // 51: bilibili.app.viewunite.common.LikeExtend
	(*Live)(nil),                      // 52: bilibili.app.viewunite.common.Live
	(*LiveOrder)(nil),                 // 53: bilibili.app.viewunite.common.LiveOrder
	(*Mine)(nil),                      // 54: bilibili.app.viewunite.common.Mine
	(*Module)(nil),                    // 55: bilibili.app.viewunite.common.Module
	(*MultiViewEp)(nil),               // 56: bilibili.app.viewunite.common.MultiViewEp
	(*NewEp)(nil),                     // 57: bilibili.app.viewunite.common.NewEp
	(*OfficialVerify)(nil),            // 58: bilibili.app.viewunite.common.OfficialVerify
	(*OgvIntroduction)(nil),           // 59: bilibili.app.viewunite.common.OgvIntroduction
	(*OgvLiveReserve)(nil),            // 60: bilibili.app.viewunite.common.OgvLiveReserve
	(*OgvSeasons)(nil),                // 61: bilibili.app.viewunite.common.OgvSeasons
	(*OgvTitle)(nil),                  // 62: bilibili.app.viewunite.common.OgvTitle
	(*Owner)(nil),                     // 63: bilibili.app.viewunite.common.Owner
	(*Page)(nil),                      // 64: bilibili.app.viewunite.common.Page
	(*Pendant)(nil),                   // 65: bilibili.app.viewunite.common.Pendant
	(*PlayerAnimation)(nil),           // 66: bilibili.app.viewunite.common.PlayerAnimation
	(*PointActivity)(nil),             // 67: bilibili.app.viewunite.common.PointActivity
	(*PowerIconStyle)(nil),            // 68: bilibili.app.viewunite.common.PowerIconStyle
	(*Rank)(nil),                      // 69: bilibili.app.viewunite.common.Rank
	(*RankInfo)(nil),                  // 70: bilibili.app.viewunite.common.RankInfo
	(*Rating)(nil),                    // 71: bilibili.app.viewunite.common.Rating
	(*RelateAVCard)(nil),              // 72: bilibili.app.viewunite.common.RelateAVCard
	(*RelateBangumiAvCard)(nil),       // 73: bilibili.app.viewunite.common.RelateBangumiAvCard
	(*RelateBangumiCard)(nil),         // 74: bilibili.app.viewunite.common.RelateBangumiCard
	(*RelateBangumiResourceCard)(nil), // 75: bilibili.app.viewunite.common.RelateBangumiResourceCard
	(*RelateBangumiUgcCard)(nil),      // 76: bilibili.app.viewunite.common.RelateBangumiUgcCard
	(*RelateCard)(nil),                // 77: bilibili.app.viewunite.common.RelateCard
	(*RelateCMCard)(nil),              // 78: bilibili.app.viewunite.common.RelateCMCard
	(*RelateConfig)(nil),              // 79: bilibili.app.viewunite.common.RelateConfig
	(*RelatedAICard)(nil),             // 80: bilibili.app.viewunite.common.RelatedAICard
	(*RelateDislike)(nil),             // 81: bilibili.app.viewunite.common.RelateDislike
	(*RelateGameCard)(nil),            // 82: bilibili.app.viewunite.common.RelateGameCard
	(*RelateItem)(nil),                // 83: bilibili.app.viewunite.common.RelateItem
	(*RelateLiveCard)(nil),            // 84: bilibili.app.viewunite.common.RelateLiveCard
	(*Relates)(nil),                   // 85: bilibili.app.viewunite.common.Relates
	(*RelateSpecial)(nil),             // 86: bilibili.app.viewunite.common.RelateSpecial
	(*RelateThreePoint)(nil),          // 87: bilibili.app.viewunite.common.RelateThreePoint
	(*ReserveButton)(nil),             // 88: bilibili.app.viewunite.common.ReserveButton
	(*Rights)(nil),                    // 89: bilibili.app.viewunite.common.Rights
	(*SeasonHead)(nil),                // 90: bilibili.app.viewunite.common.SeasonHead
	(*SeasonShow)(nil),                // 91: bilibili.app.viewunite.common.SeasonShow
	(*SectionData)(nil),               // 92: bilibili.app.viewunite.common.SectionData
	(*SerialSeason)(nil),              // 93: bilibili.app.viewunite.common.SerialSeason
	(*SkipRange)(nil),                 // 94: bilibili.app.viewunite.common.SkipRange
	(*Sponsor)(nil),                   // 95: bilibili.app.viewunite.common.Sponsor
	(*SponsorRank)(nil),               // 96: bilibili.app.viewunite.common.SponsorRank
	(*Staff)(nil),                     // 97: bilibili.app.viewunite.common.Staff
	(*Staffs)(nil),                    // 98: bilibili.app.viewunite.common.Staffs
	(*Stat)(nil),                      // 99: bilibili.app.viewunite.common.Stat
	(*StatInfo)(nil),                  // 100: bilibili.app.viewunite.common.StatInfo
	(*Style)(nil),                     // 101: bilibili.app.viewunite.common.Style
	(*Tag)(nil),                       // 102: bilibili.app.viewunite.common.Tag
	(*TheatreHotTopic)(nil),           // 103: bilibili.app.viewunite.common.TheatreHotTopic
	(*Threshold)(nil),                 // 104: bilibili.app.viewunite.common.Threshold
	(*TitleDeliveryButton)(nil),       // 105: bilibili.app.viewunite.common.TitleDeliveryButton
	(*UgcEpisode)(nil),                // 106: bilibili.app.viewunite.common.UgcEpisode
	(*UgcIntroduction)(nil),           // 107: bilibili.app.viewunite.common.UgcIntroduction
	(*UgcSeasonActivity)(nil),         // 108: bilibili.app.viewunite.common.UgcSeasonActivity
	(*UgcSeasons)(nil),                // 109: bilibili.app.viewunite.common.UgcSeasons
	(*UgcSection)(nil),                // 110: bilibili.app.viewunite.common.UgcSection
	(*UpLikeImg)(nil),                 // 111: bilibili.app.viewunite.common.UpLikeImg
	(*User)(nil),                      // 112: bilibili.app.viewunite.common.User
	(*UserActivity)(nil),              // 113: bilibili.app.viewunite.common.UserActivity
	(*UserList)(nil),                  // 114: bilibili.app.viewunite.common.UserList
	(*UserStatus)(nil),                // 115: bilibili.app.viewunite.common.UserStatus
	(*ViewEpisode)(nil),               // 116: bilibili.app.viewunite.common.ViewEpisode
	(*ViewMaterial)(nil),              // 117: bilibili.app.viewunite.common.ViewMaterial
	(*Vip)(nil),                       // 118: bilibili.app.viewunite.common.Vip
	(*VipLabel)(nil),                  // 119: bilibili.app.viewunite.common.VipLabel
	(*WikiInfo)(nil),                  // 120: bilibili.app.viewunite.common.WikiInfo
	nil,                               // 121: bilibili.app.viewunite.common.ActivityEntrance.ReportEntry
	nil,                               // 122: bilibili.app.viewunite.common.ActivityTab.ReportEntry
	nil,                               // 123: bilibili.app.viewunite.common.Audio.AudioInfoEntry
	nil,                               // 124: bilibili.app.viewunite.common.Celebrity.ReportEntry
	nil,                               // 125: bilibili.app.viewunite.common.DeliveryData.ReportEntry
	nil,                               // 126: bilibili.app.viewunite.common.FollowLayer.ReportEntry
	nil,                               // 127: bilibili.app.viewunite.common.Honor.ReportEntry
	nil,                               // 128: bilibili.app.viewunite.common.OgvLiveReserve.ReportEntry
	nil,                               // 129: bilibili.app.viewunite.common.RelateBangumiCard.ReportEntry
	nil,                               // 130: bilibili.app.viewunite.common.RelateBangumiResourceCard.ReportEntry
	nil,                               // 131: bilibili.app.viewunite.common.RelatedAICard.ReportEntry
	nil,                               // 132: bilibili.app.viewunite.common.SectionData.ReportEntry
	nil,                               // 133: bilibili.app.viewunite.common.TheatreHotTopic.ReportEntry
	nil,                               // 134: bilibili.app.viewunite.common.TitleDeliveryButton.ReportEntry
	nil,                               // 135: bilibili.app.viewunite.common.ViewEpisode.ReportEntry
	(*v1.AvatarItem)(nil),             // 136: bilibili.dagw.component.avatar.v1.AvatarItem
	(*anypb.Any)(nil),                 // 137: google.protobuf.Any
	(*pagination.Pagination)(nil),     // 138: bilibili.pagination.Pagination
}
var file_bilibili_app_viewunite_common_proto_depIdxs = []int32{
	46,  // 0: bilibili.app.viewunite.common.Activity.items:type_name -> bilibili.app.viewunite.common.Item
	112, // 1: bilibili.app.viewunite.common.ActivityEntrance.upper_list:type_name -> bilibili.app.viewunite.common.User
	121, // 2: bilibili.app.viewunite.common.ActivityEntrance.report:type_name -> bilibili.app.viewunite.common.ActivityEntrance.ReportEntry
	12,  // 3: bilibili.app.viewunite.common.ActivityEntranceModule.activity_entrance:type_name -> bilibili.app.viewunite.common.ActivityEntrance
	100, // 4: bilibili.app.viewunite.common.ActivityReserve.vt:type_name -> bilibili.app.viewunite.common.StatInfo
	100, // 5: bilibili.app.viewunite.common.ActivityReserve.danmaku:type_name -> bilibili.app.viewunite.common.StatInfo
	88,  // 6: bilibili.app.viewunite.common.ActivityReserve.button:type_name -> bilibili.app.viewunite.common.ReserveButton
	122, // 7: bilibili.app.viewunite.common.ActivityTab.report:type_name -> bilibili.app.viewunite.common.ActivityTab.ReportEntry
	17,  // 8: bilibili.app.viewunite.common.AggEps.agg_ep_cards:type_name -> bilibili.app.viewunite.common.AggEpCard
	123, // 9: bilibili.app.viewunite.common.Audio.audio_info:type_name -> bilibili.app.viewunite.common.Audio.AudioInfoEntry
	83,  // 10: bilibili.app.viewunite.common.Banner.relate_item:type_name -> bilibili.app.viewunite.common.RelateItem
	22,  // 11: bilibili.app.viewunite.common.Button.badge_info:type_name -> bilibili.app.viewunite.common.BadgeInfo
	63,  // 12: bilibili.app.viewunite.common.CardBasicInfo.author:type_name -> bilibili.app.viewunite.common.Owner
	124, // 13: bilibili.app.viewunite.common.Celebrity.report:type_name -> bilibili.app.viewunite.common.Celebrity.ReportEntry
	29,  // 14: bilibili.app.viewunite.common.CharacterGroup.characters:type_name -> bilibili.app.viewunite.common.Celebrity
	30,  // 15: bilibili.app.viewunite.common.Characters.groups:type_name -> bilibili.app.viewunite.common.CharacterGroup
	116, // 16: bilibili.app.viewunite.common.CombinationEp.episodes:type_name -> bilibili.app.viewunite.common.ViewEpisode
	101, // 17: bilibili.app.viewunite.common.CombinationEp.module_style:type_name -> bilibili.app.viewunite.common.Style
	93,  // 18: bilibili.app.viewunite.common.CombinationEp.serial_season:type_name -> bilibili.app.viewunite.common.SerialSeason
	92,  // 19: bilibili.app.viewunite.common.CombinationEp.section_data:type_name -> bilibili.app.viewunite.common.SectionData
	101, // 20: bilibili.app.viewunite.common.DeliveryData.module_style:type_name -> bilibili.app.viewunite.common.Style
	11,  // 21: bilibili.app.viewunite.common.DeliveryData.activity:type_name -> bilibili.app.viewunite.common.Activity
	31,  // 22: bilibili.app.viewunite.common.DeliveryData.characters:type_name -> bilibili.app.viewunite.common.Characters
	103, // 23: bilibili.app.viewunite.common.DeliveryData.theatre_hot_topic:type_name -> bilibili.app.viewunite.common.TheatreHotTopic
	18,  // 24: bilibili.app.viewunite.common.DeliveryData.agg_eps:type_name -> bilibili.app.viewunite.common.AggEps
	125, // 25: bilibili.app.viewunite.common.DeliveryData.report:type_name -> bilibili.app.viewunite.common.DeliveryData.ReportEntry
	97,  // 26: bilibili.app.viewunite.common.FollowLayer.staff:type_name -> bilibili.app.viewunite.common.Staff
	36,  // 27: bilibili.app.viewunite.common.FollowLayer.desc:type_name -> bilibili.app.viewunite.common.Desc
	126, // 28: bilibili.app.viewunite.common.FollowLayer.report:type_name -> bilibili.app.viewunite.common.FollowLayer.ReportEntry
	49,  // 29: bilibili.app.viewunite.common.Headline.label:type_name -> bilibili.app.viewunite.common.Label
	3,   // 30: bilibili.app.viewunite.common.Honor.type:type_name -> bilibili.app.viewunite.common.HonorType
	2,   // 31: bilibili.app.viewunite.common.Honor.honor_jump_type:type_name -> bilibili.app.viewunite.common.HonorJumpType
	127, // 32: bilibili.app.viewunite.common.Honor.report:type_name -> bilibili.app.viewunite.common.Honor.ReportEntry
	42,  // 33: bilibili.app.viewunite.common.Interaction.history_node:type_name -> bilibili.app.viewunite.common.HistoryNode
	4,   // 34: bilibili.app.viewunite.common.KingPos.type:type_name -> bilibili.app.viewunite.common.KingPositionType
	51,  // 35: bilibili.app.viewunite.common.KingPos.like:type_name -> bilibili.app.viewunite.common.LikeExtend
	32,  // 36: bilibili.app.viewunite.common.KingPos.coin:type_name -> bilibili.app.viewunite.common.CoinExtend
	47,  // 37: bilibili.app.viewunite.common.KingPosition.king_pos:type_name -> bilibili.app.viewunite.common.KingPos
	47,  // 38: bilibili.app.viewunite.common.KingPosition.extenf:type_name -> bilibili.app.viewunite.common.KingPos
	111, // 39: bilibili.app.viewunite.common.LikeExtend.triple_like:type_name -> bilibili.app.viewunite.common.UpLikeImg
	66,  // 40: bilibili.app.viewunite.common.LikeExtend.player_animation:type_name -> bilibili.app.viewunite.common.PlayerAnimation
	15,  // 41: bilibili.app.viewunite.common.LikeExtend.resource:type_name -> bilibili.app.viewunite.common.ActivityResource
	5,   // 42: bilibili.app.viewunite.common.Module.type:type_name -> bilibili.app.viewunite.common.ModuleType
	59,  // 43: bilibili.app.viewunite.common.Module.ogv_introduction:type_name -> bilibili.app.viewunite.common.OgvIntroduction
	107, // 44: bilibili.app.viewunite.common.Module.ugc_introduction:type_name -> bilibili.app.viewunite.common.UgcIntroduction
	48,  // 45: bilibili.app.viewunite.common.Module.king_position:type_name -> bilibili.app.viewunite.common.KingPosition
	41,  // 46: bilibili.app.viewunite.common.Module.head_line:type_name -> bilibili.app.viewunite.common.Headline
	62,  // 47: bilibili.app.viewunite.common.Module.ogv_title:type_name -> bilibili.app.viewunite.common.OgvTitle
	43,  // 48: bilibili.app.viewunite.common.Module.honor:type_name -> bilibili.app.viewunite.common.Honor
	114, // 49: bilibili.app.viewunite.common.Module.list:type_name -> bilibili.app.viewunite.common.UserList
	98,  // 50: bilibili.app.viewunite.common.Module.staffs:type_name -> bilibili.app.viewunite.common.Staffs
	14,  // 51: bilibili.app.viewunite.common.Module.activity_reserve:type_name -> bilibili.app.viewunite.common.ActivityReserve
	53,  // 52: bilibili.app.viewunite.common.Module.live_order:type_name -> bilibili.app.viewunite.common.LiveOrder
	92,  // 53: bilibili.app.viewunite.common.Module.section_data:type_name -> bilibili.app.viewunite.common.SectionData
	35,  // 54: bilibili.app.viewunite.common.Module.delivery_data:type_name -> bilibili.app.viewunite.common.DeliveryData
	40,  // 55: bilibili.app.viewunite.common.Module.follow_layer:type_name -> bilibili.app.viewunite.common.FollowLayer
	61,  // 56: bilibili.app.viewunite.common.Module.ogv_seasons:type_name -> bilibili.app.viewunite.common.OgvSeasons
	109, // 57: bilibili.app.viewunite.common.Module.ugc_season:type_name -> bilibili.app.viewunite.common.UgcSeasons
	60,  // 58: bilibili.app.viewunite.common.Module.ogv_live_reserve:type_name -> bilibili.app.viewunite.common.OgvLiveReserve
	33,  // 59: bilibili.app.viewunite.common.Module.combination_ep:type_name -> bilibili.app.viewunite.common.CombinationEp
	95,  // 60: bilibili.app.viewunite.common.Module.sponsor:type_name -> bilibili.app.viewunite.common.Sponsor
	13,  // 61: bilibili.app.viewunite.common.Module.activity_entrance_module:type_name -> bilibili.app.viewunite.common.ActivityEntranceModule
	93,  // 62: bilibili.app.viewunite.common.Module.serial_season:type_name -> bilibili.app.viewunite.common.SerialSeason
	85,  // 63: bilibili.app.viewunite.common.Module.relates:type_name -> bilibili.app.viewunite.common.Relates
	23,  // 64: bilibili.app.viewunite.common.Module.banner:type_name -> bilibili.app.viewunite.common.Banner
	20,  // 65: bilibili.app.viewunite.common.Module.audio:type_name -> bilibili.app.viewunite.common.Audio
	50,  // 66: bilibili.app.viewunite.common.Module.like_comment:type_name -> bilibili.app.viewunite.common.LikeComment
	19,  // 67: bilibili.app.viewunite.common.Module.attention_recommend:type_name -> bilibili.app.viewunite.common.AttentionRecommend
	34,  // 68: bilibili.app.viewunite.common.Module.covenanter:type_name -> bilibili.app.viewunite.common.Covenanter
	100, // 69: bilibili.app.viewunite.common.OgvIntroduction.play_data:type_name -> bilibili.app.viewunite.common.StatInfo
	128, // 70: bilibili.app.viewunite.common.OgvLiveReserve.report:type_name -> bilibili.app.viewunite.common.OgvLiveReserve.ReportEntry
	93,  // 71: bilibili.app.viewunite.common.OgvSeasons.serial_season:type_name -> bilibili.app.viewunite.common.SerialSeason
	10,  // 72: bilibili.app.viewunite.common.OgvSeasons.style:type_name -> bilibili.app.viewunite.common.SerialSeasonCoverStyle
	22,  // 73: bilibili.app.viewunite.common.OgvTitle.badge_info:type_name -> bilibili.app.viewunite.common.BadgeInfo
	105, // 74: bilibili.app.viewunite.common.OgvTitle.title_delivery_button:type_name -> bilibili.app.viewunite.common.TitleDeliveryButton
	136, // 75: bilibili.app.viewunite.common.Owner.avatar:type_name -> bilibili.dagw.component.avatar.v1.AvatarItem
	118, // 76: bilibili.app.viewunite.common.Owner.vip:type_name -> bilibili.app.viewunite.common.Vip
	58,  // 77: bilibili.app.viewunite.common.Owner.official_verify:type_name -> bilibili.app.viewunite.common.OfficialVerify
	52,  // 78: bilibili.app.viewunite.common.Owner.live:type_name -> bilibili.app.viewunite.common.Live
	38,  // 79: bilibili.app.viewunite.common.Page.dimension:type_name -> bilibili.app.viewunite.common.Dimension
	38,  // 80: bilibili.app.viewunite.common.RelateAVCard.dimension:type_name -> bilibili.app.viewunite.common.Dimension
	99,  // 81: bilibili.app.viewunite.common.RelateAVCard.stat:type_name -> bilibili.app.viewunite.common.Stat
	22,  // 82: bilibili.app.viewunite.common.RelateAVCard.rcmd_reason:type_name -> bilibili.app.viewunite.common.BadgeInfo
	22,  // 83: bilibili.app.viewunite.common.RelateBangumiAvCard.badge:type_name -> bilibili.app.viewunite.common.BadgeInfo
	99,  // 84: bilibili.app.viewunite.common.RelateBangumiAvCard.stat:type_name -> bilibili.app.viewunite.common.Stat
	71,  // 85: bilibili.app.viewunite.common.RelateBangumiAvCard.rating:type_name -> bilibili.app.viewunite.common.Rating
	57,  // 86: bilibili.app.viewunite.common.RelateBangumiCard.new_ep:type_name -> bilibili.app.viewunite.common.NewEp
	99,  // 87: bilibili.app.viewunite.common.RelateBangumiCard.stat:type_name -> bilibili.app.viewunite.common.Stat
	71,  // 88: bilibili.app.viewunite.common.RelateBangumiCard.rating:type_name -> bilibili.app.viewunite.common.Rating
	22,  // 89: bilibili.app.viewunite.common.RelateBangumiCard.badge_info:type_name -> bilibili.app.viewunite.common.BadgeInfo
	129, // 90: bilibili.app.viewunite.common.RelateBangumiCard.report:type_name -> bilibili.app.viewunite.common.RelateBangumiCard.ReportEntry
	130, // 91: bilibili.app.viewunite.common.RelateBangumiResourceCard.report:type_name -> bilibili.app.viewunite.common.RelateBangumiResourceCard.ReportEntry
	22,  // 92: bilibili.app.viewunite.common.RelateBangumiUgcCard.badge:type_name -> bilibili.app.viewunite.common.BadgeInfo
	99,  // 93: bilibili.app.viewunite.common.RelateBangumiUgcCard.stat:type_name -> bilibili.app.viewunite.common.Stat
	71,  // 94: bilibili.app.viewunite.common.RelateBangumiUgcCard.rating:type_name -> bilibili.app.viewunite.common.Rating
	7,   // 95: bilibili.app.viewunite.common.RelateCard.relate_card_type:type_name -> bilibili.app.viewunite.common.RelateCardType
	72,  // 96: bilibili.app.viewunite.common.RelateCard.av:type_name -> bilibili.app.viewunite.common.RelateAVCard
	74,  // 97: bilibili.app.viewunite.common.RelateCard.bangumi:type_name -> bilibili.app.viewunite.common.RelateBangumiCard
	75,  // 98: bilibili.app.viewunite.common.RelateCard.resource:type_name -> bilibili.app.viewunite.common.RelateBangumiResourceCard
	82,  // 99: bilibili.app.viewunite.common.RelateCard.game:type_name -> bilibili.app.viewunite.common.RelateGameCard
	78,  // 100: bilibili.app.viewunite.common.RelateCard.cm:type_name -> bilibili.app.viewunite.common.RelateCMCard
	84,  // 101: bilibili.app.viewunite.common.RelateCard.live:type_name -> bilibili.app.viewunite.common.RelateLiveCard
	73,  // 102: bilibili.app.viewunite.common.RelateCard.bangumi_av:type_name -> bilibili.app.viewunite.common.RelateBangumiAvCard
	80,  // 103: bilibili.app.viewunite.common.RelateCard.ai_card:type_name -> bilibili.app.viewunite.common.RelatedAICard
	76,  // 104: bilibili.app.viewunite.common.RelateCard.bangumi_ugc:type_name -> bilibili.app.viewunite.common.RelateBangumiUgcCard
	86,  // 105: bilibili.app.viewunite.common.RelateCard.special:type_name -> bilibili.app.viewunite.common.RelateSpecial
	87,  // 106: bilibili.app.viewunite.common.RelateCard.three_point:type_name -> bilibili.app.viewunite.common.RelateThreePoint
	137, // 107: bilibili.app.viewunite.common.RelateCard.cm_stock:type_name -> google.protobuf.Any
	27,  // 108: bilibili.app.viewunite.common.RelateCard.basic_info:type_name -> bilibili.app.viewunite.common.CardBasicInfo
	137, // 109: bilibili.app.viewunite.common.RelateCMCard.source_content:type_name -> google.protobuf.Any
	99,  // 110: bilibili.app.viewunite.common.RelateCMCard.stat:type_name -> bilibili.app.viewunite.common.Stat
	138, // 111: bilibili.app.viewunite.common.RelateConfig.pagination:type_name -> bilibili.pagination.Pagination
	97,  // 112: bilibili.app.viewunite.common.RelatedAICard.up_info:type_name -> bilibili.app.viewunite.common.Staff
	99,  // 113: bilibili.app.viewunite.common.RelatedAICard.stat:type_name -> bilibili.app.viewunite.common.Stat
	131, // 114: bilibili.app.viewunite.common.RelatedAICard.report:type_name -> bilibili.app.viewunite.common.RelatedAICard.ReportEntry
	39,  // 115: bilibili.app.viewunite.common.RelateDislike.dislike_reason:type_name -> bilibili.app.viewunite.common.DislikeReasons
	70,  // 116: bilibili.app.viewunite.common.RelateGameCard.rank_info:type_name -> bilibili.app.viewunite.common.RankInfo
	26,  // 117: bilibili.app.viewunite.common.RelateGameCard.pack_info:type_name -> bilibili.app.viewunite.common.Button
	26,  // 118: bilibili.app.viewunite.common.RelateGameCard.notice:type_name -> bilibili.app.viewunite.common.Button
	68,  // 119: bilibili.app.viewunite.common.RelateGameCard.power_icon_style:type_name -> bilibili.app.viewunite.common.PowerIconStyle
	120, // 120: bilibili.app.viewunite.common.RelateGameCard.wiki_info:type_name -> bilibili.app.viewunite.common.WikiInfo
	22,  // 121: bilibili.app.viewunite.common.RelateGameCard.badge:type_name -> bilibili.app.viewunite.common.BadgeInfo
	77,  // 122: bilibili.app.viewunite.common.Relates.cards:type_name -> bilibili.app.viewunite.common.RelateCard
	79,  // 123: bilibili.app.viewunite.common.Relates.config:type_name -> bilibili.app.viewunite.common.RelateConfig
	22,  // 124: bilibili.app.viewunite.common.RelateSpecial.badge:type_name -> bilibili.app.viewunite.common.BadgeInfo
	22,  // 125: bilibili.app.viewunite.common.RelateSpecial.rcmd_reason:type_name -> bilibili.app.viewunite.common.BadgeInfo
	81,  // 126: bilibili.app.viewunite.common.RelateThreePoint.dislike:type_name -> bilibili.app.viewunite.common.RelateDislike
	81,  // 127: bilibili.app.viewunite.common.RelateThreePoint.feedback:type_name -> bilibili.app.viewunite.common.RelateDislike
	8,   // 128: bilibili.app.viewunite.common.ReserveButton.order_type:type_name -> bilibili.app.viewunite.common.ReserveBizType
	25,  // 129: bilibili.app.viewunite.common.ReserveButton.reserve:type_name -> bilibili.app.viewunite.common.BizReserveActivityParam
	24,  // 130: bilibili.app.viewunite.common.ReserveButton.fav:type_name -> bilibili.app.viewunite.common.BizFavParam
	100, // 131: bilibili.app.viewunite.common.SeasonHead.vt:type_name -> bilibili.app.viewunite.common.StatInfo
	100, // 132: bilibili.app.viewunite.common.SeasonHead.danmaku:type_name -> bilibili.app.viewunite.common.StatInfo
	116, // 133: bilibili.app.viewunite.common.SectionData.episodes:type_name -> bilibili.app.viewunite.common.ViewEpisode
	101, // 134: bilibili.app.viewunite.common.SectionData.module_style:type_name -> bilibili.app.viewunite.common.Style
	93,  // 135: bilibili.app.viewunite.common.SectionData.seasons:type_name -> bilibili.app.viewunite.common.SerialSeason
	26,  // 136: bilibili.app.viewunite.common.SectionData.more_left:type_name -> bilibili.app.viewunite.common.Button
	132, // 137: bilibili.app.viewunite.common.SectionData.report:type_name -> bilibili.app.viewunite.common.SectionData.ReportEntry
	22,  // 138: bilibili.app.viewunite.common.SerialSeason.badge_info:type_name -> bilibili.app.viewunite.common.BadgeInfo
	57,  // 139: bilibili.app.viewunite.common.SerialSeason.new_ep:type_name -> bilibili.app.viewunite.common.NewEp
	96,  // 140: bilibili.app.viewunite.common.Sponsor.rank_list:type_name -> bilibili.app.viewunite.common.SponsorRank
	54,  // 141: bilibili.app.viewunite.common.Sponsor.mine:type_name -> bilibili.app.viewunite.common.Mine
	67,  // 142: bilibili.app.viewunite.common.Sponsor.point_activity:type_name -> bilibili.app.viewunite.common.PointActivity
	65,  // 143: bilibili.app.viewunite.common.Sponsor.pendants:type_name -> bilibili.app.viewunite.common.Pendant
	104, // 144: bilibili.app.viewunite.common.Sponsor.threshold:type_name -> bilibili.app.viewunite.common.Threshold
	118, // 145: bilibili.app.viewunite.common.SponsorRank.vip:type_name -> bilibili.app.viewunite.common.Vip
	58,  // 146: bilibili.app.viewunite.common.Staff.official:type_name -> bilibili.app.viewunite.common.OfficialVerify
	118, // 147: bilibili.app.viewunite.common.Staff.vip:type_name -> bilibili.app.viewunite.common.Vip
	97,  // 148: bilibili.app.viewunite.common.Staffs.staff:type_name -> bilibili.app.viewunite.common.Staff
	100, // 149: bilibili.app.viewunite.common.Stat.vt:type_name -> bilibili.app.viewunite.common.StatInfo
	100, // 150: bilibili.app.viewunite.common.Stat.danmaku:type_name -> bilibili.app.viewunite.common.StatInfo
	133, // 151: bilibili.app.viewunite.common.TheatreHotTopic.report:type_name -> bilibili.app.viewunite.common.TheatreHotTopic.ReportEntry
	134, // 152: bilibili.app.viewunite.common.TitleDeliveryButton.report:type_name -> bilibili.app.viewunite.common.TitleDeliveryButton.ReportEntry
	64,  // 153: bilibili.app.viewunite.common.UgcEpisode.page:type_name -> bilibili.app.viewunite.common.Page
	100, // 154: bilibili.app.viewunite.common.UgcEpisode.vt:type_name -> bilibili.app.viewunite.common.StatInfo
	100, // 155: bilibili.app.viewunite.common.UgcEpisode.danmaku:type_name -> bilibili.app.viewunite.common.StatInfo
	102, // 156: bilibili.app.viewunite.common.UgcIntroduction.tags:type_name -> bilibili.app.viewunite.common.Tag
	71,  // 157: bilibili.app.viewunite.common.UgcIntroduction.rating:type_name -> bilibili.app.viewunite.common.Rating
	69,  // 158: bilibili.app.viewunite.common.UgcIntroduction.rank:type_name -> bilibili.app.viewunite.common.Rank
	117, // 159: bilibili.app.viewunite.common.UgcIntroduction.bgm:type_name -> bilibili.app.viewunite.common.ViewMaterial
	117, // 160: bilibili.app.viewunite.common.UgcIntroduction.sticker:type_name -> bilibili.app.viewunite.common.ViewMaterial
	117, // 161: bilibili.app.viewunite.common.UgcIntroduction.video_source:type_name -> bilibili.app.viewunite.common.ViewMaterial
	37,  // 162: bilibili.app.viewunite.common.UgcIntroduction.desc:type_name -> bilibili.app.viewunite.common.DescV2
	113, // 163: bilibili.app.viewunite.common.UgcSeasonActivity.user_activity:type_name -> bilibili.app.viewunite.common.UserActivity
	91,  // 164: bilibili.app.viewunite.common.UgcSeasonActivity.season_show:type_name -> bilibili.app.viewunite.common.SeasonShow
	110, // 165: bilibili.app.viewunite.common.UgcSeasons.section:type_name -> bilibili.app.viewunite.common.UgcSection
	90,  // 166: bilibili.app.viewunite.common.UgcSeasons.head:type_name -> bilibili.app.viewunite.common.SeasonHead
	108, // 167: bilibili.app.viewunite.common.UgcSeasons.activity:type_name -> bilibili.app.viewunite.common.UgcSeasonActivity
	106, // 168: bilibili.app.viewunite.common.UgcSection.episodes:type_name -> bilibili.app.viewunite.common.UgcEpisode
	112, // 169: bilibili.app.viewunite.common.UserList.list:type_name -> bilibili.app.viewunite.common.User
	22,  // 170: bilibili.app.viewunite.common.ViewEpisode.badge_info:type_name -> bilibili.app.viewunite.common.BadgeInfo
	38,  // 171: bilibili.app.viewunite.common.ViewEpisode.dimension:type_name -> bilibili.app.viewunite.common.Dimension
	89,  // 172: bilibili.app.viewunite.common.ViewEpisode.rights:type_name -> bilibili.app.viewunite.common.Rights
	45,  // 173: bilibili.app.viewunite.common.ViewEpisode.interaction:type_name -> bilibili.app.viewunite.common.Interaction
	97,  // 174: bilibili.app.viewunite.common.ViewEpisode.up_infos:type_name -> bilibili.app.viewunite.common.Staff
	97,  // 175: bilibili.app.viewunite.common.ViewEpisode.up_info:type_name -> bilibili.app.viewunite.common.Staff
	56,  // 176: bilibili.app.viewunite.common.ViewEpisode.multi_view_eps:type_name -> bilibili.app.viewunite.common.MultiViewEp
	99,  // 177: bilibili.app.viewunite.common.ViewEpisode.stat_for_unity:type_name -> bilibili.app.viewunite.common.Stat
	135, // 178: bilibili.app.viewunite.common.ViewEpisode.report:type_name -> bilibili.app.viewunite.common.ViewEpisode.ReportEntry
	119, // 179: bilibili.app.viewunite.common.Vip.label:type_name -> bilibili.app.viewunite.common.VipLabel
	21,  // 180: bilibili.app.viewunite.common.Audio.AudioInfoEntry.value:type_name -> bilibili.app.viewunite.common.AudioInfo
	181, // [181:181] is the sub-list for method output_type
	181, // [181:181] is the sub-list for method input_type
	181, // [181:181] is the sub-list for extension type_name
	181, // [181:181] is the sub-list for extension extendee
	0,   // [0:181] is the sub-list for field type_name
}

func init() { file_bilibili_app_viewunite_common_proto_init() }
func file_bilibili_app_viewunite_common_proto_init() {
	if File_bilibili_app_viewunite_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_app_viewunite_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityEntrance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityEntranceModule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityReserve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityTab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggEpCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggEps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttentionRecommend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Audio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadgeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Banner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BizFavParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BizReserveActivityParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Button); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Celebrity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Characters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombinationEp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Covenanter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Desc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DislikeReasons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FollowLayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Headline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Honor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IconFont); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KingPos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KingPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Label); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Live); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiViewEp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewEp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfficialVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvIntroduction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvLiveReserve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvSeasons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OgvTitle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Owner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pendant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerAnimation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PointActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PowerIconStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateAVCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateBangumiAvCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateBangumiCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateBangumiResourceCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateBangumiUgcCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateCMCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelatedAICard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateDislike); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateGameCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateLiveCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Relates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateSpecial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelateThreePoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rights); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonHead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SeasonShow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerialSeason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkipRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sponsor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SponsorRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Staffs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Style); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TheatreHotTopic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Threshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TitleDeliveryButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcEpisode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcIntroduction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcSeasonActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcSeasons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpLikeImg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActivity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewEpisode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewMaterial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_app_viewunite_common_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WikiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bilibili_app_viewunite_common_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*DeliveryData_Activity)(nil),
		(*DeliveryData_Characters)(nil),
		(*DeliveryData_TheatreHotTopic)(nil),
		(*DeliveryData_AggEps)(nil),
	}
	file_bilibili_app_viewunite_common_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*KingPos_Like)(nil),
		(*KingPos_Coin)(nil),
	}
	file_bilibili_app_viewunite_common_proto_msgTypes[44].OneofWrappers = []interface{}{
		(*Module_OgvIntroduction)(nil),
		(*Module_UgcIntroduction)(nil),
		(*Module_KingPosition)(nil),
		(*Module_HeadLine)(nil),
		(*Module_OgvTitle)(nil),
		(*Module_Honor)(nil),
		(*Module_List)(nil),
		(*Module_Staffs)(nil),
		(*Module_ActivityReserve)(nil),
		(*Module_LiveOrder)(nil),
		(*Module_SectionData)(nil),
		(*Module_DeliveryData)(nil),
		(*Module_FollowLayer)(nil),
		(*Module_OgvSeasons)(nil),
		(*Module_UgcSeason)(nil),
		(*Module_OgvLiveReserve)(nil),
		(*Module_CombinationEp)(nil),
		(*Module_Sponsor)(nil),
		(*Module_ActivityEntranceModule)(nil),
		(*Module_SerialSeason)(nil),
		(*Module_Relates)(nil),
		(*Module_Banner)(nil),
		(*Module_Audio)(nil),
		(*Module_LikeComment)(nil),
		(*Module_AttentionRecommend)(nil),
		(*Module_Covenanter)(nil),
	}
	file_bilibili_app_viewunite_common_proto_msgTypes[66].OneofWrappers = []interface{}{
		(*RelateCard_Av)(nil),
		(*RelateCard_Bangumi)(nil),
		(*RelateCard_Resource)(nil),
		(*RelateCard_Game)(nil),
		(*RelateCard_Cm)(nil),
		(*RelateCard_Live)(nil),
		(*RelateCard_BangumiAv)(nil),
		(*RelateCard_AiCard)(nil),
		(*RelateCard_BangumiUgc)(nil),
		(*RelateCard_Special)(nil),
	}
	file_bilibili_app_viewunite_common_proto_msgTypes[77].OneofWrappers = []interface{}{
		(*ReserveButton_Reserve)(nil),
		(*ReserveButton_Fav)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_app_viewunite_common_proto_rawDesc,
			NumEnums:      11,
			NumMessages:   125,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bilibili_app_viewunite_common_proto_goTypes,
		DependencyIndexes: file_bilibili_app_viewunite_common_proto_depIdxs,
		EnumInfos:         file_bilibili_app_viewunite_common_proto_enumTypes,
		MessageInfos:      file_bilibili_app_viewunite_common_proto_msgTypes,
	}.Build()
	File_bilibili_app_viewunite_common_proto = out.File
	file_bilibili_app_viewunite_common_proto_rawDesc = nil
	file_bilibili_app_viewunite_common_proto_goTypes = nil
	file_bilibili_app_viewunite_common_proto_depIdxs = nil
}
