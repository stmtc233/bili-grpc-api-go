// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: bilibili/dynamic/interfaces/feed/v1/api.proto

package v1

import (
	common "github.com/stmtc233/bili-grpc-api-go/bilibili/dynamic/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConfigABEntry int32

const (
	ConfigABEntry_CONFIG_AB_ENTRY_NONE             ConfigABEntry = 0
	ConfigABEntry_CONFIG_AB_ENTRY_PUB_PAGE_TITLE   ConfigABEntry = 1
	ConfigABEntry_CONFIG_AB_ENTRY_SELECT_PIC_PANEL ConfigABEntry = 2
)

// Enum value maps for ConfigABEntry.
var (
	ConfigABEntry_name = map[int32]string{
		0: "CONFIG_AB_ENTRY_NONE",
		1: "CONFIG_AB_ENTRY_PUB_PAGE_TITLE",
		2: "CONFIG_AB_ENTRY_SELECT_PIC_PANEL",
	}
	ConfigABEntry_value = map[string]int32{
		"CONFIG_AB_ENTRY_NONE":             0,
		"CONFIG_AB_ENTRY_PUB_PAGE_TITLE":   1,
		"CONFIG_AB_ENTRY_SELECT_PIC_PANEL": 2,
	}
)

func (x ConfigABEntry) Enum() *ConfigABEntry {
	p := new(ConfigABEntry)
	*p = x
	return p
}

func (x ConfigABEntry) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigABEntry) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[0].Descriptor()
}

func (ConfigABEntry) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[0]
}

func (x ConfigABEntry) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigABEntry.Descriptor instead.
func (ConfigABEntry) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{0}
}

type DynamicButtonClickBizType int32

const (
	DynamicButtonClickBizType_DYNAMIC_BUTTON_CLICK_BIZ_TYPE_NONE   DynamicButtonClickBizType = 0 //
	DynamicButtonClickBizType_DYNAMIC_BUTTON_CLICK_BIZ_TYPE_LIVE   DynamicButtonClickBizType = 1 //
	DynamicButtonClickBizType_DYNAMIC_BUTTON_CLICK_BIZ_TYPE_DYN_UP DynamicButtonClickBizType = 2 //
)

// Enum value maps for DynamicButtonClickBizType.
var (
	DynamicButtonClickBizType_name = map[int32]string{
		0: "DYNAMIC_BUTTON_CLICK_BIZ_TYPE_NONE",
		1: "DYNAMIC_BUTTON_CLICK_BIZ_TYPE_LIVE",
		2: "DYNAMIC_BUTTON_CLICK_BIZ_TYPE_DYN_UP",
	}
	DynamicButtonClickBizType_value = map[string]int32{
		"DYNAMIC_BUTTON_CLICK_BIZ_TYPE_NONE":   0,
		"DYNAMIC_BUTTON_CLICK_BIZ_TYPE_LIVE":   1,
		"DYNAMIC_BUTTON_CLICK_BIZ_TYPE_DYN_UP": 2,
	}
)

func (x DynamicButtonClickBizType) Enum() *DynamicButtonClickBizType {
	p := new(DynamicButtonClickBizType)
	*p = x
	return p
}

func (x DynamicButtonClickBizType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DynamicButtonClickBizType) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[1].Descriptor()
}

func (DynamicButtonClickBizType) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[1]
}

func (x DynamicButtonClickBizType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DynamicButtonClickBizType.Descriptor instead.
func (DynamicButtonClickBizType) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{1}
}

type POI_TYPE int32

const (
	POI_TYPE_TENCENT POI_TYPE = 0
	POI_TYPE_CITY    POI_TYPE = 1
	POI_TYPE_NATION  POI_TYPE = 2
	POI_TYPE_BILI    POI_TYPE = 3
)

// Enum value maps for POI_TYPE.
var (
	POI_TYPE_name = map[int32]string{
		0: "TENCENT",
		1: "CITY",
		2: "NATION",
		3: "BILI",
	}
	POI_TYPE_value = map[string]int32{
		"TENCENT": 0,
		"CITY":    1,
		"NATION":  2,
		"BILI":    3,
	}
)

func (x POI_TYPE) Enum() *POI_TYPE {
	p := new(POI_TYPE)
	*p = x
	return p
}

func (x POI_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (POI_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[2].Descriptor()
}

func (POI_TYPE) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[2]
}

func (x POI_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use POI_TYPE.Descriptor instead.
func (POI_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{2}
}

type ReserveButtonMode int32

const (
	ReserveButtonMode_RESERVE_BUTTON_MODE_NONE      ReserveButtonMode = 0 //
	ReserveButtonMode_RESERVE_BUTTON_MODE_RESERVE   ReserveButtonMode = 1 //
	ReserveButtonMode_RESERVE_BUTTON_MODE_UP_CANCEL ReserveButtonMode = 2 //
)

// Enum value maps for ReserveButtonMode.
var (
	ReserveButtonMode_name = map[int32]string{
		0: "RESERVE_BUTTON_MODE_NONE",
		1: "RESERVE_BUTTON_MODE_RESERVE",
		2: "RESERVE_BUTTON_MODE_UP_CANCEL",
	}
	ReserveButtonMode_value = map[string]int32{
		"RESERVE_BUTTON_MODE_NONE":      0,
		"RESERVE_BUTTON_MODE_RESERVE":   1,
		"RESERVE_BUTTON_MODE_UP_CANCEL": 2,
	}
)

func (x ReserveButtonMode) Enum() *ReserveButtonMode {
	p := new(ReserveButtonMode)
	*p = x
	return p
}

func (x ReserveButtonMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReserveButtonMode) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[3].Descriptor()
}

func (ReserveButtonMode) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[3]
}

func (x ReserveButtonMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReserveButtonMode.Descriptor instead.
func (ReserveButtonMode) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{3}
}

type ReserveButtonStatus int32

const (
	ReserveButtonStatus_RESERVE_BUTTON_STATUS_NONE    ReserveButtonStatus = 0 //
	ReserveButtonStatus_RESERVE_BUTTON_STATUS_UNCHECK ReserveButtonStatus = 1 //
	ReserveButtonStatus_RESERVE_BUTTON_STATUS_CHECK   ReserveButtonStatus = 2 //
)

// Enum value maps for ReserveButtonStatus.
var (
	ReserveButtonStatus_name = map[int32]string{
		0: "RESERVE_BUTTON_STATUS_NONE",
		1: "RESERVE_BUTTON_STATUS_UNCHECK",
		2: "RESERVE_BUTTON_STATUS_CHECK",
	}
	ReserveButtonStatus_value = map[string]int32{
		"RESERVE_BUTTON_STATUS_NONE":    0,
		"RESERVE_BUTTON_STATUS_UNCHECK": 1,
		"RESERVE_BUTTON_STATUS_CHECK":   2,
	}
)

func (x ReserveButtonStatus) Enum() *ReserveButtonStatus {
	p := new(ReserveButtonStatus)
	*p = x
	return p
}

func (x ReserveButtonStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReserveButtonStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[4].Descriptor()
}

func (ReserveButtonStatus) Type() protoreflect.EnumType {
	return &file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes[4]
}

func (x ReserveButtonStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReserveButtonStatus.Descriptor instead.
func (ReserveButtonStatus) EnumDescriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{4}
}

type AddDynamicReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccusedUid int64 `protobuf:"varint,1,opt,name=accused_uid,json=accusedUid,proto3" json:"accused_uid,omitempty"`
	DynamicId string `protobuf:"bytes,2,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	ReasonType int64 `protobuf:"varint,3,opt,name=reason_type,json=reasonType,proto3" json:"reason_type,omitempty"`
	ReasonDesc string `protobuf:"bytes,4,opt,name=reason_desc,json=reasonDesc,proto3" json:"reason_desc,omitempty"`
}

func (x *AddDynamicReportReq) Reset() {
	*x = AddDynamicReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDynamicReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDynamicReportReq) ProtoMessage() {}

func (x *AddDynamicReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDynamicReportReq.ProtoReflect.Descriptor instead.
func (*AddDynamicReportReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *AddDynamicReportReq) GetAccusedUid() int64 {
	if x != nil {
		return x.AccusedUid
	}
	return 0
}

func (x *AddDynamicReportReq) GetDynamicId() string {
	if x != nil {
		return x.DynamicId
	}
	return ""
}

func (x *AddDynamicReportReq) GetReasonType() int64 {
	if x != nil {
		return x.ReasonType
	}
	return 0
}

func (x *AddDynamicReportReq) GetReasonDesc() string {
	if x != nil {
		return x.ReasonDesc
	}
	return ""
}

type AddDynamicReportRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddDynamicReportRsp) Reset() {
	*x = AddDynamicReportRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDynamicReportRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDynamicReportRsp) ProtoMessage() {}

func (x *AddDynamicReportRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDynamicReportRsp.ProtoReflect.Descriptor instead.
func (*AddDynamicReportRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{1}
}

type AdInfoDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nation string `protobuf:"bytes,1,opt,name=nation,proto3" json:"nation,omitempty"`
	Province string `protobuf:"bytes,2,opt,name=province,proto3" json:"province,omitempty"`
	City string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	District string `protobuf:"bytes,4,opt,name=district,proto3" json:"district,omitempty"`
}

func (x *AdInfoDetail) Reset() {
	*x = AdInfoDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdInfoDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdInfoDetail) ProtoMessage() {}

func (x *AdInfoDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdInfoDetail.ProtoReflect.Descriptor instead.
func (*AdInfoDetail) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{2}
}

func (x *AdInfoDetail) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *AdInfoDetail) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *AdInfoDetail) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *AdInfoDetail) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

type AttachCardButtonReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurBtnStatus int32 `protobuf:"varint,1,opt,name=cur_btn_status,json=curBtnStatus,proto3" json:"cur_btn_status,omitempty"`
	DynamicId int64 `protobuf:"varint,2,opt,name=dynamic_id,json=dynamicId,proto3" json:"dynamic_id,omitempty"`
	AttachCardType common.AttachCardType `protobuf:"varint,3,opt,name=attach_card_type,json=attachCardType,proto3,enum=bilibili.dynamic.common.AttachCardType" json:"attach_card_type,omitempty"`
	SpmId string `protobuf:"bytes,4,opt,name=spm_id,json=spmId,proto3" json:"spm_id,omitempty"`
	ReserveTotal int64 `protobuf:"varint,5,opt,name=reserve_total,json=reserveTotal,proto3" json:"reserve_total,omitempty"`
	DynamicIdStr string `protobuf:"bytes,6,opt,name=dynamic_id_str,json=dynamicIdStr,proto3" json:"dynamic_id_str,omitempty"`
	CardType string `protobuf:"bytes,7,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
}

func (x *AttachCardButtonReq) Reset() {
	*x = AttachCardButtonReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachCardButtonReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachCardButtonReq) ProtoMessage() {}

func (x *AttachCardButtonReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachCardButtonReq.ProtoReflect.Descriptor instead.
func (*AttachCardButtonReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *AttachCardButtonReq) GetCurBtnStatus() int32 {
	if x != nil {
		return x.CurBtnStatus
	}
	return 0
}

func (x *AttachCardButtonReq) GetDynamicId() int64 {
	if x != nil {
		return x.DynamicId
	}
	return 0
}

func (x *AttachCardButtonReq) GetAttachCardType() common.AttachCardType {
	if x != nil {
		return x.AttachCardType
	}
	return common.AttachCardType(0)
}

func (x *AttachCardButtonReq) GetSpmId() string {
	if x != nil {
		return x.SpmId
	}
	return ""
}

func (x *AttachCardButtonReq) GetReserveTotal() int64 {
	if x != nil {
		return x.ReserveTotal
	}
	return 0
}

func (x *AttachCardButtonReq) GetDynamicIdStr() string {
	if x != nil {
		return x.DynamicIdStr
	}
	return ""
}

func (x *AttachCardButtonReq) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

type AttachCardButtonRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinalBtnStatus int32 `protobuf:"varint,1,opt,name=final_btn_status,json=finalBtnStatus,proto3" json:"final_btn_status,omitempty"`
	Toast string `protobuf:"bytes,2,opt,name=toast,proto3" json:"toast,omitempty"`
	DescUpdate string `protobuf:"bytes,3,opt,name=desc_update,json=descUpdate,proto3" json:"desc_update,omitempty"`
	ReserveUpdate int64 `protobuf:"varint,4,opt,name=reserve_update,json=reserveUpdate,proto3" json:"reserve_update,omitempty"`
}

func (x *AttachCardButtonRsp) Reset() {
	*x = AttachCardButtonRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachCardButtonRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachCardButtonRsp) ProtoMessage() {}

func (x *AttachCardButtonRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachCardButtonRsp.ProtoReflect.Descriptor instead.
func (*AttachCardButtonRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{4}
}

func (x *AttachCardButtonRsp) GetFinalBtnStatus() int32 {
	if x != nil {
		return x.FinalBtnStatus
	}
	return 0
}

func (x *AttachCardButtonRsp) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

func (x *AttachCardButtonRsp) GetDescUpdate() string {
	if x != nil {
		return x.DescUpdate
	}
	return ""
}

func (x *AttachCardButtonRsp) GetReserveUpdate() int64 {
	if x != nil {
		return x.ReserveUpdate
	}
	return 0
}

type ConfigAB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry ConfigABEntry `protobuf:"varint,1,opt,name=entry,proto3,enum=bilibili.dynamic.interfaces.feed.v1.ConfigABEntry" json:"entry,omitempty"`
	Value int64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConfigAB) Reset() {
	*x = ConfigAB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigAB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigAB) ProtoMessage() {}

func (x *ConfigAB) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigAB.ProtoReflect.Descriptor instead.
func (*ConfigAB) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigAB) GetEntry() ConfigABEntry {
	if x != nil {
		return x.Entry
	}
	return ConfigABEntry_CONFIG_AB_ENTRY_NONE
}

func (x *ConfigAB) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigReq) Reset() {
	*x = ConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReq) ProtoMessage() {}

func (x *ConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReq.ProtoReflect.Descriptor instead.
func (*ConfigReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{6}
}

type ConfigRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbEntries []*ConfigAB `protobuf:"bytes,1,rep,name=ab_entries,json=abEntries,proto3" json:"ab_entries,omitempty"`
}

func (x *ConfigRsp) Reset() {
	*x = ConfigRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRsp) ProtoMessage() {}

func (x *ConfigRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRsp.ProtoReflect.Descriptor instead.
func (*ConfigRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigRsp) GetAbEntries() []*ConfigAB {
	if x != nil {
		return x.AbEntries
	}
	return nil
}

// 创建动态-请求
type CreateDynReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户创建接口meta信息
	Meta *common.UserCreateMeta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// 发布的内容
	Content *common.CreateContent `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 发布类型
	Scene common.CreateScene `protobuf:"varint,3,opt,name=scene,proto3,enum=bilibili.dynamic.common.CreateScene" json:"scene,omitempty"`
	// 图片内容
	Pics []*common.CreatePic `protobuf:"bytes,4,rep,name=pics,proto3" json:"pics,omitempty"`
	// 转发源
	RepostSrc *common.DynIdentity `protobuf:"bytes,5,opt,name=repost_src,json=repostSrc,proto3" json:"repost_src,omitempty"`
	// 动态视频
	Video *common.CreateDynVideo `protobuf:"bytes,6,opt,name=video,proto3" json:"video,omitempty"`
	// 通用模板类型：2048方图 2049竖图 其他值无效
	SketchType int64 `protobuf:"varint,7,opt,name=sketch_type,json=sketchType,proto3" json:"sketch_type,omitempty"`
	// 通用模板的元内容（网页内容）
	Sketch *common.Sketch `protobuf:"bytes,8,opt,name=sketch,proto3" json:"sketch,omitempty"`
	// 小程序的内容
	Program *common.Program `protobuf:"bytes,9,opt,name=program,proto3" json:"program,omitempty"`
	// 动态附加小卡
	DynTag *common.CreateTag `protobuf:"bytes,10,opt,name=dyn_tag,json=dynTag,proto3" json:"dyn_tag,omitempty"`
	// 动态附加大卡
	AttachCard *common.CreateAttachCard `protobuf:"bytes,11,opt,name=attach_card,json=attachCard,proto3" json:"attach_card,omitempty"`
	// 特殊的创建选项
	Option *common.CreateOption `protobuf:"bytes,12,opt,name=option,proto3" json:"option,omitempty"`
	Topic *common.CreateTopic `protobuf:"bytes,13,opt,name=topic,proto3" json:"topic,omitempty"`
	UploadId string `protobuf:"bytes,14,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
}

func (x *CreateDynReq) Reset() {
	*x = CreateDynReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDynReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDynReq) ProtoMessage() {}

func (x *CreateDynReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDynReq.ProtoReflect.Descriptor instead.
func (*CreateDynReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{8}
}

func (x *CreateDynReq) GetMeta() *common.UserCreateMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *CreateDynReq) GetContent() *common.CreateContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CreateDynReq) GetScene() common.CreateScene {
	if x != nil {
		return x.Scene
	}
	return common.CreateScene(0)
}

func (x *CreateDynReq) GetPics() []*common.CreatePic {
	if x != nil {
		return x.Pics
	}
	return nil
}

func (x *CreateDynReq) GetRepostSrc() *common.DynIdentity {
	if x != nil {
		return x.RepostSrc
	}
	return nil
}

func (x *CreateDynReq) GetVideo() *common.CreateDynVideo {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *CreateDynReq) GetSketchType() int64 {
	if x != nil {
		return x.SketchType
	}
	return 0
}

func (x *CreateDynReq) GetSketch() *common.Sketch {
	if x != nil {
		return x.Sketch
	}
	return nil
}

func (x *CreateDynReq) GetProgram() *common.Program {
	if x != nil {
		return x.Program
	}
	return nil
}

func (x *CreateDynReq) GetDynTag() *common.CreateTag {
	if x != nil {
		return x.DynTag
	}
	return nil
}

func (x *CreateDynReq) GetAttachCard() *common.CreateAttachCard {
	if x != nil {
		return x.AttachCard
	}
	return nil
}

func (x *CreateDynReq) GetOption() *common.CreateOption {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *CreateDynReq) GetTopic() *common.CreateTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *CreateDynReq) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type CreateInitCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scene common.CreateInitCheckScene `protobuf:"varint,1,opt,name=scene,proto3,enum=bilibili.dynamic.common.CreateInitCheckScene" json:"scene,omitempty"`
	Meta *common.MetaDataCtrl `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	Repost *common.RepostInitCheck `protobuf:"bytes,3,opt,name=repost,proto3" json:"repost,omitempty"`
}

func (x *CreateInitCheckReq) Reset() {
	*x = CreateInitCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInitCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInitCheckReq) ProtoMessage() {}

func (x *CreateInitCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInitCheckReq.ProtoReflect.Descriptor instead.
func (*CreateInitCheckReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{9}
}

func (x *CreateInitCheckReq) GetScene() common.CreateInitCheckScene {
	if x != nil {
		return x.Scene
	}
	return common.CreateInitCheckScene(0)
}

func (x *CreateInitCheckReq) GetMeta() *common.MetaDataCtrl {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *CreateInitCheckReq) GetRepost() *common.RepostInitCheck {
	if x != nil {
		return x.Repost
	}
	return nil
}

type CreatePageCommercialInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabelText string `protobuf:"bytes,1,opt,name=label_text,json=labelText,proto3" json:"label_text,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *CreatePageCommercialInfo) Reset() {
	*x = CreatePageCommercialInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePageCommercialInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePageCommercialInfo) ProtoMessage() {}

func (x *CreatePageCommercialInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePageCommercialInfo.ProtoReflect.Descriptor instead.
func (*CreatePageCommercialInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePageCommercialInfo) GetLabelText() string {
	if x != nil {
		return x.LabelText
	}
	return ""
}

func (x *CreatePageCommercialInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type CreatePageInfosReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	CommercialEntityType int64 `protobuf:"varint,2,opt,name=commercial_entity_type,json=commercialEntityType,proto3" json:"commercial_entity_type,omitempty"`
	CommercialEntityId int64 `protobuf:"varint,3,opt,name=commercial_entity_id,json=commercialEntityId,proto3" json:"commercial_entity_id,omitempty"`
}

func (x *CreatePageInfosReq) Reset() {
	*x = CreatePageInfosReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePageInfosReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePageInfosReq) ProtoMessage() {}

func (x *CreatePageInfosReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePageInfosReq.ProtoReflect.Descriptor instead.
func (*CreatePageInfosReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePageInfosReq) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *CreatePageInfosReq) GetCommercialEntityType() int64 {
	if x != nil {
		return x.CommercialEntityType
	}
	return 0
}

func (x *CreatePageInfosReq) GetCommercialEntityId() int64 {
	if x != nil {
		return x.CommercialEntityId
	}
	return 0
}

type CreatePageInfosRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *CreatePageTopicInfo `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Commercial *CreatePageCommercialInfo `protobuf:"bytes,2,opt,name=commercial,proto3" json:"commercial,omitempty"`
}

func (x *CreatePageInfosRsp) Reset() {
	*x = CreatePageInfosRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePageInfosRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePageInfosRsp) ProtoMessage() {}

func (x *CreatePageInfosRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePageInfosRsp.ProtoReflect.Descriptor instead.
func (*CreatePageInfosRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{12}
}

func (x *CreatePageInfosRsp) GetTopic() *CreatePageTopicInfo {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *CreatePageInfosRsp) GetCommercial() *CreatePageCommercialInfo {
	if x != nil {
		return x.Commercial
	}
	return nil
}

type CreatePageTopicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicId int64 `protobuf:"varint,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	TopicName string `protobuf:"bytes,2,opt,name=topic_name,json=topicName,proto3" json:"topic_name,omitempty"`
}

func (x *CreatePageTopicInfo) Reset() {
	*x = CreatePageTopicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePageTopicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePageTopicInfo) ProtoMessage() {}

func (x *CreatePageTopicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePageTopicInfo.ProtoReflect.Descriptor instead.
func (*CreatePageTopicInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{13}
}

func (x *CreatePageTopicInfo) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *CreatePageTopicInfo) GetTopicName() string {
	if x != nil {
		return x.TopicName
	}
	return ""
}

type CreatePermissionButtonClickReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type DynamicButtonClickBizType `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickBizType" json:"type,omitempty"`
}

func (x *CreatePermissionButtonClickReq) Reset() {
	*x = CreatePermissionButtonClickReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePermissionButtonClickReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePermissionButtonClickReq) ProtoMessage() {}

func (x *CreatePermissionButtonClickReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePermissionButtonClickReq.ProtoReflect.Descriptor instead.
func (*CreatePermissionButtonClickReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{14}
}

func (x *CreatePermissionButtonClickReq) GetType() DynamicButtonClickBizType {
	if x != nil {
		return x.Type
	}
	return DynamicButtonClickBizType_DYNAMIC_BUTTON_CLICK_BIZ_TYPE_NONE
}

type CreatePermissionButtonClickRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePermissionButtonClickRsp) Reset() {
	*x = CreatePermissionButtonClickRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePermissionButtonClickRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePermissionButtonClickRsp) ProtoMessage() {}

func (x *CreatePermissionButtonClickRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePermissionButtonClickRsp.ProtoReflect.Descriptor instead.
func (*CreatePermissionButtonClickRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{15}
}

type CreatePlusButtonClickReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePlusButtonClickReq) Reset() {
	*x = CreatePlusButtonClickReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlusButtonClickReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlusButtonClickReq) ProtoMessage() {}

func (x *CreatePlusButtonClickReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlusButtonClickReq.ProtoReflect.Descriptor instead.
func (*CreatePlusButtonClickReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{16}
}

type CreatePlusButtonClickRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreatePlusButtonClickRsp) Reset() {
	*x = CreatePlusButtonClickRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlusButtonClickRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlusButtonClickRsp) ProtoMessage() {}

func (x *CreatePlusButtonClickRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlusButtonClickRsp.ProtoReflect.Descriptor instead.
func (*CreatePlusButtonClickRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{17}
}

type DynamicButtonClickReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizType []DynamicButtonClickBizType `protobuf:"varint,1,rep,packed,name=biz_type,json=bizType,proto3,enum=bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickBizType" json:"biz_type,omitempty"`
}

func (x *DynamicButtonClickReq) Reset() {
	*x = DynamicButtonClickReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicButtonClickReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicButtonClickReq) ProtoMessage() {}

func (x *DynamicButtonClickReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicButtonClickReq.ProtoReflect.Descriptor instead.
func (*DynamicButtonClickReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{18}
}

func (x *DynamicButtonClickReq) GetBizType() []DynamicButtonClickBizType {
	if x != nil {
		return x.BizType
	}
	return nil
}

type DynamicButtonClickRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DynamicButtonClickRsp) Reset() {
	*x = DynamicButtonClickRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicButtonClickRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicButtonClickRsp) ProtoMessage() {}

func (x *DynamicButtonClickRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicButtonClickRsp.ProtoReflect.Descriptor instead.
func (*DynamicButtonClickRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{19}
}

type DynamicRepostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Content *common.CreateContent `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	RepostSrc *common.DynIdentity `protobuf:"bytes,3,opt,name=repost_src,json=repostSrc,proto3" json:"repost_src,omitempty"`
	Option *common.CreateOption `protobuf:"bytes,4,opt,name=option,proto3" json:"option,omitempty"`
	Topic *common.CreateTopic `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	UploadId string `protobuf:"bytes,6,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
}

func (x *DynamicRepostReq) Reset() {
	*x = DynamicRepostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicRepostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicRepostReq) ProtoMessage() {}

func (x *DynamicRepostReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicRepostReq.ProtoReflect.Descriptor instead.
func (*DynamicRepostReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{20}
}

func (x *DynamicRepostReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DynamicRepostReq) GetContent() *common.CreateContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *DynamicRepostReq) GetRepostSrc() *common.DynIdentity {
	if x != nil {
		return x.RepostSrc
	}
	return nil
}

func (x *DynamicRepostReq) GetOption() *common.CreateOption {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *DynamicRepostReq) GetTopic() *common.CreateTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *DynamicRepostReq) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type DynamicThumbReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	DynId int64 `protobuf:"varint,2,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	Type int64 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Rid int64 `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`
	SpecType int64 `protobuf:"varint,5,opt,name=spec_type,json=specType,proto3" json:"spec_type,omitempty"`
	Up int64 `protobuf:"varint,6,opt,name=up,proto3" json:"up,omitempty"`
	From string `protobuf:"bytes,7,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *DynamicThumbReq) Reset() {
	*x = DynamicThumbReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicThumbReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicThumbReq) ProtoMessage() {}

func (x *DynamicThumbReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicThumbReq.ProtoReflect.Descriptor instead.
func (*DynamicThumbReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{21}
}

func (x *DynamicThumbReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DynamicThumbReq) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *DynamicThumbReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DynamicThumbReq) GetRid() int64 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *DynamicThumbReq) GetSpecType() int64 {
	if x != nil {
		return x.SpecType
	}
	return 0
}

func (x *DynamicThumbReq) GetUp() int64 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *DynamicThumbReq) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

type DynamicThumbRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DynamicThumbRsp) Reset() {
	*x = DynamicThumbRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DynamicThumbRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicThumbRsp) ProtoMessage() {}

func (x *DynamicThumbRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicThumbRsp.ProtoReflect.Descriptor instead.
func (*DynamicThumbRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{22}
}

type EditDynReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynId int64 `protobuf:"varint,1,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	Scene common.CreateScene `protobuf:"varint,2,opt,name=scene,proto3,enum=bilibili.dynamic.common.CreateScene" json:"scene,omitempty"`
	Meta *common.UserCreateMeta `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	Content *common.CreateContent `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Pics []*common.CreatePic `protobuf:"bytes,5,rep,name=pics,proto3" json:"pics,omitempty"`
	RepostSrc *common.DynIdentity `protobuf:"bytes,6,opt,name=repost_src,json=repostSrc,proto3" json:"repost_src,omitempty"`
	DynTag *common.CreateTag `protobuf:"bytes,7,opt,name=dyn_tag,json=dynTag,proto3" json:"dyn_tag,omitempty"`
	AttachCard *common.CreateAttachCard `protobuf:"bytes,8,opt,name=attach_card,json=attachCard,proto3" json:"attach_card,omitempty"`
	Option *common.CreateOption `protobuf:"bytes,9,opt,name=option,proto3" json:"option,omitempty"`
	Topic *common.CreateTopic `protobuf:"bytes,10,opt,name=topic,proto3" json:"topic,omitempty"`
	UploadId string `protobuf:"bytes,11,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
}

func (x *EditDynReq) Reset() {
	*x = EditDynReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDynReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDynReq) ProtoMessage() {}

func (x *EditDynReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDynReq.ProtoReflect.Descriptor instead.
func (*EditDynReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{23}
}

func (x *EditDynReq) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *EditDynReq) GetScene() common.CreateScene {
	if x != nil {
		return x.Scene
	}
	return common.CreateScene(0)
}

func (x *EditDynReq) GetMeta() *common.UserCreateMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *EditDynReq) GetContent() *common.CreateContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *EditDynReq) GetPics() []*common.CreatePic {
	if x != nil {
		return x.Pics
	}
	return nil
}

func (x *EditDynReq) GetRepostSrc() *common.DynIdentity {
	if x != nil {
		return x.RepostSrc
	}
	return nil
}

func (x *EditDynReq) GetDynTag() *common.CreateTag {
	if x != nil {
		return x.DynTag
	}
	return nil
}

func (x *EditDynReq) GetAttachCard() *common.CreateAttachCard {
	if x != nil {
		return x.AttachCard
	}
	return nil
}

func (x *EditDynReq) GetOption() *common.CreateOption {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *EditDynReq) GetTopic() *common.CreateTopic {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *EditDynReq) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

type EditDynRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State int64 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Totast string `protobuf:"bytes,2,opt,name=totast,proto3" json:"totast,omitempty"`
}

func (x *EditDynRsp) Reset() {
	*x = EditDynRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditDynRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditDynRsp) ProtoMessage() {}

func (x *EditDynRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditDynRsp.ProtoReflect.Descriptor instead.
func (*EditDynRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{24}
}

func (x *EditDynRsp) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *EditDynRsp) GetTotast() string {
	if x != nil {
		return x.Totast
	}
	return ""
}

type GetEditDynInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynId int64 `protobuf:"varint,1,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	Scene common.CreateScene `protobuf:"varint,2,opt,name=scene,proto3,enum=bilibili.dynamic.common.CreateScene" json:"scene,omitempty"`
	Meta *common.MetaDataCtrl `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	Repost *common.RepostInitCheck `protobuf:"bytes,4,opt,name=repost,proto3" json:"repost,omitempty"`
}

func (x *GetEditDynInfoReq) Reset() {
	*x = GetEditDynInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEditDynInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditDynInfoReq) ProtoMessage() {}

func (x *GetEditDynInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditDynInfoReq.ProtoReflect.Descriptor instead.
func (*GetEditDynInfoReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{25}
}

func (x *GetEditDynInfoReq) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *GetEditDynInfoReq) GetScene() common.CreateScene {
	if x != nil {
		return x.Scene
	}
	return common.CreateScene(0)
}

func (x *GetEditDynInfoReq) GetMeta() *common.MetaDataCtrl {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetEditDynInfoReq) GetRepost() *common.RepostInitCheck {
	if x != nil {
		return x.Repost
	}
	return nil
}

type GetEditDynInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pics []*common.CreatePic `protobuf:"bytes,1,rep,name=pics,proto3" json:"pics,omitempty"`
	OrigDynId int64 `protobuf:"varint,2,opt,name=orig_dyn_id,json=origDynId,proto3" json:"orig_dyn_id,omitempty"`
	PreDynId int64 `protobuf:"varint,3,opt,name=pre_dyn_id,json=preDynId,proto3" json:"pre_dyn_id,omitempty"`
	TopicInfos []*CreatePageTopicInfo `protobuf:"bytes,4,rep,name=topic_infos,json=topicInfos,proto3" json:"topic_infos,omitempty"`
	AttachCard *common.CreateAttachCard `protobuf:"bytes,5,opt,name=attach_card,json=attachCard,proto3" json:"attach_card,omitempty"`
	Setting *common.PublishSetting `protobuf:"bytes,6,opt,name=setting,proto3" json:"setting,omitempty"`
	Permission *common.UpPermission `protobuf:"bytes,7,opt,name=permission,proto3" json:"permission,omitempty"`
	ShareInfo *common.ShareChannel `protobuf:"bytes,8,opt,name=share_info,json=shareInfo,proto3" json:"share_info,omitempty"`
	YellowBar *common.PublishYellowBar `protobuf:"bytes,9,opt,name=yellow_bar,json=yellowBar,proto3" json:"yellow_bar,omitempty"`
	PlusRedDot *common.PlusRedDot `protobuf:"bytes,10,opt,name=plus_red_dot,json=plusRedDot,proto3" json:"plus_red_dot,omitempty"`
	OnlyFans int64 `protobuf:"varint,11,opt,name=only_fans,json=onlyFans,proto3" json:"only_fans,omitempty"`
	EditAlertMsg string `protobuf:"bytes,12,opt,name=edit_alert_msg,json=editAlertMsg,proto3" json:"edit_alert_msg,omitempty"`
}

func (x *GetEditDynInfoRsp) Reset() {
	*x = GetEditDynInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEditDynInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEditDynInfoRsp) ProtoMessage() {}

func (x *GetEditDynInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEditDynInfoRsp.ProtoReflect.Descriptor instead.
func (*GetEditDynInfoRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{26}
}

func (x *GetEditDynInfoRsp) GetPics() []*common.CreatePic {
	if x != nil {
		return x.Pics
	}
	return nil
}

func (x *GetEditDynInfoRsp) GetOrigDynId() int64 {
	if x != nil {
		return x.OrigDynId
	}
	return 0
}

func (x *GetEditDynInfoRsp) GetPreDynId() int64 {
	if x != nil {
		return x.PreDynId
	}
	return 0
}

func (x *GetEditDynInfoRsp) GetTopicInfos() []*CreatePageTopicInfo {
	if x != nil {
		return x.TopicInfos
	}
	return nil
}

func (x *GetEditDynInfoRsp) GetAttachCard() *common.CreateAttachCard {
	if x != nil {
		return x.AttachCard
	}
	return nil
}

func (x *GetEditDynInfoRsp) GetSetting() *common.PublishSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *GetEditDynInfoRsp) GetPermission() *common.UpPermission {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *GetEditDynInfoRsp) GetShareInfo() *common.ShareChannel {
	if x != nil {
		return x.ShareInfo
	}
	return nil
}

func (x *GetEditDynInfoRsp) GetYellowBar() *common.PublishYellowBar {
	if x != nil {
		return x.YellowBar
	}
	return nil
}

func (x *GetEditDynInfoRsp) GetPlusRedDot() *common.PlusRedDot {
	if x != nil {
		return x.PlusRedDot
	}
	return nil
}

func (x *GetEditDynInfoRsp) GetOnlyFans() int64 {
	if x != nil {
		return x.OnlyFans
	}
	return 0
}

func (x *GetEditDynInfoRsp) GetEditAlertMsg() string {
	if x != nil {
		return x.EditAlertMsg
	}
	return ""
}

type GoodsAttachCardPreviewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIds []int64 `protobuf:"varint,1,rep,packed,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	DynId int64 `protobuf:"varint,2,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	Mid int64 `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	Meta *common.MetaDataCtrl `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GoodsAttachCardPreviewReq) Reset() {
	*x = GoodsAttachCardPreviewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsAttachCardPreviewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsAttachCardPreviewReq) ProtoMessage() {}

func (x *GoodsAttachCardPreviewReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsAttachCardPreviewReq.ProtoReflect.Descriptor instead.
func (*GoodsAttachCardPreviewReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{27}
}

func (x *GoodsAttachCardPreviewReq) GetItemIds() []int64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *GoodsAttachCardPreviewReq) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *GoodsAttachCardPreviewReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GoodsAttachCardPreviewReq) GetMeta() *common.MetaDataCtrl {
	if x != nil {
		return x.Meta
	}
	return nil
}

type GoodsAttachCardPreviewRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods map[int64]*GoodsItem `protobuf:"bytes,1,rep,name=goods,proto3" json:"goods,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GoodsAttachCardPreviewRsp) Reset() {
	*x = GoodsAttachCardPreviewRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsAttachCardPreviewRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsAttachCardPreviewRsp) ProtoMessage() {}

func (x *GoodsAttachCardPreviewRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsAttachCardPreviewRsp.ProtoReflect.Descriptor instead.
func (*GoodsAttachCardPreviewRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{28}
}

func (x *GoodsAttachCardPreviewRsp) GetGoods() map[int64]*GoodsItem {
	if x != nil {
		return x.Goods
	}
	return nil
}

type GoodsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemsId int64 `protobuf:"varint,1,opt,name=items_id,json=itemsId,proto3" json:"items_id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Brief string `protobuf:"bytes,3,opt,name=brief,proto3" json:"brief,omitempty"`
	Img string `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`
	Price float32 `protobuf:"fixed32,5,opt,name=price,proto3" json:"price,omitempty"`
	PriceStr string `protobuf:"bytes,6,opt,name=price_str,json=priceStr,proto3" json:"price_str,omitempty"`
	IconName string `protobuf:"bytes,7,opt,name=icon_name,json=iconName,proto3" json:"icon_name,omitempty"`
	IconUrl string `protobuf:"bytes,8,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	JumpLink string `protobuf:"bytes,9,opt,name=jump_link,json=jumpLink,proto3" json:"jump_link,omitempty"`
	JumpLinkDesc string `protobuf:"bytes,10,opt,name=jump_link_desc,json=jumpLinkDesc,proto3" json:"jump_link_desc,omitempty"`
}

func (x *GoodsItem) Reset() {
	*x = GoodsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsItem) ProtoMessage() {}

func (x *GoodsItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsItem.ProtoReflect.Descriptor instead.
func (*GoodsItem) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{29}
}

func (x *GoodsItem) GetItemsId() int64 {
	if x != nil {
		return x.ItemsId
	}
	return 0
}

func (x *GoodsItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsItem) GetBrief() string {
	if x != nil {
		return x.Brief
	}
	return ""
}

func (x *GoodsItem) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *GoodsItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GoodsItem) GetPriceStr() string {
	if x != nil {
		return x.PriceStr
	}
	return ""
}

func (x *GoodsItem) GetIconName() string {
	if x != nil {
		return x.IconName
	}
	return ""
}

func (x *GoodsItem) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *GoodsItem) GetJumpLink() string {
	if x != nil {
		return x.JumpLink
	}
	return ""
}

func (x *GoodsItem) GetJumpLinkDesc() string {
	if x != nil {
		return x.JumpLinkDesc
	}
	return ""
}

type HomeBubbleReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackId string `protobuf:"bytes,1,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
}

func (x *HomeBubbleReportReq) Reset() {
	*x = HomeBubbleReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBubbleReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBubbleReportReq) ProtoMessage() {}

func (x *HomeBubbleReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBubbleReportReq.ProtoReflect.Descriptor instead.
func (*HomeBubbleReportReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{30}
}

func (x *HomeBubbleReportReq) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

type HomeBubbleReportRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HomeBubbleReportRsp) Reset() {
	*x = HomeBubbleReportRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeBubbleReportRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeBubbleReportRsp) ProtoMessage() {}

func (x *HomeBubbleReportRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeBubbleReportRsp.ProtoReflect.Descriptor instead.
func (*HomeBubbleReportRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{31}
}

type HotSearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HotSearchReq) Reset() {
	*x = HotSearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotSearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotSearchReq) ProtoMessage() {}

func (x *HotSearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotSearchReq.ProtoReflect.Descriptor instead.
func (*HotSearchReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{32}
}

type HotSearchRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*HotSearchRsp_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *HotSearchRsp) Reset() {
	*x = HotSearchRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotSearchRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotSearchRsp) ProtoMessage() {}

func (x *HotSearchRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotSearchRsp.ProtoReflect.Descriptor instead.
func (*HotSearchRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{33}
}

func (x *HotSearchRsp) GetItems() []*HotSearchRsp_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *HotSearchRsp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ICreateGoodsReplySyncReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	GoodsId int64 `protobuf:"varint,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	Content *common.CreateContent `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Scene common.CreateScene `protobuf:"varint,4,opt,name=scene,proto3,enum=bilibili.dynamic.common.CreateScene" json:"scene,omitempty"`
	Pics []*common.CreatePic `protobuf:"bytes,5,rep,name=pics,proto3" json:"pics,omitempty"`
}

func (x *ICreateGoodsReplySyncReq) Reset() {
	*x = ICreateGoodsReplySyncReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ICreateGoodsReplySyncReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ICreateGoodsReplySyncReq) ProtoMessage() {}

func (x *ICreateGoodsReplySyncReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ICreateGoodsReplySyncReq.ProtoReflect.Descriptor instead.
func (*ICreateGoodsReplySyncReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{34}
}

func (x *ICreateGoodsReplySyncReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ICreateGoodsReplySyncReq) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *ICreateGoodsReplySyncReq) GetContent() *common.CreateContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ICreateGoodsReplySyncReq) GetScene() common.CreateScene {
	if x != nil {
		return x.Scene
	}
	return common.CreateScene(0)
}

func (x *ICreateGoodsReplySyncReq) GetPics() []*common.CreatePic {
	if x != nil {
		return x.Pics
	}
	return nil
}

type ICreateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynId int64 `protobuf:"varint,1,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	DynType int64 `protobuf:"varint,2,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
	DynRid int64 `protobuf:"varint,3,opt,name=dyn_rid,json=dynRid,proto3" json:"dyn_rid,omitempty"`
}

func (x *ICreateResp) Reset() {
	*x = ICreateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ICreateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ICreateResp) ProtoMessage() {}

func (x *ICreateResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ICreateResp.ProtoReflect.Descriptor instead.
func (*ICreateResp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{35}
}

func (x *ICreateResp) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *ICreateResp) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

func (x *ICreateResp) GetDynRid() int64 {
	if x != nil {
		return x.DynRid
	}
	return 0
}

type LbsLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *LbsLocation) Reset() {
	*x = LbsLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LbsLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LbsLocation) ProtoMessage() {}

func (x *LbsLocation) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LbsLocation.ProtoReflect.Descriptor instead.
func (*LbsLocation) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{36}
}

func (x *LbsLocation) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *LbsLocation) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type NearbyPoiDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *LbsLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Type POI_TYPE `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.dynamic.interfaces.feed.v1.POI_TYPE" json:"type,omitempty"`
	Poi string `protobuf:"bytes,3,opt,name=poi,proto3" json:"poi,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	ShowTitle string `protobuf:"bytes,6,opt,name=show_title,json=showTitle,proto3" json:"show_title,omitempty"`
	Distance float64 `protobuf:"fixed64,7,opt,name=distance,proto3" json:"distance,omitempty"`
	ShowDistance string `protobuf:"bytes,8,opt,name=show_distance,json=showDistance,proto3" json:"show_distance,omitempty"`
	AdInfo *AdInfoDetail `protobuf:"bytes,9,opt,name=ad_info,json=adInfo,proto3" json:"ad_info,omitempty"`
	Ancestors []*PoiId `protobuf:"bytes,10,rep,name=ancestors,proto3" json:"ancestors,omitempty"`
}

func (x *NearbyPoiDetail) Reset() {
	*x = NearbyPoiDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearbyPoiDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearbyPoiDetail) ProtoMessage() {}

func (x *NearbyPoiDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearbyPoiDetail.ProtoReflect.Descriptor instead.
func (*NearbyPoiDetail) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{37}
}

func (x *NearbyPoiDetail) GetLocation() *LbsLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *NearbyPoiDetail) GetType() POI_TYPE {
	if x != nil {
		return x.Type
	}
	return POI_TYPE_TENCENT
}

func (x *NearbyPoiDetail) GetPoi() string {
	if x != nil {
		return x.Poi
	}
	return ""
}

func (x *NearbyPoiDetail) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NearbyPoiDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NearbyPoiDetail) GetShowTitle() string {
	if x != nil {
		return x.ShowTitle
	}
	return ""
}

func (x *NearbyPoiDetail) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *NearbyPoiDetail) GetShowDistance() string {
	if x != nil {
		return x.ShowDistance
	}
	return ""
}

func (x *NearbyPoiDetail) GetAdInfo() *AdInfoDetail {
	if x != nil {
		return x.AdInfo
	}
	return nil
}

func (x *NearbyPoiDetail) GetAncestors() []*PoiId {
	if x != nil {
		return x.Ancestors
	}
	return nil
}

type NearbyPoiListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoiInfo *NearbyPoiDetail `protobuf:"bytes,1,opt,name=poi_info,json=poiInfo,proto3" json:"poi_info,omitempty"`
	UserCount int32 `protobuf:"varint,2,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
}

func (x *NearbyPoiListItem) Reset() {
	*x = NearbyPoiListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearbyPoiListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearbyPoiListItem) ProtoMessage() {}

func (x *NearbyPoiListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearbyPoiListItem.ProtoReflect.Descriptor instead.
func (*NearbyPoiListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{38}
}

func (x *NearbyPoiListItem) GetPoiInfo() *NearbyPoiDetail {
	if x != nil {
		return x.PoiInfo
	}
	return nil
}

func (x *NearbyPoiListItem) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

type NearbyPoiListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *NearbyPoiListReq) Reset() {
	*x = NearbyPoiListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearbyPoiListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearbyPoiListReq) ProtoMessage() {}

func (x *NearbyPoiListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearbyPoiListReq.ProtoReflect.Descriptor instead.
func (*NearbyPoiListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{39}
}

func (x *NearbyPoiListReq) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *NearbyPoiListReq) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *NearbyPoiListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *NearbyPoiListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type NearbyPoiListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasMore bool `protobuf:"varint,1,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Pois []*NearbyPoiListItem `protobuf:"bytes,2,rep,name=pois,proto3" json:"pois,omitempty"`
}

func (x *NearbyPoiListRsp) Reset() {
	*x = NearbyPoiListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearbyPoiListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearbyPoiListRsp) ProtoMessage() {}

func (x *NearbyPoiListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearbyPoiListRsp.ProtoReflect.Descriptor instead.
func (*NearbyPoiListRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{40}
}

func (x *NearbyPoiListRsp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *NearbyPoiListRsp) GetPois() []*NearbyPoiListItem {
	if x != nil {
		return x.Pois
	}
	return nil
}

type PoiDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *LbsLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	Type POI_TYPE `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.dynamic.interfaces.feed.v1.POI_TYPE" json:"type,omitempty"`
	Poi string `protobuf:"bytes,3,opt,name=poi,proto3" json:"poi,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	ShowTitle string `protobuf:"bytes,6,opt,name=show_title,json=showTitle,proto3" json:"show_title,omitempty"`
	Distance float64 `protobuf:"fixed64,7,opt,name=distance,proto3" json:"distance,omitempty"`
	ShowDistance string `protobuf:"bytes,8,opt,name=show_distance,json=showDistance,proto3" json:"show_distance,omitempty"`
	AdInfo *AdInfoDetail `protobuf:"bytes,9,opt,name=ad_info,json=adInfo,proto3" json:"ad_info,omitempty"`
	Ancestors *PoiId `protobuf:"bytes,10,opt,name=ancestors,proto3" json:"ancestors,omitempty"`
}

func (x *PoiDetail) Reset() {
	*x = PoiDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoiDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoiDetail) ProtoMessage() {}

func (x *PoiDetail) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoiDetail.ProtoReflect.Descriptor instead.
func (*PoiDetail) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{41}
}

func (x *PoiDetail) GetLocation() *LbsLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *PoiDetail) GetType() POI_TYPE {
	if x != nil {
		return x.Type
	}
	return POI_TYPE_TENCENT
}

func (x *PoiDetail) GetPoi() string {
	if x != nil {
		return x.Poi
	}
	return ""
}

func (x *PoiDetail) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PoiDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PoiDetail) GetShowTitle() string {
	if x != nil {
		return x.ShowTitle
	}
	return ""
}

func (x *PoiDetail) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *PoiDetail) GetShowDistance() string {
	if x != nil {
		return x.ShowDistance
	}
	return ""
}

func (x *PoiDetail) GetAdInfo() *AdInfoDetail {
	if x != nil {
		return x.AdInfo
	}
	return nil
}

func (x *PoiDetail) GetAncestors() *PoiId {
	if x != nil {
		return x.Ancestors
	}
	return nil
}

type PoiId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Poi string `protobuf:"bytes,1,opt,name=poi,proto3" json:"poi,omitempty"`
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *PoiId) Reset() {
	*x = PoiId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoiId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoiId) ProtoMessage() {}

func (x *PoiId) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoiId.ProtoReflect.Descriptor instead.
func (*PoiId) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{42}
}

func (x *PoiId) GetPoi() string {
	if x != nil {
		return x.Poi
	}
	return ""
}

func (x *PoiId) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type PoiListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PoiInfo *PoiDetail `protobuf:"bytes,1,opt,name=poi_info,json=poiInfo,proto3" json:"poi_info,omitempty"`
	UserCount int32 `protobuf:"varint,2,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
}

func (x *PoiListItem) Reset() {
	*x = PoiListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PoiListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PoiListItem) ProtoMessage() {}

func (x *PoiListItem) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PoiListItem.ProtoReflect.Descriptor instead.
func (*PoiListItem) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{43}
}

func (x *PoiListItem) GetPoiInfo() *PoiDetail {
	if x != nil {
		return x.PoiInfo
	}
	return nil
}

func (x *PoiListItem) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

type ReserveButtonClickReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid int64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	ReserveId int64 `protobuf:"varint,2,opt,name=reserve_id,json=reserveId,proto3" json:"reserve_id,omitempty"`
	ReserveTotal int64 `protobuf:"varint,3,opt,name=reserve_total,json=reserveTotal,proto3" json:"reserve_total,omitempty"`
	CurBtnStatus int32 `protobuf:"varint,4,opt,name=cur_btn_status,json=curBtnStatus,proto3" json:"cur_btn_status,omitempty"`
	Spmid string `protobuf:"bytes,5,opt,name=spmid,proto3" json:"spmid,omitempty"`
	DynId int64 `protobuf:"varint,6,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	DynType int64 `protobuf:"varint,7,opt,name=dyn_type,json=dynType,proto3" json:"dyn_type,omitempty"`
}

func (x *ReserveButtonClickReq) Reset() {
	*x = ReserveButtonClickReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveButtonClickReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveButtonClickReq) ProtoMessage() {}

func (x *ReserveButtonClickReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveButtonClickReq.ProtoReflect.Descriptor instead.
func (*ReserveButtonClickReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{44}
}

func (x *ReserveButtonClickReq) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ReserveButtonClickReq) GetReserveId() int64 {
	if x != nil {
		return x.ReserveId
	}
	return 0
}

func (x *ReserveButtonClickReq) GetReserveTotal() int64 {
	if x != nil {
		return x.ReserveTotal
	}
	return 0
}

func (x *ReserveButtonClickReq) GetCurBtnStatus() int32 {
	if x != nil {
		return x.CurBtnStatus
	}
	return 0
}

func (x *ReserveButtonClickReq) GetSpmid() string {
	if x != nil {
		return x.Spmid
	}
	return ""
}

func (x *ReserveButtonClickReq) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *ReserveButtonClickReq) GetDynType() int64 {
	if x != nil {
		return x.DynType
	}
	return 0
}

type ReserveButtonClickResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinalBtnStatus ReserveButtonStatus `protobuf:"varint,1,opt,name=final_btn_status,json=finalBtnStatus,proto3,enum=bilibili.dynamic.interfaces.feed.v1.ReserveButtonStatus" json:"final_btn_status,omitempty"`
	BtnMode ReserveButtonMode `protobuf:"varint,2,opt,name=btn_mode,json=btnMode,proto3,enum=bilibili.dynamic.interfaces.feed.v1.ReserveButtonMode" json:"btn_mode,omitempty"`
	ReserveUpdate int64 `protobuf:"varint,3,opt,name=reserve_update,json=reserveUpdate,proto3" json:"reserve_update,omitempty"`
	DescUpdate string `protobuf:"bytes,4,opt,name=desc_update,json=descUpdate,proto3" json:"desc_update,omitempty"`
	HasActivity bool `protobuf:"varint,5,opt,name=has_activity,json=hasActivity,proto3" json:"has_activity,omitempty"`
	ActivityUrl string `protobuf:"bytes,6,opt,name=activity_url,json=activityUrl,proto3" json:"activity_url,omitempty"`
	Toast string `protobuf:"bytes,7,opt,name=toast,proto3" json:"toast,omitempty"`
}

func (x *ReserveButtonClickResp) Reset() {
	*x = ReserveButtonClickResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveButtonClickResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveButtonClickResp) ProtoMessage() {}

func (x *ReserveButtonClickResp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveButtonClickResp.ProtoReflect.Descriptor instead.
func (*ReserveButtonClickResp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{45}
}

func (x *ReserveButtonClickResp) GetFinalBtnStatus() ReserveButtonStatus {
	if x != nil {
		return x.FinalBtnStatus
	}
	return ReserveButtonStatus_RESERVE_BUTTON_STATUS_NONE
}

func (x *ReserveButtonClickResp) GetBtnMode() ReserveButtonMode {
	if x != nil {
		return x.BtnMode
	}
	return ReserveButtonMode_RESERVE_BUTTON_MODE_NONE
}

func (x *ReserveButtonClickResp) GetReserveUpdate() int64 {
	if x != nil {
		return x.ReserveUpdate
	}
	return 0
}

func (x *ReserveButtonClickResp) GetDescUpdate() string {
	if x != nil {
		return x.DescUpdate
	}
	return ""
}

func (x *ReserveButtonClickResp) GetHasActivity() bool {
	if x != nil {
		return x.HasActivity
	}
	return false
}

func (x *ReserveButtonClickResp) GetActivityUrl() string {
	if x != nil {
		return x.ActivityUrl
	}
	return ""
}

func (x *ReserveButtonClickResp) GetToast() string {
	if x != nil {
		return x.Toast
	}
	return ""
}

type ReserveCalendarInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Startts int64 `protobuf:"varint,2,opt,name=startts,proto3" json:"startts,omitempty"`
	Endts int64 `protobuf:"varint,3,opt,name=endts,proto3" json:"endts,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Bussinessid string `protobuf:"bytes,5,opt,name=bussinessid,proto3" json:"bussinessid,omitempty"`
}

func (x *ReserveCalendarInfo) Reset() {
	*x = ReserveCalendarInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReserveCalendarInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveCalendarInfo) ProtoMessage() {}

func (x *ReserveCalendarInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveCalendarInfo.ProtoReflect.Descriptor instead.
func (*ReserveCalendarInfo) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{46}
}

func (x *ReserveCalendarInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReserveCalendarInfo) GetStartts() int64 {
	if x != nil {
		return x.Startts
	}
	return 0
}

func (x *ReserveCalendarInfo) GetEndts() int64 {
	if x != nil {
		return x.Endts
	}
	return 0
}

func (x *ReserveCalendarInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReserveCalendarInfo) GetBussinessid() string {
	if x != nil {
		return x.Bussinessid
	}
	return ""
}

type RmDynReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynId int64 `protobuf:"varint,1,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	DynIdStr string `protobuf:"bytes,2,opt,name=dyn_id_str,json=dynIdStr,proto3" json:"dyn_id_str,omitempty"`
}

func (x *RmDynReq) Reset() {
	*x = RmDynReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmDynReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmDynReq) ProtoMessage() {}

func (x *RmDynReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmDynReq.ProtoReflect.Descriptor instead.
func (*RmDynReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{47}
}

func (x *RmDynReq) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *RmDynReq) GetDynIdStr() string {
	if x != nil {
		return x.DynIdStr
	}
	return ""
}

type RmDynRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RmDynRsp) Reset() {
	*x = RmDynRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmDynRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmDynRsp) ProtoMessage() {}

func (x *RmDynRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmDynRsp.ProtoReflect.Descriptor instead.
func (*RmDynRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{48}
}

type RmSpaceTopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynId int64 `protobuf:"varint,1,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	TeenagersMode int32 `protobuf:"varint,2,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
}

func (x *RmSpaceTopReq) Reset() {
	*x = RmSpaceTopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmSpaceTopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmSpaceTopReq) ProtoMessage() {}

func (x *RmSpaceTopReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmSpaceTopReq.ProtoReflect.Descriptor instead.
func (*RmSpaceTopReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{49}
}

func (x *RmSpaceTopReq) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *RmSpaceTopReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

type RmSpaceTopRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RmSpaceTopRsp) Reset() {
	*x = RmSpaceTopRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RmSpaceTopRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmSpaceTopRsp) ProtoMessage() {}

func (x *RmSpaceTopRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmSpaceTopRsp.ProtoReflect.Descriptor instead.
func (*RmSpaceTopRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{50}
}

type SearchPoiListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Keyword string `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SearchPoiListReq) Reset() {
	*x = SearchPoiListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPoiListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPoiListReq) ProtoMessage() {}

func (x *SearchPoiListReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPoiListReq.ProtoReflect.Descriptor instead.
func (*SearchPoiListReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{51}
}

func (x *SearchPoiListReq) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *SearchPoiListReq) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *SearchPoiListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchPoiListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchPoiListReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SearchPoiListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasMore bool `protobuf:"varint,1,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Pois []*PoiListItem `protobuf:"bytes,2,rep,name=pois,proto3" json:"pois,omitempty"`
}

func (x *SearchPoiListRsp) Reset() {
	*x = SearchPoiListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPoiListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPoiListRsp) ProtoMessage() {}

func (x *SearchPoiListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPoiListRsp.ProtoReflect.Descriptor instead.
func (*SearchPoiListRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{52}
}

func (x *SearchPoiListRsp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *SearchPoiListRsp) GetPois() []*PoiListItem {
	if x != nil {
		return x.Pois
	}
	return nil
}

type SetSpaceTopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DynId int64 `protobuf:"varint,1,opt,name=dyn_id,json=dynId,proto3" json:"dyn_id,omitempty"`
	TeenagersMode int32 `protobuf:"varint,2,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
}

func (x *SetSpaceTopReq) Reset() {
	*x = SetSpaceTopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceTopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceTopReq) ProtoMessage() {}

func (x *SetSpaceTopReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceTopReq.ProtoReflect.Descriptor instead.
func (*SetSpaceTopReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{53}
}

func (x *SetSpaceTopReq) GetDynId() int64 {
	if x != nil {
		return x.DynId
	}
	return 0
}

func (x *SetSpaceTopReq) GetTeenagersMode() int32 {
	if x != nil {
		return x.TeenagersMode
	}
	return 0
}

type SetSpaceTopRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSpaceTopRsp) Reset() {
	*x = SetSpaceTopRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceTopRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceTopRsp) ProtoMessage() {}

func (x *SetSpaceTopRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceTopRsp.ProtoReflect.Descriptor instead.
func (*SetSpaceTopRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{54}
}

type SubmitCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *common.CreateContent `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Pics []*common.CreatePic `protobuf:"bytes,2,rep,name=pics,proto3" json:"pics,omitempty"`
	AttachCard *common.CreateAttachCard `protobuf:"bytes,3,opt,name=attach_card,json=attachCard,proto3" json:"attach_card,omitempty"`
	Scene common.CreateScene `protobuf:"varint,4,opt,name=scene,proto3,enum=bilibili.dynamic.common.CreateScene" json:"scene,omitempty"`
	CreateOption *common.CreateOption `protobuf:"bytes,5,opt,name=create_option,json=createOption,proto3" json:"create_option,omitempty"`
	Opus *common.Opus `protobuf:"bytes,6,opt,name=opus,proto3" json:"opus,omitempty"`
}

func (x *SubmitCheckReq) Reset() {
	*x = SubmitCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCheckReq) ProtoMessage() {}

func (x *SubmitCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCheckReq.ProtoReflect.Descriptor instead.
func (*SubmitCheckReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{55}
}

func (x *SubmitCheckReq) GetContent() *common.CreateContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SubmitCheckReq) GetPics() []*common.CreatePic {
	if x != nil {
		return x.Pics
	}
	return nil
}

func (x *SubmitCheckReq) GetAttachCard() *common.CreateAttachCard {
	if x != nil {
		return x.AttachCard
	}
	return nil
}

func (x *SubmitCheckReq) GetScene() common.CreateScene {
	if x != nil {
		return x.Scene
	}
	return common.CreateScene(0)
}

func (x *SubmitCheckReq) GetCreateOption() *common.CreateOption {
	if x != nil {
		return x.CreateOption
	}
	return nil
}

func (x *SubmitCheckReq) GetOpus() *common.Opus {
	if x != nil {
		return x.Opus
	}
	return nil
}

type SubmitCheckRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitCheckRsp) Reset() {
	*x = SubmitCheckRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCheckRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCheckRsp) ProtoMessage() {}

func (x *SubmitCheckRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCheckRsp.ProtoReflect.Descriptor instead.
func (*SubmitCheckRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{56}
}

type SuggestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	S string `protobuf:"bytes,1,opt,name=s,proto3" json:"s,omitempty"`
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SuggestReq) Reset() {
	*x = SuggestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestReq) ProtoMessage() {}

func (x *SuggestReq) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestReq.ProtoReflect.Descriptor instead.
func (*SuggestReq) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{57}
}

func (x *SuggestReq) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *SuggestReq) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type SuggestRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	TrackId string `protobuf:"bytes,2,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *SuggestRsp) Reset() {
	*x = SuggestRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestRsp) ProtoMessage() {}

func (x *SuggestRsp) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestRsp.ProtoReflect.Descriptor instead.
func (*SuggestRsp) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{58}
}

func (x *SuggestRsp) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *SuggestRsp) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

func (x *SuggestRsp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type HotSearchRsp_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words string `protobuf:"bytes,1,opt,name=words,proto3" json:"words,omitempty"`
}

func (x *HotSearchRsp_Item) Reset() {
	*x = HotSearchRsp_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotSearchRsp_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotSearchRsp_Item) ProtoMessage() {}

func (x *HotSearchRsp_Item) ProtoReflect() protoreflect.Message {
	mi := &file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotSearchRsp_Item.ProtoReflect.Descriptor instead.
func (*HotSearchRsp_Item) Descriptor() ([]byte, []int) {
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP(), []int{33, 0}
}

func (x *HotSearchRsp_Item) GetWords() string {
	if x != nil {
		return x.Words
	}
	return ""
}

var File_bilibili_dynamic_interfaces_feed_v1_api_proto protoreflect.FileDescriptor

var file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x66, 0x65,
	0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x23, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x1a, 0x25, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x75, 0x73, 0x65,
	0x64, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x63, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x73, 0x70, 0x22, 0x72, 0x0a, 0x0c,
	0x41, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x22, 0xac, 0x02, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x5f,
	0x62, 0x74, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x42, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x12, 0x51, 0x0a,
	0x10, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x70, 0x6d, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x49, 0x64, 0x53,
	0x74, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x9d, 0x01, 0x0a, 0x13, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22,
	0x6a, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x42, 0x12, 0x48, 0x0a, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x42, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x0b, 0x0a, 0x09, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x22, 0x59, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0a, 0x61, 0x62, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x42, 0x52, 0x09, 0x61, 0x62, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x22, 0xbc, 0x06, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x79,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x3b, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12,
	0x36, 0x0a, 0x04, 0x70, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69,
	0x63, 0x52, 0x04, 0x70, 0x69, 0x63, 0x73, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x79, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x72, 0x63, 0x12, 0x3d, 0x0a, 0x05,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x6b, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x73, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6b, 0x65, 0x74, 0x63, 0x68, 0x52, 0x06, 0x73,
	0x6b, 0x65, 0x74, 0x63, 0x68, 0x12, 0x3a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x12, 0x3b, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x06, 0x64, 0x79, 0x6e, 0x54, 0x61, 0x67, 0x12, 0x4a,
	0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3d, 0x0a, 0x06, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x69,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a, 0x05, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x39,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x74, 0x72, 0x6c, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
	0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x97, 0x01, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x5d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x22, 0x4f, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x74, 0x0a, 0x1e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x52, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43,
	0x6c, 0x69, 0x63, 0x6b, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x20, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x52, 0x73, 0x70, 0x22, 0x1a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75,
	0x73, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x22,
	0x1a, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x22, 0x72, 0x0a, 0x15, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x12, 0x59, 0x0a, 0x08, 0x62, 0x69, 0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x42,
	0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x17, 0x0a, 0x15, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x22, 0xc3, 0x02, 0x0a, 0x10, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x72, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x44, 0x79, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x74, 0x53, 0x72, 0x63, 0x12, 0x3d, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0xa1,
	0x01, 0x0a, 0x0f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x72, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x75, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x52, 0x73, 0x70, 0x22, 0xfc, 0x04, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x44, 0x79,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x05, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65,
	0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x70, 0x69, 0x63, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x52, 0x04, 0x70, 0x69, 0x63, 0x73, 0x12, 0x43,
	0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x73, 0x72, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44, 0x79, 0x6e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74,
	0x53, 0x72, 0x63, 0x12, 0x3b, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x06, 0x64, 0x79, 0x6e, 0x54, 0x61, 0x67,
	0x12, 0x4a, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3d, 0x0a, 0x06,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x44, 0x79, 0x6e, 0x52,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x74, 0x61,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x74, 0x61, 0x73, 0x74,
	0x22, 0xe3, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x44, 0x79, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a,
	0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x22, 0xd4, 0x05, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x79, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x04,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x52, 0x04,
	0x70, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x5f, 0x64, 0x79, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x44,
	0x79, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x5f, 0x64, 0x79, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x65, 0x44, 0x79, 0x6e,
	0x49, 0x64, 0x12, 0x59, 0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x4a, 0x0a,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x12, 0x41, 0x0a, 0x07, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x45, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x09,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x0a, 0x79, 0x65, 0x6c,
	0x6c, 0x6f, 0x77, 0x5f, 0x62, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x59,
	0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x61, 0x72, 0x52, 0x09, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77,
	0x42, 0x61, 0x72, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x64, 0x5f,
	0x64, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x52, 0x0a,
	0x70, 0x6c, 0x75, 0x73, 0x52, 0x65, 0x64, 0x44, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e,
	0x6c, 0x79, 0x5f, 0x66, 0x61, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f,
	0x6e, 0x6c, 0x79, 0x46, 0x61, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x65, 0x64, 0x69, 0x74, 0x5f,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x64, 0x69, 0x74, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x73, 0x67, 0x22, 0x9a, 0x01,
	0x0a, 0x19, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72,
	0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x39, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x74, 0x72, 0x6c, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xe6, 0x01, 0x0a, 0x19, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x73, 0x70, 0x12, 0x5f, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x73, 0x70, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x1a, 0x68, 0x0a, 0x0a, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x90, 0x02, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x62, 0x72, 0x69, 0x65, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x69, 0x63, 0x65, 0x53, 0x74, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x63, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x24, 0x0a, 0x0e, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x75, 0x6d, 0x70, 0x4c, 0x69,
	0x6e, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x22, 0x30, 0x0a, 0x13, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x75,
	0x62, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x48, 0x6f, 0x6d, 0x65,
	0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x73, 0x70, 0x22,
	0x0e, 0x0a, 0x0c, 0x48, 0x6f, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x22,
	0x94, 0x01, 0x0a, 0x0c, 0x48, 0x6f, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x73, 0x70,
	0x12, 0x4c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x73, 0x70, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x18, 0x49, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64,
	0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x36,
	0x0a, 0x04, 0x70, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63,
	0x52, 0x04, 0x70, 0x69, 0x63, 0x73, 0x22, 0x58, 0x0a, 0x0b, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x79, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x64, 0x79, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x79, 0x6e, 0x5f, 0x72,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x79, 0x6e, 0x52, 0x69, 0x64,
	0x22, 0x31, 0x0a, 0x0b, 0x4c, 0x62, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6c, 0x6e, 0x67, 0x22, 0xda, 0x03, 0x0a, 0x0f, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x6f,
	0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x62, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4f, 0x49, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68,
	0x6f, 0x77, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x61, 0x64,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06,
	0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x09, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x69, 0x49, 0x64, 0x52, 0x09, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73,
	0x22, 0x83, 0x01, 0x0a, 0x11, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x6f, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x4f, 0x0a, 0x08, 0x70, 0x6f, 0x69, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x6f, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07,
	0x70, 0x6f, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x10, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79,
	0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x79, 0x0a, 0x10, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x4a,
	0x0a, 0x04, 0x70, 0x6f, 0x69, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x70, 0x6f, 0x69, 0x73, 0x22, 0xd4, 0x03, 0x0a, 0x09, 0x50,
	0x6f, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x4c, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x62, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4f, 0x49, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x69, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x68, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x61,
	0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x06, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48, 0x0a, 0x09, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x69, 0x49, 0x64, 0x52, 0x09, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x73, 0x22, 0x2d, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x6f, 0x69, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x77, 0x0a, 0x0b, 0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x49, 0x0a, 0x08, 0x70, 0x6f, 0x69, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x72,
	0x5f, 0x62, 0x74, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x42, 0x74, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x70, 0x6d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x70, 0x6d, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x64, 0x79, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x64, 0x79, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf3, 0x02, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x62, 0x0a, 0x10, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x74, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x74, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x08, 0x62, 0x74, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x07, 0x62, 0x74, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x61, 0x73, 0x74, 0x22, 0x9f, 0x01,
	0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x65, 0x6e, 0x64, 0x61,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x64, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x62, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x73, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x69, 0x64, 0x22,
	0x3f, 0x0a, 0x08, 0x52, 0x6d, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x64,
	0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x53, 0x74, 0x72,
	0x22, 0x0a, 0x0a, 0x08, 0x52, 0x6d, 0x44, 0x79, 0x6e, 0x52, 0x73, 0x70, 0x22, 0x4d, 0x0a, 0x0d,
	0x52, 0x6d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a,
	0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64,
	0x79, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x65,
	0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x52,
	0x6d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x70, 0x52, 0x73, 0x70, 0x22, 0x81, 0x01, 0x0a,
	0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x73, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12,
	0x44, 0x0a, 0x04, 0x70, 0x6f, 0x69, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x70, 0x6f, 0x69, 0x73, 0x22, 0x4e, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x79, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x79, 0x6e, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x65, 0x65, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x54, 0x6f, 0x70, 0x52, 0x73, 0x70, 0x22, 0x91, 0x03, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x04,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x52, 0x04,
	0x70, 0x69, 0x63, 0x73, 0x12, 0x4a, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x3a, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x4a, 0x0a, 0x0d,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x6f, 0x70, 0x75, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x70, 0x75, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x75, 0x73, 0x22, 0x10, 0x0a, 0x0e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x22, 0x2e, 0x0a,
	0x0a, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x01, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a,
	0x0a, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x2a, 0x73, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x42,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f,
	0x41, 0x42, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x41, 0x42, 0x5f, 0x45, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x50, 0x55, 0x42, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x49, 0x54, 0x4c,
	0x45, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x41, 0x42,
	0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x50, 0x49,
	0x43, 0x5f, 0x50, 0x41, 0x4e, 0x45, 0x4c, 0x10, 0x02, 0x2a, 0x95, 0x01, 0x0a, 0x19, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x59, 0x4e, 0x41, 0x4d,
	0x49, 0x43, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x5f,
	0x42, 0x49, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x26, 0x0a, 0x22, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f,
	0x4e, 0x5f, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x5f, 0x42, 0x49, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x44, 0x59, 0x4e, 0x41, 0x4d,
	0x49, 0x43, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x49, 0x43, 0x4b, 0x5f,
	0x42, 0x49, 0x5a, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x59, 0x4e, 0x5f, 0x55, 0x50, 0x10,
	0x02, 0x2a, 0x37, 0x0a, 0x08, 0x50, 0x4f, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0b, 0x0a,
	0x07, 0x54, 0x45, 0x4e, 0x43, 0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x49,
	0x54, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x42, 0x49, 0x4c, 0x49, 0x10, 0x03, 0x2a, 0x75, 0x0a, 0x11, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x18, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f,
	0x4e, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1f, 0x0a,
	0x1b, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x10, 0x01, 0x12, 0x21,
	0x0a, 0x1d, 0x52, 0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x50, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10,
	0x02, 0x2a, 0x79, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x52,
	0x45, 0x53, 0x45, 0x52, 0x56, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10, 0x02, 0x32, 0x85, 0x1b, 0x0a,
	0x04, 0x46, 0x65, 0x65, 0x64, 0x12, 0x86, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x44, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x38, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x50,
	0x0a, 0x06, 0x41, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x54, 0x0a, 0x08, 0x41, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x86, 0x01, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x43, 0x61, 0x72, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x38, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x12,
	0x68, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x12, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x74,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x83, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x37, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x73, 0x70, 0x12, 0xa7, 0x01, 0x0a, 0x1b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x43, 0x2e, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x43, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x52, 0x73, 0x70, 0x12, 0x95, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x75, 0x73, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x3d,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x3d, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x73, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x8c, 0x01, 0x0a,
	0x12, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x12, 0x3a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a,
	0x3a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x0d, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7a, 0x0a, 0x0c, 0x44, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x12, 0x34, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x52, 0x65, 0x71, 0x1a, 0x34,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x52, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x07, 0x45, 0x64, 0x69, 0x74, 0x44, 0x79, 0x6e, 0x12,
	0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x79, 0x6e, 0x52, 0x65, 0x71,
	0x1a, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x79, 0x6e, 0x52, 0x73,
	0x70, 0x12, 0x80, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x44, 0x79, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x79, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x36, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x64, 0x69, 0x74, 0x44, 0x79, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x73, 0x70, 0x12, 0x62, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x69, 0x64, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x69, 0x64, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x69, 0x64, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x73, 0x70, 0x12, 0x98, 0x01, 0x0a, 0x16, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x3e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x1a, 0x3e, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x73, 0x70, 0x12, 0x86, 0x01, 0x0a, 0x10, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x75, 0x62, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x42, 0x75, 0x62, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x38, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x42, 0x75, 0x62,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x71, 0x0a, 0x09,
	0x48, 0x6f, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x31, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x6f, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x31, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x73, 0x70, 0x12,
	0x88, 0x01, 0x0a, 0x15, 0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x3d, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7d, 0x0a, 0x0d, 0x4e, 0x65,
	0x61, 0x72, 0x62, 0x79, 0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x62, 0x69,
	0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x62, 0x79, 0x50,
	0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x8d, 0x01, 0x0a, 0x12, 0x52, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b,
	0x12, 0x3a, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61,
	0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x3b, 0x2e, 0x62,
	0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x65, 0x0a, 0x05, 0x52, 0x6d, 0x44,
	0x79, 0x6e, 0x12, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6d, 0x44, 0x79, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x2d, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e,
	0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6d, 0x44, 0x79, 0x6e, 0x52, 0x73, 0x70,
	0x12, 0x74, 0x0a, 0x0a, 0x52, 0x6d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x70, 0x12, 0x32,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x1a, 0x32, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6d, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x54, 0x6f, 0x70, 0x52, 0x73, 0x70, 0x12, 0x7d, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x35,
	0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x6f, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x77, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x54, 0x6f, 0x70, 0x12, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e,
	0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x6f, 0x70, 0x52, 0x73, 0x70, 0x12, 0x77,
	0x0a, 0x0b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x33, 0x2e,
	0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2e, 0x66, 0x65, 0x65, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x1a, 0x33, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x6b, 0x0a, 0x07, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64, 0x79,
	0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2f, 0x2e, 0x62, 0x69, 0x6c, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x2e, 0x64,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x73, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x6d, 0x74, 0x63, 0x32, 0x33, 0x33, 0x2f, 0x62, 0x69, 0x6c, 0x69,
	0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x69, 0x6c,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x2f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescOnce sync.Once
	file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescData = file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDesc
)

func file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescGZIP() []byte {
	file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescOnce.Do(func() {
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescData)
	})
	return file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDescData
}

var file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_bilibili_dynamic_interfaces_feed_v1_api_proto_goTypes = []interface{}{
	(ConfigABEntry)(0),                     // 0: bilibili.dynamic.interfaces.feed.v1.ConfigABEntry
	(DynamicButtonClickBizType)(0),         // 1: bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickBizType
	(POI_TYPE)(0),                          // 2: bilibili.dynamic.interfaces.feed.v1.POI_TYPE
	(ReserveButtonMode)(0),                 // 3: bilibili.dynamic.interfaces.feed.v1.ReserveButtonMode
	(ReserveButtonStatus)(0),               // 4: bilibili.dynamic.interfaces.feed.v1.ReserveButtonStatus
	(*AddDynamicReportReq)(nil),            // 5: bilibili.dynamic.interfaces.feed.v1.AddDynamicReportReq
	(*AddDynamicReportRsp)(nil),            // 6: bilibili.dynamic.interfaces.feed.v1.AddDynamicReportRsp
	(*AdInfoDetail)(nil),                   // 7: bilibili.dynamic.interfaces.feed.v1.AdInfoDetail
	(*AttachCardButtonReq)(nil),            // 8: bilibili.dynamic.interfaces.feed.v1.AttachCardButtonReq
	(*AttachCardButtonRsp)(nil),            // 9: bilibili.dynamic.interfaces.feed.v1.AttachCardButtonRsp
	(*ConfigAB)(nil),                       // 10: bilibili.dynamic.interfaces.feed.v1.ConfigAB
	(*ConfigReq)(nil),                      // 11: bilibili.dynamic.interfaces.feed.v1.ConfigReq
	(*ConfigRsp)(nil),                      // 12: bilibili.dynamic.interfaces.feed.v1.ConfigRsp
	(*CreateDynReq)(nil),                   // 13: bilibili.dynamic.interfaces.feed.v1.CreateDynReq
	(*CreateInitCheckReq)(nil),             // 14: bilibili.dynamic.interfaces.feed.v1.CreateInitCheckReq
	(*CreatePageCommercialInfo)(nil),       // 15: bilibili.dynamic.interfaces.feed.v1.CreatePageCommercialInfo
	(*CreatePageInfosReq)(nil),             // 16: bilibili.dynamic.interfaces.feed.v1.CreatePageInfosReq
	(*CreatePageInfosRsp)(nil),             // 17: bilibili.dynamic.interfaces.feed.v1.CreatePageInfosRsp
	(*CreatePageTopicInfo)(nil),            // 18: bilibili.dynamic.interfaces.feed.v1.CreatePageTopicInfo
	(*CreatePermissionButtonClickReq)(nil), // 19: bilibili.dynamic.interfaces.feed.v1.CreatePermissionButtonClickReq
	(*CreatePermissionButtonClickRsp)(nil), // 20: bilibili.dynamic.interfaces.feed.v1.CreatePermissionButtonClickRsp
	(*CreatePlusButtonClickReq)(nil),       // 21: bilibili.dynamic.interfaces.feed.v1.CreatePlusButtonClickReq
	(*CreatePlusButtonClickRsp)(nil),       // 22: bilibili.dynamic.interfaces.feed.v1.CreatePlusButtonClickRsp
	(*DynamicButtonClickReq)(nil),          // 23: bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickReq
	(*DynamicButtonClickRsp)(nil),          // 24: bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickRsp
	(*DynamicRepostReq)(nil),               // 25: bilibili.dynamic.interfaces.feed.v1.DynamicRepostReq
	(*DynamicThumbReq)(nil),                // 26: bilibili.dynamic.interfaces.feed.v1.DynamicThumbReq
	(*DynamicThumbRsp)(nil),                // 27: bilibili.dynamic.interfaces.feed.v1.DynamicThumbRsp
	(*EditDynReq)(nil),                     // 28: bilibili.dynamic.interfaces.feed.v1.EditDynReq
	(*EditDynRsp)(nil),                     // 29: bilibili.dynamic.interfaces.feed.v1.EditDynRsp
	(*GetEditDynInfoReq)(nil),              // 30: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoReq
	(*GetEditDynInfoRsp)(nil),              // 31: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp
	(*GoodsAttachCardPreviewReq)(nil),      // 32: bilibili.dynamic.interfaces.feed.v1.GoodsAttachCardPreviewReq
	(*GoodsAttachCardPreviewRsp)(nil),      // 33: bilibili.dynamic.interfaces.feed.v1.GoodsAttachCardPreviewRsp
	(*GoodsItem)(nil),                      // 34: bilibili.dynamic.interfaces.feed.v1.GoodsItem
	(*HomeBubbleReportReq)(nil),            // 35: bilibili.dynamic.interfaces.feed.v1.HomeBubbleReportReq
	(*HomeBubbleReportRsp)(nil),            // 36: bilibili.dynamic.interfaces.feed.v1.HomeBubbleReportRsp
	(*HotSearchReq)(nil),                   // 37: bilibili.dynamic.interfaces.feed.v1.HotSearchReq
	(*HotSearchRsp)(nil),                   // 38: bilibili.dynamic.interfaces.feed.v1.HotSearchRsp
	(*ICreateGoodsReplySyncReq)(nil),       // 39: bilibili.dynamic.interfaces.feed.v1.ICreateGoodsReplySyncReq
	(*ICreateResp)(nil),                    // 40: bilibili.dynamic.interfaces.feed.v1.ICreateResp
	(*LbsLocation)(nil),                    // 41: bilibili.dynamic.interfaces.feed.v1.LbsLocation
	(*NearbyPoiDetail)(nil),                // 42: bilibili.dynamic.interfaces.feed.v1.NearbyPoiDetail
	(*NearbyPoiListItem)(nil),              // 43: bilibili.dynamic.interfaces.feed.v1.NearbyPoiListItem
	(*NearbyPoiListReq)(nil),               // 44: bilibili.dynamic.interfaces.feed.v1.NearbyPoiListReq
	(*NearbyPoiListRsp)(nil),               // 45: bilibili.dynamic.interfaces.feed.v1.NearbyPoiListRsp
	(*PoiDetail)(nil),                      // 46: bilibili.dynamic.interfaces.feed.v1.PoiDetail
	(*PoiId)(nil),                          // 47: bilibili.dynamic.interfaces.feed.v1.PoiId
	(*PoiListItem)(nil),                    // 48: bilibili.dynamic.interfaces.feed.v1.PoiListItem
	(*ReserveButtonClickReq)(nil),          // 49: bilibili.dynamic.interfaces.feed.v1.ReserveButtonClickReq
	(*ReserveButtonClickResp)(nil),         // 50: bilibili.dynamic.interfaces.feed.v1.ReserveButtonClickResp
	(*ReserveCalendarInfo)(nil),            // 51: bilibili.dynamic.interfaces.feed.v1.ReserveCalendarInfo
	(*RmDynReq)(nil),                       // 52: bilibili.dynamic.interfaces.feed.v1.RmDynReq
	(*RmDynRsp)(nil),                       // 53: bilibili.dynamic.interfaces.feed.v1.RmDynRsp
	(*RmSpaceTopReq)(nil),                  // 54: bilibili.dynamic.interfaces.feed.v1.RmSpaceTopReq
	(*RmSpaceTopRsp)(nil),                  // 55: bilibili.dynamic.interfaces.feed.v1.RmSpaceTopRsp
	(*SearchPoiListReq)(nil),               // 56: bilibili.dynamic.interfaces.feed.v1.SearchPoiListReq
	(*SearchPoiListRsp)(nil),               // 57: bilibili.dynamic.interfaces.feed.v1.SearchPoiListRsp
	(*SetSpaceTopReq)(nil),                 // 58: bilibili.dynamic.interfaces.feed.v1.SetSpaceTopReq
	(*SetSpaceTopRsp)(nil),                 // 59: bilibili.dynamic.interfaces.feed.v1.SetSpaceTopRsp
	(*SubmitCheckReq)(nil),                 // 60: bilibili.dynamic.interfaces.feed.v1.SubmitCheckReq
	(*SubmitCheckRsp)(nil),                 // 61: bilibili.dynamic.interfaces.feed.v1.SubmitCheckRsp
	(*SuggestReq)(nil),                     // 62: bilibili.dynamic.interfaces.feed.v1.SuggestReq
	(*SuggestRsp)(nil),                     // 63: bilibili.dynamic.interfaces.feed.v1.SuggestRsp
	nil,                                    // 64: bilibili.dynamic.interfaces.feed.v1.GoodsAttachCardPreviewRsp.GoodsEntry
	(*HotSearchRsp_Item)(nil),              // 65: bilibili.dynamic.interfaces.feed.v1.HotSearchRsp.Item
	(common.AttachCardType)(0),             // 66: bilibili.dynamic.common.AttachCardType
	(*common.UserCreateMeta)(nil),          // 67: bilibili.dynamic.common.UserCreateMeta
	(*common.CreateContent)(nil),           // 68: bilibili.dynamic.common.CreateContent
	(common.CreateScene)(0),                // 69: bilibili.dynamic.common.CreateScene
	(*common.CreatePic)(nil),               // 70: bilibili.dynamic.common.CreatePic
	(*common.DynIdentity)(nil),             // 71: bilibili.dynamic.common.DynIdentity
	(*common.CreateDynVideo)(nil),          // 72: bilibili.dynamic.common.CreateDynVideo
	(*common.Sketch)(nil),                  // 73: bilibili.dynamic.common.Sketch
	(*common.Program)(nil),                 // 74: bilibili.dynamic.common.Program
	(*common.CreateTag)(nil),               // 75: bilibili.dynamic.common.CreateTag
	(*common.CreateAttachCard)(nil),        // 76: bilibili.dynamic.common.CreateAttachCard
	(*common.CreateOption)(nil),            // 77: bilibili.dynamic.common.CreateOption
	(*common.CreateTopic)(nil),             // 78: bilibili.dynamic.common.CreateTopic
	(common.CreateInitCheckScene)(0),       // 79: bilibili.dynamic.common.CreateInitCheckScene
	(*common.MetaDataCtrl)(nil),            // 80: bilibili.dynamic.common.MetaDataCtrl
	(*common.RepostInitCheck)(nil),         // 81: bilibili.dynamic.common.RepostInitCheck
	(*common.PublishSetting)(nil),          // 82: bilibili.dynamic.common.PublishSetting
	(*common.UpPermission)(nil),            // 83: bilibili.dynamic.common.UpPermission
	(*common.ShareChannel)(nil),            // 84: bilibili.dynamic.common.ShareChannel
	(*common.PublishYellowBar)(nil),        // 85: bilibili.dynamic.common.PublishYellowBar
	(*common.PlusRedDot)(nil),              // 86: bilibili.dynamic.common.PlusRedDot
	(*common.Opus)(nil),                    // 87: bilibili.dynamic.common.Opus
	(*common.AtListReq)(nil),               // 88: bilibili.dynamic.common.AtListReq
	(*common.AtSearchReq)(nil),             // 89: bilibili.dynamic.common.AtSearchReq
	(*common.GetUidByNameReq)(nil),         // 90: bilibili.dynamic.common.GetUidByNameReq
	(*common.AtListRsp)(nil),               // 91: bilibili.dynamic.common.AtListRsp
	(*common.CreateResp)(nil),              // 92: bilibili.dynamic.common.CreateResp
	(*common.CreateCheckResp)(nil),         // 93: bilibili.dynamic.common.CreateCheckResp
	(*common.GetUidByNameRsp)(nil),         // 94: bilibili.dynamic.common.GetUidByNameRsp
}
var file_bilibili_dynamic_interfaces_feed_v1_api_proto_depIdxs = []int32{
	66,  // 0: bilibili.dynamic.interfaces.feed.v1.AttachCardButtonReq.attach_card_type:type_name -> bilibili.dynamic.common.AttachCardType
	0,   // 1: bilibili.dynamic.interfaces.feed.v1.ConfigAB.entry:type_name -> bilibili.dynamic.interfaces.feed.v1.ConfigABEntry
	10,  // 2: bilibili.dynamic.interfaces.feed.v1.ConfigRsp.ab_entries:type_name -> bilibili.dynamic.interfaces.feed.v1.ConfigAB
	67,  // 3: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.meta:type_name -> bilibili.dynamic.common.UserCreateMeta
	68,  // 4: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.content:type_name -> bilibili.dynamic.common.CreateContent
	69,  // 5: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.scene:type_name -> bilibili.dynamic.common.CreateScene
	70,  // 6: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.pics:type_name -> bilibili.dynamic.common.CreatePic
	71,  // 7: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.repost_src:type_name -> bilibili.dynamic.common.DynIdentity
	72,  // 8: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.video:type_name -> bilibili.dynamic.common.CreateDynVideo
	73,  // 9: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.sketch:type_name -> bilibili.dynamic.common.Sketch
	74,  // 10: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.program:type_name -> bilibili.dynamic.common.Program
	75,  // 11: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.dyn_tag:type_name -> bilibili.dynamic.common.CreateTag
	76,  // 12: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.attach_card:type_name -> bilibili.dynamic.common.CreateAttachCard
	77,  // 13: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.option:type_name -> bilibili.dynamic.common.CreateOption
	78,  // 14: bilibili.dynamic.interfaces.feed.v1.CreateDynReq.topic:type_name -> bilibili.dynamic.common.CreateTopic
	79,  // 15: bilibili.dynamic.interfaces.feed.v1.CreateInitCheckReq.scene:type_name -> bilibili.dynamic.common.CreateInitCheckScene
	80,  // 16: bilibili.dynamic.interfaces.feed.v1.CreateInitCheckReq.meta:type_name -> bilibili.dynamic.common.MetaDataCtrl
	81,  // 17: bilibili.dynamic.interfaces.feed.v1.CreateInitCheckReq.repost:type_name -> bilibili.dynamic.common.RepostInitCheck
	18,  // 18: bilibili.dynamic.interfaces.feed.v1.CreatePageInfosRsp.topic:type_name -> bilibili.dynamic.interfaces.feed.v1.CreatePageTopicInfo
	15,  // 19: bilibili.dynamic.interfaces.feed.v1.CreatePageInfosRsp.commercial:type_name -> bilibili.dynamic.interfaces.feed.v1.CreatePageCommercialInfo
	1,   // 20: bilibili.dynamic.interfaces.feed.v1.CreatePermissionButtonClickReq.type:type_name -> bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickBizType
	1,   // 21: bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickReq.biz_type:type_name -> bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickBizType
	68,  // 22: bilibili.dynamic.interfaces.feed.v1.DynamicRepostReq.content:type_name -> bilibili.dynamic.common.CreateContent
	71,  // 23: bilibili.dynamic.interfaces.feed.v1.DynamicRepostReq.repost_src:type_name -> bilibili.dynamic.common.DynIdentity
	77,  // 24: bilibili.dynamic.interfaces.feed.v1.DynamicRepostReq.option:type_name -> bilibili.dynamic.common.CreateOption
	78,  // 25: bilibili.dynamic.interfaces.feed.v1.DynamicRepostReq.topic:type_name -> bilibili.dynamic.common.CreateTopic
	69,  // 26: bilibili.dynamic.interfaces.feed.v1.EditDynReq.scene:type_name -> bilibili.dynamic.common.CreateScene
	67,  // 27: bilibili.dynamic.interfaces.feed.v1.EditDynReq.meta:type_name -> bilibili.dynamic.common.UserCreateMeta
	68,  // 28: bilibili.dynamic.interfaces.feed.v1.EditDynReq.content:type_name -> bilibili.dynamic.common.CreateContent
	70,  // 29: bilibili.dynamic.interfaces.feed.v1.EditDynReq.pics:type_name -> bilibili.dynamic.common.CreatePic
	71,  // 30: bilibili.dynamic.interfaces.feed.v1.EditDynReq.repost_src:type_name -> bilibili.dynamic.common.DynIdentity
	75,  // 31: bilibili.dynamic.interfaces.feed.v1.EditDynReq.dyn_tag:type_name -> bilibili.dynamic.common.CreateTag
	76,  // 32: bilibili.dynamic.interfaces.feed.v1.EditDynReq.attach_card:type_name -> bilibili.dynamic.common.CreateAttachCard
	77,  // 33: bilibili.dynamic.interfaces.feed.v1.EditDynReq.option:type_name -> bilibili.dynamic.common.CreateOption
	78,  // 34: bilibili.dynamic.interfaces.feed.v1.EditDynReq.topic:type_name -> bilibili.dynamic.common.CreateTopic
	69,  // 35: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoReq.scene:type_name -> bilibili.dynamic.common.CreateScene
	80,  // 36: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoReq.meta:type_name -> bilibili.dynamic.common.MetaDataCtrl
	81,  // 37: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoReq.repost:type_name -> bilibili.dynamic.common.RepostInitCheck
	70,  // 38: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp.pics:type_name -> bilibili.dynamic.common.CreatePic
	18,  // 39: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp.topic_infos:type_name -> bilibili.dynamic.interfaces.feed.v1.CreatePageTopicInfo
	76,  // 40: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp.attach_card:type_name -> bilibili.dynamic.common.CreateAttachCard
	82,  // 41: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp.setting:type_name -> bilibili.dynamic.common.PublishSetting
	83,  // 42: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp.permission:type_name -> bilibili.dynamic.common.UpPermission
	84,  // 43: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp.share_info:type_name -> bilibili.dynamic.common.ShareChannel
	85,  // 44: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp.yellow_bar:type_name -> bilibili.dynamic.common.PublishYellowBar
	86,  // 45: bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp.plus_red_dot:type_name -> bilibili.dynamic.common.PlusRedDot
	80,  // 46: bilibili.dynamic.interfaces.feed.v1.GoodsAttachCardPreviewReq.meta:type_name -> bilibili.dynamic.common.MetaDataCtrl
	64,  // 47: bilibili.dynamic.interfaces.feed.v1.GoodsAttachCardPreviewRsp.goods:type_name -> bilibili.dynamic.interfaces.feed.v1.GoodsAttachCardPreviewRsp.GoodsEntry
	65,  // 48: bilibili.dynamic.interfaces.feed.v1.HotSearchRsp.items:type_name -> bilibili.dynamic.interfaces.feed.v1.HotSearchRsp.Item
	68,  // 49: bilibili.dynamic.interfaces.feed.v1.ICreateGoodsReplySyncReq.content:type_name -> bilibili.dynamic.common.CreateContent
	69,  // 50: bilibili.dynamic.interfaces.feed.v1.ICreateGoodsReplySyncReq.scene:type_name -> bilibili.dynamic.common.CreateScene
	70,  // 51: bilibili.dynamic.interfaces.feed.v1.ICreateGoodsReplySyncReq.pics:type_name -> bilibili.dynamic.common.CreatePic
	41,  // 52: bilibili.dynamic.interfaces.feed.v1.NearbyPoiDetail.location:type_name -> bilibili.dynamic.interfaces.feed.v1.LbsLocation
	2,   // 53: bilibili.dynamic.interfaces.feed.v1.NearbyPoiDetail.type:type_name -> bilibili.dynamic.interfaces.feed.v1.POI_TYPE
	7,   // 54: bilibili.dynamic.interfaces.feed.v1.NearbyPoiDetail.ad_info:type_name -> bilibili.dynamic.interfaces.feed.v1.AdInfoDetail
	47,  // 55: bilibili.dynamic.interfaces.feed.v1.NearbyPoiDetail.ancestors:type_name -> bilibili.dynamic.interfaces.feed.v1.PoiId
	42,  // 56: bilibili.dynamic.interfaces.feed.v1.NearbyPoiListItem.poi_info:type_name -> bilibili.dynamic.interfaces.feed.v1.NearbyPoiDetail
	43,  // 57: bilibili.dynamic.interfaces.feed.v1.NearbyPoiListRsp.pois:type_name -> bilibili.dynamic.interfaces.feed.v1.NearbyPoiListItem
	41,  // 58: bilibili.dynamic.interfaces.feed.v1.PoiDetail.location:type_name -> bilibili.dynamic.interfaces.feed.v1.LbsLocation
	2,   // 59: bilibili.dynamic.interfaces.feed.v1.PoiDetail.type:type_name -> bilibili.dynamic.interfaces.feed.v1.POI_TYPE
	7,   // 60: bilibili.dynamic.interfaces.feed.v1.PoiDetail.ad_info:type_name -> bilibili.dynamic.interfaces.feed.v1.AdInfoDetail
	47,  // 61: bilibili.dynamic.interfaces.feed.v1.PoiDetail.ancestors:type_name -> bilibili.dynamic.interfaces.feed.v1.PoiId
	46,  // 62: bilibili.dynamic.interfaces.feed.v1.PoiListItem.poi_info:type_name -> bilibili.dynamic.interfaces.feed.v1.PoiDetail
	4,   // 63: bilibili.dynamic.interfaces.feed.v1.ReserveButtonClickResp.final_btn_status:type_name -> bilibili.dynamic.interfaces.feed.v1.ReserveButtonStatus
	3,   // 64: bilibili.dynamic.interfaces.feed.v1.ReserveButtonClickResp.btn_mode:type_name -> bilibili.dynamic.interfaces.feed.v1.ReserveButtonMode
	48,  // 65: bilibili.dynamic.interfaces.feed.v1.SearchPoiListRsp.pois:type_name -> bilibili.dynamic.interfaces.feed.v1.PoiListItem
	68,  // 66: bilibili.dynamic.interfaces.feed.v1.SubmitCheckReq.content:type_name -> bilibili.dynamic.common.CreateContent
	70,  // 67: bilibili.dynamic.interfaces.feed.v1.SubmitCheckReq.pics:type_name -> bilibili.dynamic.common.CreatePic
	76,  // 68: bilibili.dynamic.interfaces.feed.v1.SubmitCheckReq.attach_card:type_name -> bilibili.dynamic.common.CreateAttachCard
	69,  // 69: bilibili.dynamic.interfaces.feed.v1.SubmitCheckReq.scene:type_name -> bilibili.dynamic.common.CreateScene
	77,  // 70: bilibili.dynamic.interfaces.feed.v1.SubmitCheckReq.create_option:type_name -> bilibili.dynamic.common.CreateOption
	87,  // 71: bilibili.dynamic.interfaces.feed.v1.SubmitCheckReq.opus:type_name -> bilibili.dynamic.common.Opus
	34,  // 72: bilibili.dynamic.interfaces.feed.v1.GoodsAttachCardPreviewRsp.GoodsEntry.value:type_name -> bilibili.dynamic.interfaces.feed.v1.GoodsItem
	5,   // 73: bilibili.dynamic.interfaces.feed.v1.Feed.AddDynamicReport:input_type -> bilibili.dynamic.interfaces.feed.v1.AddDynamicReportReq
	88,  // 74: bilibili.dynamic.interfaces.feed.v1.Feed.AtList:input_type -> bilibili.dynamic.common.AtListReq
	89,  // 75: bilibili.dynamic.interfaces.feed.v1.Feed.AtSearch:input_type -> bilibili.dynamic.common.AtSearchReq
	8,   // 76: bilibili.dynamic.interfaces.feed.v1.Feed.AttachCardButton:input_type -> bilibili.dynamic.interfaces.feed.v1.AttachCardButtonReq
	11,  // 77: bilibili.dynamic.interfaces.feed.v1.Feed.Config:input_type -> bilibili.dynamic.interfaces.feed.v1.ConfigReq
	13,  // 78: bilibili.dynamic.interfaces.feed.v1.Feed.CreateDyn:input_type -> bilibili.dynamic.interfaces.feed.v1.CreateDynReq
	14,  // 79: bilibili.dynamic.interfaces.feed.v1.Feed.CreateInitCheck:input_type -> bilibili.dynamic.interfaces.feed.v1.CreateInitCheckReq
	16,  // 80: bilibili.dynamic.interfaces.feed.v1.Feed.CreatePageInfos:input_type -> bilibili.dynamic.interfaces.feed.v1.CreatePageInfosReq
	19,  // 81: bilibili.dynamic.interfaces.feed.v1.Feed.CreatePermissionButtonClick:input_type -> bilibili.dynamic.interfaces.feed.v1.CreatePermissionButtonClickReq
	21,  // 82: bilibili.dynamic.interfaces.feed.v1.Feed.CreatePlusButtonClick:input_type -> bilibili.dynamic.interfaces.feed.v1.CreatePlusButtonClickReq
	23,  // 83: bilibili.dynamic.interfaces.feed.v1.Feed.DynamicButtonClick:input_type -> bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickReq
	25,  // 84: bilibili.dynamic.interfaces.feed.v1.Feed.DynamicRepost:input_type -> bilibili.dynamic.interfaces.feed.v1.DynamicRepostReq
	26,  // 85: bilibili.dynamic.interfaces.feed.v1.Feed.DynamicThumb:input_type -> bilibili.dynamic.interfaces.feed.v1.DynamicThumbReq
	28,  // 86: bilibili.dynamic.interfaces.feed.v1.Feed.EditDyn:input_type -> bilibili.dynamic.interfaces.feed.v1.EditDynReq
	30,  // 87: bilibili.dynamic.interfaces.feed.v1.Feed.GetEditDynInfo:input_type -> bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoReq
	90,  // 88: bilibili.dynamic.interfaces.feed.v1.Feed.GetUidByName:input_type -> bilibili.dynamic.common.GetUidByNameReq
	32,  // 89: bilibili.dynamic.interfaces.feed.v1.Feed.GoodsAttachCardPreview:input_type -> bilibili.dynamic.interfaces.feed.v1.GoodsAttachCardPreviewReq
	35,  // 90: bilibili.dynamic.interfaces.feed.v1.Feed.HomeBubbleReport:input_type -> bilibili.dynamic.interfaces.feed.v1.HomeBubbleReportReq
	37,  // 91: bilibili.dynamic.interfaces.feed.v1.Feed.HotSearch:input_type -> bilibili.dynamic.interfaces.feed.v1.HotSearchReq
	39,  // 92: bilibili.dynamic.interfaces.feed.v1.Feed.ICreateGoodsReplySync:input_type -> bilibili.dynamic.interfaces.feed.v1.ICreateGoodsReplySyncReq
	44,  // 93: bilibili.dynamic.interfaces.feed.v1.Feed.NearbyPoiList:input_type -> bilibili.dynamic.interfaces.feed.v1.NearbyPoiListReq
	49,  // 94: bilibili.dynamic.interfaces.feed.v1.Feed.ReserveButtonClick:input_type -> bilibili.dynamic.interfaces.feed.v1.ReserveButtonClickReq
	52,  // 95: bilibili.dynamic.interfaces.feed.v1.Feed.RmDyn:input_type -> bilibili.dynamic.interfaces.feed.v1.RmDynReq
	54,  // 96: bilibili.dynamic.interfaces.feed.v1.Feed.RmSpaceTop:input_type -> bilibili.dynamic.interfaces.feed.v1.RmSpaceTopReq
	56,  // 97: bilibili.dynamic.interfaces.feed.v1.Feed.SearchPoiList:input_type -> bilibili.dynamic.interfaces.feed.v1.SearchPoiListReq
	58,  // 98: bilibili.dynamic.interfaces.feed.v1.Feed.SetSpaceTop:input_type -> bilibili.dynamic.interfaces.feed.v1.SetSpaceTopReq
	60,  // 99: bilibili.dynamic.interfaces.feed.v1.Feed.SubmitCheck:input_type -> bilibili.dynamic.interfaces.feed.v1.SubmitCheckReq
	62,  // 100: bilibili.dynamic.interfaces.feed.v1.Feed.Suggest:input_type -> bilibili.dynamic.interfaces.feed.v1.SuggestReq
	6,   // 101: bilibili.dynamic.interfaces.feed.v1.Feed.AddDynamicReport:output_type -> bilibili.dynamic.interfaces.feed.v1.AddDynamicReportRsp
	91,  // 102: bilibili.dynamic.interfaces.feed.v1.Feed.AtList:output_type -> bilibili.dynamic.common.AtListRsp
	91,  // 103: bilibili.dynamic.interfaces.feed.v1.Feed.AtSearch:output_type -> bilibili.dynamic.common.AtListRsp
	9,   // 104: bilibili.dynamic.interfaces.feed.v1.Feed.AttachCardButton:output_type -> bilibili.dynamic.interfaces.feed.v1.AttachCardButtonRsp
	12,  // 105: bilibili.dynamic.interfaces.feed.v1.Feed.Config:output_type -> bilibili.dynamic.interfaces.feed.v1.ConfigRsp
	92,  // 106: bilibili.dynamic.interfaces.feed.v1.Feed.CreateDyn:output_type -> bilibili.dynamic.common.CreateResp
	93,  // 107: bilibili.dynamic.interfaces.feed.v1.Feed.CreateInitCheck:output_type -> bilibili.dynamic.common.CreateCheckResp
	17,  // 108: bilibili.dynamic.interfaces.feed.v1.Feed.CreatePageInfos:output_type -> bilibili.dynamic.interfaces.feed.v1.CreatePageInfosRsp
	20,  // 109: bilibili.dynamic.interfaces.feed.v1.Feed.CreatePermissionButtonClick:output_type -> bilibili.dynamic.interfaces.feed.v1.CreatePermissionButtonClickRsp
	22,  // 110: bilibili.dynamic.interfaces.feed.v1.Feed.CreatePlusButtonClick:output_type -> bilibili.dynamic.interfaces.feed.v1.CreatePlusButtonClickRsp
	24,  // 111: bilibili.dynamic.interfaces.feed.v1.Feed.DynamicButtonClick:output_type -> bilibili.dynamic.interfaces.feed.v1.DynamicButtonClickRsp
	92,  // 112: bilibili.dynamic.interfaces.feed.v1.Feed.DynamicRepost:output_type -> bilibili.dynamic.common.CreateResp
	27,  // 113: bilibili.dynamic.interfaces.feed.v1.Feed.DynamicThumb:output_type -> bilibili.dynamic.interfaces.feed.v1.DynamicThumbRsp
	29,  // 114: bilibili.dynamic.interfaces.feed.v1.Feed.EditDyn:output_type -> bilibili.dynamic.interfaces.feed.v1.EditDynRsp
	31,  // 115: bilibili.dynamic.interfaces.feed.v1.Feed.GetEditDynInfo:output_type -> bilibili.dynamic.interfaces.feed.v1.GetEditDynInfoRsp
	94,  // 116: bilibili.dynamic.interfaces.feed.v1.Feed.GetUidByName:output_type -> bilibili.dynamic.common.GetUidByNameRsp
	33,  // 117: bilibili.dynamic.interfaces.feed.v1.Feed.GoodsAttachCardPreview:output_type -> bilibili.dynamic.interfaces.feed.v1.GoodsAttachCardPreviewRsp
	36,  // 118: bilibili.dynamic.interfaces.feed.v1.Feed.HomeBubbleReport:output_type -> bilibili.dynamic.interfaces.feed.v1.HomeBubbleReportRsp
	38,  // 119: bilibili.dynamic.interfaces.feed.v1.Feed.HotSearch:output_type -> bilibili.dynamic.interfaces.feed.v1.HotSearchRsp
	40,  // 120: bilibili.dynamic.interfaces.feed.v1.Feed.ICreateGoodsReplySync:output_type -> bilibili.dynamic.interfaces.feed.v1.ICreateResp
	45,  // 121: bilibili.dynamic.interfaces.feed.v1.Feed.NearbyPoiList:output_type -> bilibili.dynamic.interfaces.feed.v1.NearbyPoiListRsp
	50,  // 122: bilibili.dynamic.interfaces.feed.v1.Feed.ReserveButtonClick:output_type -> bilibili.dynamic.interfaces.feed.v1.ReserveButtonClickResp
	53,  // 123: bilibili.dynamic.interfaces.feed.v1.Feed.RmDyn:output_type -> bilibili.dynamic.interfaces.feed.v1.RmDynRsp
	55,  // 124: bilibili.dynamic.interfaces.feed.v1.Feed.RmSpaceTop:output_type -> bilibili.dynamic.interfaces.feed.v1.RmSpaceTopRsp
	57,  // 125: bilibili.dynamic.interfaces.feed.v1.Feed.SearchPoiList:output_type -> bilibili.dynamic.interfaces.feed.v1.SearchPoiListRsp
	59,  // 126: bilibili.dynamic.interfaces.feed.v1.Feed.SetSpaceTop:output_type -> bilibili.dynamic.interfaces.feed.v1.SetSpaceTopRsp
	61,  // 127: bilibili.dynamic.interfaces.feed.v1.Feed.SubmitCheck:output_type -> bilibili.dynamic.interfaces.feed.v1.SubmitCheckRsp
	63,  // 128: bilibili.dynamic.interfaces.feed.v1.Feed.Suggest:output_type -> bilibili.dynamic.interfaces.feed.v1.SuggestRsp
	101, // [101:129] is the sub-list for method output_type
	73,  // [73:101] is the sub-list for method input_type
	73,  // [73:73] is the sub-list for extension type_name
	73,  // [73:73] is the sub-list for extension extendee
	0,   // [0:73] is the sub-list for field type_name
}

func init() { file_bilibili_dynamic_interfaces_feed_v1_api_proto_init() }
func file_bilibili_dynamic_interfaces_feed_v1_api_proto_init() {
	if File_bilibili_dynamic_interfaces_feed_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDynamicReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDynamicReportRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdInfoDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachCardButtonReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttachCardButtonRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigAB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDynReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInitCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePageCommercialInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePageInfosReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePageInfosRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePageTopicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePermissionButtonClickReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePermissionButtonClickRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlusButtonClickReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlusButtonClickRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicButtonClickReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicButtonClickRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicRepostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicThumbReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DynamicThumbRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDynReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditDynRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEditDynInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEditDynInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsAttachCardPreviewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsAttachCardPreviewRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBubbleReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeBubbleReportRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotSearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotSearchRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ICreateGoodsReplySyncReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ICreateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LbsLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearbyPoiDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearbyPoiListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearbyPoiListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearbyPoiListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoiDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoiId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PoiListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveButtonClickReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveButtonClickResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReserveCalendarInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmDynReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmDynRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmSpaceTopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RmSpaceTopRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPoiListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPoiListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceTopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceTopRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitCheckRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotSearchRsp_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bilibili_dynamic_interfaces_feed_v1_api_proto_goTypes,
		DependencyIndexes: file_bilibili_dynamic_interfaces_feed_v1_api_proto_depIdxs,
		EnumInfos:         file_bilibili_dynamic_interfaces_feed_v1_api_proto_enumTypes,
		MessageInfos:      file_bilibili_dynamic_interfaces_feed_v1_api_proto_msgTypes,
	}.Build()
	File_bilibili_dynamic_interfaces_feed_v1_api_proto = out.File
	file_bilibili_dynamic_interfaces_feed_v1_api_proto_rawDesc = nil
	file_bilibili_dynamic_interfaces_feed_v1_api_proto_goTypes = nil
	file_bilibili_dynamic_interfaces_feed_v1_api_proto_depIdxs = nil
}
